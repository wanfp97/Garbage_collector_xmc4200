   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_EnableClock:
  25              	.LFB153:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2019-03-30
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2019-03-30:
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed XMC_CCU4_StartPrescaler(), XMC_CCU4_StopPrescaler(), XMC_CCU4_EnableMultipleClocks
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed XMC_CCU4_SLICE_SetEvent(), XMC_CCU4_SLICE_ClearEvent() to avoid RMW access
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SetSuspendMode(), XMC_CCU4_SLICE_GetPrescaler()
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2019-07-29:
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_GetStatus()
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 569:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 570:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 571:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 573:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 574:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 575:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 576:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 577:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 578:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 579:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 580:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 583:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 584:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 585:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 586:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 588:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 589:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 590:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 591:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 592:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 593:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 594:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 595:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 596:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 597:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 599:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 600:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 601:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 602:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 603:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 604:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 605:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 606:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 607:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 608:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 609:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 610:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 611:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 612:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects suspend mode
 613:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 614:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SUSPEND_MODE
 615:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 616:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_IGNORE = 0 << CCU4_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 617:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU4_GCTRL_SUSCFG_Pos, /**< Stops all the running
 618:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_SAFE_STOP = 2 << CCU4_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 619:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU4_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 620:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SUSPEND_MODE_t;
 621:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 622:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 624:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 slice status bit
 625:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 626:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_STATUS_BIT
 627:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 628:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 629:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 630:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_STATUS_BIT_t;
 631:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 632:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 633:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 634:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 635:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 636:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 637:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 638:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 639:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 640:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 641:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 642:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 643:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 644:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 645:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 646:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 647:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 648:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 649:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 650:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 651:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 653:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 654:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 655:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 656:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 657:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 658:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 659:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 660:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 661:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 662:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 663:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 664:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 665:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 666:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 667:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 668:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 669:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 670:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 671:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 672:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 673:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 674:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 675:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 676:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 677:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 678:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 679:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 680:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 681:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 682:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 683:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 684:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 685:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 686:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 687:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 688:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 689:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 690:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 691:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 692:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 693:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 694:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 695:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 696:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 697:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 698:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 699:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 700:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 701:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 702:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 703:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 704:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 705:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 706:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 707:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 708:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 709:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 710:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 711:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 712:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 713:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 714:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 715:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 716:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 717:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 718:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 719:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 720:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 721:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 722:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 723:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 724:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 725:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 726:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 727:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 728:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 729:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 730:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 731:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 732:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 733:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 734:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 735:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 736:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 737:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 738:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 739:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 740:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 741:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 742:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 743:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 744:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 745:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 746:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 747:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 748:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 749:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 750:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 751:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 752:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 753:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 754:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 755:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 756:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 757:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 758:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 759:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 760:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 761:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 762:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 763:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 764:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 765:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 766:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 767:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 768:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 769:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 770:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 771:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 773:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 774:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 775:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 776:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 777:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 778:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 779:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 780:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 781:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 782:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 783:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 785:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 786:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 787:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 788:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 789:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 790:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 791:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 792:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 793:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 794:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 795:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 796:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 797:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 798:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 799:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 800:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 801:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 802:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 803:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 804:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 805:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 806:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 807:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 808:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 809:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 810:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 811:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 812:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 813:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 814:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 815:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 816:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 817:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 818:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 819:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 820:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 821:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 822:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 823:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 824:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 825:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 826:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 827:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 828:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 829:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 830:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 831:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 832:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 833:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 834:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 836:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 837:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 838:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 839:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 840:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 841:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 842:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 843:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 844:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 845:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 846:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 847:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 848:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 849:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 850:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 851:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 852:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 853:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 854:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 855:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 856:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 857:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 858:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 859:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 860:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 861:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 862:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 863:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 864:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 865:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 866:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 867:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 868:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 869:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 870:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 871:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 872:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 873:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 874:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 875:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 876:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 877:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 878:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 879:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 880:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 881:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 882:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 883:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 884:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 885:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 886:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 887:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 888:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 889:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 890:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 891:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 892:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 893:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 894:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 895:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = (uint32_t) CCU4_GIDLC_SPRB_Msk;
 896:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 897:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 898:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 899:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 900:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 901:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 902:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 903:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 904:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 905:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 906:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 907:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 908:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 911:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 912:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 913:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 914:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 915:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS = (uint32_t) CCU4_GIDLS_CPRB_Msk;
 916:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 917:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 918:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 919:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 920:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 921:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 922:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 923:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 924:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 925:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 926:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 927:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 929:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 930:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 931:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 932:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 933:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 934:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 935:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 936:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 937:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 938:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 939:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 940:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 941:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 942:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 943:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 944:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 945:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 946:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 947:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 948:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 949:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 950:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 951:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 952:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 953:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 954:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 955:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 956:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 957:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 958:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 959:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = (uint32_t) clock_mask;
 960:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 961:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 962:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 963:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 964:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 965:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 966:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 967:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 968:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 969:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 970:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 971:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 972:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 973:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 974:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 975:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 976:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 977:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 978:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 979:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 979 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 980:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 981:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 982:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 983:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC = ((uint32_t) 1) << slice_number;
  45              	 .loc 1 983 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 DA60     	 str r2,[r3,#12]
 984:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  51              	 .loc 1 984 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE153:
  67              	 .section .text.XMC_CCU4_DisableClock,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_CCU4_DisableClock:
  73              	.LFB154:
 985:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 986:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 987:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 988:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 989:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 990:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 991:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 992:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 993:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 994:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 995:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 996:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 997:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 998:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 999:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1000:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1001:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
1002:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1003:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
1004:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  74              	 .loc 1 1004 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
1005:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
1006:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
1007:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1008:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS = ((uint32_t) 1) << slice_number;
  92              	 .loc 1 1008 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 0122     	 movs r2,#1
  95 0010 9A40     	 lsls r2,r2,r3
  96 0012 7B68     	 ldr r3,[r7,#4]
  97 0014 9A60     	 str r2,[r3,#8]
1009:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  98              	 .loc 1 1009 0
  99 0016 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 0018 BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001a 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 001e 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE154:
 114              	 .section .text.XMC_CCU4_SLICE_IsTimerRunning,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_CCU4_SLICE_IsTimerRunning:
 120              	.LFB159:
1010:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1011:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1012:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU8 module
1013:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode   Selects suspend mode
1014:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1015:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1016:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1017:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1018:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1019:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1020:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1021:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
1022:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1023:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SetSuspendMode(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SUSPEN
1024:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1025:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
1026:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU4_GCTRL_SUSCFG_Msk) | mode;
1027:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1028:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1029:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1030:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1031:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
1032:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1033:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1034:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1035:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1036:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
1037:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
1038:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
1039:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
1040:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
1041:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1042:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1043:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
1044:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1045:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
1046:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1047:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1048:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1049:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1050:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1051:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1052:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1053:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1054:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1055:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1056:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1057:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1058:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1059:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1060:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1061:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1062:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1063:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1064:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1065:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1066:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1067:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1068:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1069:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1070:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1071:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1072:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1073:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1074:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1075:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1076:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1077:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1078:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1079:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1080:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1081:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1082:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1083:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1084:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1085:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1086:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1087:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1088:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1089:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1090:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1091:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1092:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1093:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1094:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1095:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1096:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1097:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1098:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1099:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 121              	 .loc 1 1448 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
1449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
 137              	 .loc 1 1450 0
 138 0008 7B68     	 ldr r3,[r7,#4]
 139 000a 9B68     	 ldr r3,[r3,#8]
 140 000c 03F00103 	 and r3,r3,#1
 141 0010 002B     	 cmp r3,#0
 142 0012 14BF     	 ite ne
 143 0014 0123     	 movne r3,#1
 144 0016 0023     	 moveq r3,#0
 145 0018 DBB2     	 uxtb r3,r3
1451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 146              	 .loc 1 1451 0
 147 001a 1846     	 mov r0,r3
 148 001c 0C37     	 adds r7,r7,#12
 149              	.LCFI15:
 150              	 .cfi_def_cfa_offset 4
 151 001e BD46     	 mov sp,r7
 152              	.LCFI16:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 0020 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI17:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 0024 7047     	 bx lr
 160              	 .cfi_endproc
 161              	.LFE159:
 163 0026 00BF     	 .section .text.XMC_CCU4_SLICE_StartTimer,"ax",%progbits
 164              	 .align 2
 165              	 .thumb
 166              	 .thumb_func
 168              	XMC_CCU4_SLICE_StartTimer:
 169              	.LFB161:
1452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 170              	 .loc 1 1486 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174              	 
 175 0000 80B4     	 push {r7}
 176              	.LCFI18:
 177              	 .cfi_def_cfa_offset 4
 178              	 .cfi_offset 7,-4
 179 0002 83B0     	 sub sp,sp,#12
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
1487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
 186              	 .loc 1 1488 0
 187 0008 7B68     	 ldr r3,[r7,#4]
 188 000a 0122     	 movs r2,#1
 189 000c DA60     	 str r2,[r3,#12]
1489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 190              	 .loc 1 1489 0
 191 000e 0C37     	 adds r7,r7,#12
 192              	.LCFI21:
 193              	 .cfi_def_cfa_offset 4
 194 0010 BD46     	 mov sp,r7
 195              	.LCFI22:
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0012 5DF8047B 	 ldr r7,[sp],#4
 199              	.LCFI23:
 200              	 .cfi_restore 7
 201              	 .cfi_def_cfa_offset 0
 202 0016 7047     	 bx lr
 203              	 .cfi_endproc
 204              	.LFE161:
 206              	 .section .text.XMC_CCU4_SLICE_StopTimer,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	XMC_CCU4_SLICE_StopTimer:
 212              	.LFB162:
1490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 213              	 .loc 1 1504 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217              	 
 218 0000 80B4     	 push {r7}
 219              	.LCFI24:
 220              	 .cfi_def_cfa_offset 4
 221              	 .cfi_offset 7,-4
 222 0002 83B0     	 sub sp,sp,#12
 223              	.LCFI25:
 224              	 .cfi_def_cfa_offset 16
 225 0004 00AF     	 add r7,sp,#0
 226              	.LCFI26:
 227              	 .cfi_def_cfa_register 7
 228 0006 7860     	 str r0,[r7,#4]
1505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
 229              	 .loc 1 1506 0
 230 0008 7B68     	 ldr r3,[r7,#4]
 231 000a 0122     	 movs r2,#1
 232 000c 1A61     	 str r2,[r3,#16]
1507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 233              	 .loc 1 1507 0
 234 000e 0C37     	 adds r7,r7,#12
 235              	.LCFI27:
 236              	 .cfi_def_cfa_offset 4
 237 0010 BD46     	 mov sp,r7
 238              	.LCFI28:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 0012 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI29:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 0016 7047     	 bx lr
 246              	 .cfi_endproc
 247              	.LFE162:
 249              	 .section .text.XMC_CCU4_SLICE_ClearTimer,"ax",%progbits
 250              	 .align 2
 251              	 .thumb
 252              	 .thumb_func
 254              	XMC_CCU4_SLICE_ClearTimer:
 255              	.LFB163:
1508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 256              	 .loc 1 1523 0
 257              	 .cfi_startproc
 258              	 
 259              	 
 260              	 
 261 0000 80B4     	 push {r7}
 262              	.LCFI30:
 263              	 .cfi_def_cfa_offset 4
 264              	 .cfi_offset 7,-4
 265 0002 83B0     	 sub sp,sp,#12
 266              	.LCFI31:
 267              	 .cfi_def_cfa_offset 16
 268 0004 00AF     	 add r7,sp,#0
 269              	.LCFI32:
 270              	 .cfi_def_cfa_register 7
 271 0006 7860     	 str r0,[r7,#4]
1524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
 272              	 .loc 1 1525 0
 273 0008 7B68     	 ldr r3,[r7,#4]
 274 000a 0222     	 movs r2,#2
 275 000c 1A61     	 str r2,[r3,#16]
1526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 276              	 .loc 1 1526 0
 277 000e 0C37     	 adds r7,r7,#12
 278              	.LCFI33:
 279              	 .cfi_def_cfa_offset 4
 280 0010 BD46     	 mov sp,r7
 281              	.LCFI34:
 282              	 .cfi_def_cfa_register 13
 283              	 
 284 0012 5DF8047B 	 ldr r7,[sp],#4
 285              	.LCFI35:
 286              	 .cfi_restore 7
 287              	 .cfi_def_cfa_offset 0
 288 0016 7047     	 bx lr
 289              	 .cfi_endproc
 290              	.LFE163:
 292              	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
 293              	 .align 2
 294              	 .thumb
 295              	 .thumb_func
 297              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
 298              	.LFB168:
1527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1569:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1570:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1571:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1572:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1573:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1574:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1575:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1576:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1577:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1578:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1579:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1580:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1581:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1582:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1583:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1584:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1585:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1586:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1587:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1588:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1589:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1590:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1591:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1592:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1593:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1594:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1595:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1596:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1597:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1598:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1599:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1600:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1601:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1602:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1603:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1604:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1605:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1606:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1607:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1608:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1609:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1610:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1611:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1612:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1613:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1614:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1615:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1616:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1617:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1618:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1619:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1620:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1621:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1622:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1623:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1624:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1625:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1626:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1627:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1628:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1629:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1630:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1631:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1632:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1633:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1634:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1635:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1636:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1637:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1638:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1639:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1640:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1641:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1642:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1643:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1644:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1647:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1649:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1650:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1651:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1652:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1653:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1654:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1655:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1656:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1657:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1658:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 299              	 .loc 1 1658 0
 300              	 .cfi_startproc
 301              	 
 302              	 
 303              	 
 304 0000 80B4     	 push {r7}
 305              	.LCFI36:
 306              	 .cfi_def_cfa_offset 4
 307              	 .cfi_offset 7,-4
 308 0002 83B0     	 sub sp,sp,#12
 309              	.LCFI37:
 310              	 .cfi_def_cfa_offset 16
 311 0004 00AF     	 add r7,sp,#0
 312              	.LCFI38:
 313              	 .cfi_def_cfa_register 7
 314 0006 7860     	 str r0,[r7,#4]
 315 0008 0B46     	 mov r3,r1
 316 000a 7B80     	 strh r3,[r7,#2]
1659:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1660:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
 317              	 .loc 1 1660 0
 318 000c 7A88     	 ldrh r2,[r7,#2]
 319 000e 7B68     	 ldr r3,[r7,#4]
 320 0010 5A63     	 str r2,[r3,#52]
1661:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 321              	 .loc 1 1661 0
 322 0012 0C37     	 adds r7,r7,#12
 323              	.LCFI39:
 324              	 .cfi_def_cfa_offset 4
 325 0014 BD46     	 mov sp,r7
 326              	.LCFI40:
 327              	 .cfi_def_cfa_register 13
 328              	 
 329 0016 5DF8047B 	 ldr r7,[sp],#4
 330              	.LCFI41:
 331              	 .cfi_restore 7
 332              	 .cfi_def_cfa_offset 0
 333 001a 7047     	 bx lr
 334              	 .cfi_endproc
 335              	.LFE168:
 337              	 .section .text.XMC_CCU4_SLICE_SetTimerCompareMatch,"ax",%progbits
 338              	 .align 2
 339              	 .thumb
 340              	 .thumb_func
 342              	XMC_CCU4_SLICE_SetTimerCompareMatch:
 343              	.LFB170:
1662:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1663:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1664:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1665:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1666:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1667:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1668:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1669:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1670:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1671:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1672:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1673:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1674:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1675:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1676:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1677:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1678:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1679:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1680:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1681:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1682:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1683:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1684:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1685:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1686:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1687:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1688:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1689:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1690:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1691:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1692:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1693:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1694:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1695:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1696:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1697:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1698:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1699:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1700:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1701:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1702:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1703:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1704:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1705:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1706:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 344              	 .loc 1 1706 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348              	 
 349 0000 80B4     	 push {r7}
 350              	.LCFI42:
 351              	 .cfi_def_cfa_offset 4
 352              	 .cfi_offset 7,-4
 353 0002 83B0     	 sub sp,sp,#12
 354              	.LCFI43:
 355              	 .cfi_def_cfa_offset 16
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI44:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
 360 0008 0B46     	 mov r3,r1
 361 000a 7B80     	 strh r3,[r7,#2]
1707:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1708:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
 362              	 .loc 1 1708 0
 363 000c 7A88     	 ldrh r2,[r7,#2]
 364 000e 7B68     	 ldr r3,[r7,#4]
 365 0010 DA63     	 str r2,[r3,#60]
1709:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 366              	 .loc 1 1709 0
 367 0012 0C37     	 adds r7,r7,#12
 368              	.LCFI45:
 369              	 .cfi_def_cfa_offset 4
 370 0014 BD46     	 mov sp,r7
 371              	.LCFI46:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 0016 5DF8047B 	 ldr r7,[sp],#4
 375              	.LCFI47:
 376              	 .cfi_restore 7
 377              	 .cfi_def_cfa_offset 0
 378 001a 7047     	 bx lr
 379              	 .cfi_endproc
 380              	.LFE170:
 382              	 .section .text.XMC_CCU4_EnableShadowTransfer,"ax",%progbits
 383              	 .align 2
 384              	 .thumb
 385              	 .thumb_func
 387              	XMC_CCU4_EnableShadowTransfer:
 388              	.LFB172:
1710:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1711:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1712:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1713:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1714:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1715:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1716:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1717:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1718:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1719:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1720:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1721:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1722:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1723:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1724:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1725:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1726:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1727:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1728:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1729:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1730:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1731:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1732:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1733:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1734:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1735:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1736:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1737:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1738:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1739:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1740:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1741:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1742:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1743:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1744:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1745:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1746:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1747:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1748:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1749:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1750:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1751:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1752:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1753:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1754:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1755:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1756:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1757:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1758:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1759:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1760:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 389              	 .loc 1 1760 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393              	 
 394 0000 80B4     	 push {r7}
 395              	.LCFI48:
 396              	 .cfi_def_cfa_offset 4
 397              	 .cfi_offset 7,-4
 398 0002 83B0     	 sub sp,sp,#12
 399              	.LCFI49:
 400              	 .cfi_def_cfa_offset 16
 401 0004 00AF     	 add r7,sp,#0
 402              	.LCFI50:
 403              	 .cfi_def_cfa_register 7
 404 0006 7860     	 str r0,[r7,#4]
 405 0008 3960     	 str r1,[r7]
1761:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1762:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 406              	 .loc 1 1762 0
 407 000a 7B68     	 ldr r3,[r7,#4]
 408 000c 3A68     	 ldr r2,[r7]
 409 000e 1A61     	 str r2,[r3,#16]
1763:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 410              	 .loc 1 1763 0
 411 0010 0C37     	 adds r7,r7,#12
 412              	.LCFI51:
 413              	 .cfi_def_cfa_offset 4
 414 0012 BD46     	 mov sp,r7
 415              	.LCFI52:
 416              	 .cfi_def_cfa_register 13
 417              	 
 418 0014 5DF8047B 	 ldr r7,[sp],#4
 419              	.LCFI53:
 420              	 .cfi_restore 7
 421              	 .cfi_def_cfa_offset 0
 422 0018 7047     	 bx lr
 423              	 .cfi_endproc
 424              	.LFE172:
 426 001a 00BF     	 .section .text.XMC_CCU4_SLICE_EnableEvent,"ax",%progbits
 427              	 .align 2
 428              	 .thumb
 429              	 .thumb_func
 431              	XMC_CCU4_SLICE_EnableEvent:
 432              	.LFB183:
1764:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1765:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1766:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1767:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1768:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1769:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1770:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1771:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1772:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1773:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1774:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1775:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1776:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1777:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1778:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1779:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1780:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1781:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1782:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1783:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1784:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1785:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1786:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1787:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1788:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1789:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1790:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1791:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1792:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1793:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1794:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1795:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1797:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1798:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1799:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1800:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1801:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1802:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1803:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1804:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1805:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1806:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1807:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1808:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1809:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1810:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1811:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1812:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1813:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1814:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1815:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1816:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1817:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1818:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1819:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1820:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1821:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1822:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1823:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1824:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1825:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1826:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1827:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1828:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1829:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1830:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1831:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1832:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1833:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1834:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1835:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1836:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1837:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1838:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1839:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1840:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1841:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1842:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1843:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1844:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1845:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1846:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1847:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1848:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1849:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1850:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1851:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1852:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1853:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1854:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1855:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1856:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1857:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1858:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1859:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1860:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1861:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1862:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1863:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1864:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1865:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1866:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1867:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1868:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1869:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1870:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1871:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1872:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1873:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1874:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1875:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1876:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1877:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1878:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1879:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1880:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1881:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1882:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1883:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1884:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1885:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1886:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1887:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1888:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1889:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1890:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1891:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1892:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1893:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1894:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1895:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1896:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1897:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1898:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1899:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1900:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1901:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1902:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1903:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1904:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1905:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1906:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1907:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1908:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1909:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1910:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1911:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1912:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1913:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1914:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1915:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1916:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t
1917:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1918:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1919:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1920:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1921:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1922:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1923:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1924:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1925:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1926:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1927:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1928:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1929:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1930:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1931:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1932:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1933:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1934:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_PRESCALER_t Prescaler divider value.<BR>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1936:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1937:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns current prescaler value.\n\n
1938:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / XM
1939:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1940:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1941:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1942:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1943:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_PRESCALER_t XMC_CCU4_SLICE_GetPrescaler(XMC_CCU4_SLICE_t *const slic
1944:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1945:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1946:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1947:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (XMC_CCU4_SLICE_PRESCALER_t)slice->PSC;
1948:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1949:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1950:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1951:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1952:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1953:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1954:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1955:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1956:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1957:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1958:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1959:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1960:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1961:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1962:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1963:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1964:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1965:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1966:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1967:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1968:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1969:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1970:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_IsVa
1971:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   /*  write to the shadow register */
1972:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1973:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1974:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1975:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1976:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1977:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1978:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1979:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1980:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1981:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1982:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1983:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1984:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1985:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1986:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1988:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1989:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1990:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1991:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1992:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(s
1993:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1994:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1995:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1996:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1997:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1998:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1999:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2000:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2001:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2002:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
2003:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
2004:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2005:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2006:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
2007:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2008:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
2009:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2010:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
2011:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
2012:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2013:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2014:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2015:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
2016:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2017:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2018:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
2019:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2020:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2021:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2022:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2023:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2024:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2025:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
2026:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2027:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2028:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
2029:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** */
2030:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
2031:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2032:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2033:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2034:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2035:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                Range: [0,3]
2036:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2037:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
2038:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
2039:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2040:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2041:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
2042:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2043:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2044:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2045:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
2046:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2047:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2048:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
2049:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2050:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
2051:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2052:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2053:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2054:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
2055:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2056:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2057:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS_t Returns XMC_CCU4_STATUS_OK if there was new value present in the capture
2058:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
2059:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2060:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2061:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
2062:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2063:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
2064:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * evaluated.\n
2065:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2066:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * capture registers have been evaluated.
2067:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2068:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2069:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
2070:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2071:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
2072:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
2073:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
2074:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2075:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2076:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2077:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2078:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2079:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2080:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2081:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2082:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
2083:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2084:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2085:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2086:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2087:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
2088:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2089:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2090:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
2091:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
2092:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 433              	 .loc 1 2092 0
 434              	 .cfi_startproc
 435              	 
 436              	 
 437              	 
 438 0000 80B4     	 push {r7}
 439              	.LCFI54:
 440              	 .cfi_def_cfa_offset 4
 441              	 .cfi_offset 7,-4
 442 0002 83B0     	 sub sp,sp,#12
 443              	.LCFI55:
 444              	 .cfi_def_cfa_offset 16
 445 0004 00AF     	 add r7,sp,#0
 446              	.LCFI56:
 447              	 .cfi_def_cfa_register 7
 448 0006 7860     	 str r0,[r7,#4]
 449 0008 0B46     	 mov r3,r1
 450 000a FB70     	 strb r3,[r7,#3]
2093:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2094:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2095:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 451              	 .loc 1 2095 0
 452 000c 7B68     	 ldr r3,[r7,#4]
 453 000e D3F8A420 	 ldr r2,[r3,#164]
 454 0012 FB78     	 ldrb r3,[r7,#3]
 455 0014 0121     	 movs r1,#1
 456 0016 01FA03F3 	 lsl r3,r1,r3
 457 001a 1A43     	 orrs r2,r2,r3
 458 001c 7B68     	 ldr r3,[r7,#4]
 459 001e C3F8A420 	 str r2,[r3,#164]
2096:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 460              	 .loc 1 2096 0
 461 0022 0C37     	 adds r7,r7,#12
 462              	.LCFI57:
 463              	 .cfi_def_cfa_offset 4
 464 0024 BD46     	 mov sp,r7
 465              	.LCFI58:
 466              	 .cfi_def_cfa_register 13
 467              	 
 468 0026 5DF8047B 	 ldr r7,[sp],#4
 469              	.LCFI59:
 470              	 .cfi_restore 7
 471              	 .cfi_def_cfa_offset 0
 472 002a 7047     	 bx lr
 473              	 .cfi_endproc
 474              	.LFE183:
 476              	 .section .text.XMC_CCU4_SLICE_ClearEvent,"ax",%progbits
 477              	 .align 2
 478              	 .thumb
 479              	 .thumb_func
 481              	XMC_CCU4_SLICE_ClearEvent:
 482              	.LFB188:
2097:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2098:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2099:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param intr_mask Event mask such that multiple events can be enabled.
2101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  using a bit wise OR operation.
2103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC4yINTE re
2108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_DisableEv
2113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint1
2116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
2118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= (uint32_t)intr_mask;
2119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC4yINTE register.\n\n
2129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Prevents the event from being asserted
2130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableEvent(XMC_CCU4_SLICE_t *const slice,
2136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                  const XMC_CCU4_SLICE_IRQ_ID_t event)
2137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event))
2140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mask Event mask such that multiple events can be enabled.
2146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             using a bit wise OR operation.
2148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC4yINTE reg
2153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prevents selected events of the slice from being asserted.
2154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableEvent().
2158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint
2160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
2162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~((uint32_t) mask);
2163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Manually asserts the requested event, by setting CC4ySWS register.\n\n
2173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IR
2180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWS = ((uint32_t) 1) << ((uint32_t) event);
2184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Asserted event which must be acknowledged.
2189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Acknowledges an asserted event, by setting CC4ySWR with respective event flag.\n\n
2194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent()<BR> XMC_CCU4_SLICE_GetEvent().
2197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_
2199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 483              	 .loc 1 2199 0
 484              	 .cfi_startproc
 485              	 
 486              	 
 487              	 
 488 0000 80B4     	 push {r7}
 489              	.LCFI60:
 490              	 .cfi_def_cfa_offset 4
 491              	 .cfi_offset 7,-4
 492 0002 83B0     	 sub sp,sp,#12
 493              	.LCFI61:
 494              	 .cfi_def_cfa_offset 16
 495 0004 00AF     	 add r7,sp,#0
 496              	.LCFI62:
 497              	 .cfi_def_cfa_register 7
 498 0006 7860     	 str r0,[r7,#4]
 499 0008 0B46     	 mov r3,r1
 500 000a FB70     	 strb r3,[r7,#3]
2200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWR = ((uint32_t) 1) << ((uint32_t) event);
 501              	 .loc 1 2202 0
 502 000c FB78     	 ldrb r3,[r7,#3]
 503 000e 0122     	 movs r2,#1
 504 0010 9A40     	 lsls r2,r2,r3
 505 0012 7B68     	 ldr r3,[r7,#4]
 506 0014 C3F8B020 	 str r2,[r3,#176]
2203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 507              	 .loc 1 2203 0
 508 0018 0C37     	 adds r7,r7,#12
 509              	.LCFI63:
 510              	 .cfi_def_cfa_offset 4
 511 001a BD46     	 mov sp,r7
 512              	.LCFI64:
 513              	 .cfi_def_cfa_register 13
 514              	 
 515 001c 5DF8047B 	 ldr r7,[sp],#4
 516              	.LCFI65:
 517              	 .cfi_restore 7
 518              	 .cfi_def_cfa_offset 0
 519 0020 7047     	 bx lr
 520              	 .cfi_endproc
 521              	.LFE188:
 523 0022 00BF     	 .section .text.XMC_CCU4_SLICE_GetEvent,"ax",%progbits
 524              	 .align 2
 525              	 .thumb
 526              	 .thumb_func
 528              	XMC_CCU4_SLICE_GetEvent:
 529              	.LFB189:
2204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event to be evaluated for assertion
2208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
2209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *         bool  Returns true if event is set else false is returned.
2210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Evaluates if a given event is asserted or not, by reading CC4yINTS register.\n\n
2213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent().
2219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_GetEvent(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SL
2221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 530              	 .loc 1 2221 0
 531              	 .cfi_startproc
 532              	 
 533              	 
 534              	 
 535 0000 80B4     	 push {r7}
 536              	.LCFI66:
 537              	 .cfi_def_cfa_offset 4
 538              	 .cfi_offset 7,-4
 539 0002 83B0     	 sub sp,sp,#12
 540              	.LCFI67:
 541              	 .cfi_def_cfa_offset 16
 542 0004 00AF     	 add r7,sp,#0
 543              	.LCFI68:
 544              	 .cfi_def_cfa_register 7
 545 0006 7860     	 str r0,[r7,#4]
 546 0008 0B46     	 mov r3,r1
 547 000a FB70     	 strb r3,[r7,#3]
2222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << (uint32_t)event))) != 0U);
 548              	 .loc 1 2225 0
 549 000c 7B68     	 ldr r3,[r7,#4]
 550 000e D3F8A020 	 ldr r2,[r3,#160]
 551 0012 FB78     	 ldrb r3,[r7,#3]
 552 0014 22FA03F3 	 lsr r3,r2,r3
 553 0018 03F00103 	 and r3,r3,#1
 554 001c 002B     	 cmp r3,#0
 555 001e 14BF     	 ite ne
 556 0020 0123     	 movne r3,#1
 557 0022 0023     	 moveq r3,#0
 558 0024 DBB2     	 uxtb r3,r3
2226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 559              	 .loc 1 2226 0
 560 0026 1846     	 mov r0,r3
 561 0028 0C37     	 adds r7,r7,#12
 562              	.LCFI69:
 563              	 .cfi_def_cfa_offset 4
 564 002a BD46     	 mov sp,r7
 565              	.LCFI70:
 566              	 .cfi_def_cfa_register 13
 567              	 
 568 002c 5DF8047B 	 ldr r7,[sp],#4
 569              	.LCFI71:
 570              	 .cfi_restore 7
 571              	 .cfi_def_cfa_offset 0
 572 0030 7047     	 bx lr
 573              	 .cfi_endproc
 574              	.LFE189:
 576 0032 00BF     	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
 577              	 .align 2
 578              	 .thumb
 579              	 .thumb_func
 581              	XMC_CCU8_EnableClock:
 582              	.LFB240:
 583              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-07-29
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-07-29:
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU4_SLICE_GetStatus()
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 569:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 570:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 571:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 572:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 573:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 574:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 575:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 576:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 577:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 578:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 579:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 580:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 581:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 582:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 583:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 584:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 585:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 586:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 587:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 588:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 589:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 590:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 591:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 592:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 593:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 594:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 595:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 596:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 599:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 600:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 601:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 602:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 603:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 604:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 605:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 606:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 607:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 608:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 609:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 610:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 611:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 612:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 613:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 614:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 615:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 616:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 617:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 618:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 619:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 620:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 621:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 622:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 623:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 624:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 625:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 626:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 627:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 628:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 629:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 630:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 631:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 632:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 633:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 634:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 635:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 636:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 637:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 638:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 639:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 640:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 641:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 642:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 643:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 644:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 645:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 646:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 647:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 648:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 649:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 650:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 651:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 652:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 653:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 654:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 655:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 656:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 657:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 658:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 659:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 660:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 661:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 662:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 664:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 665:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 666:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 667:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 668:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 669:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 670:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 671:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 672:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 673:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 674:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 675:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 676:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 677:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 678:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 679:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 680:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 681:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 682:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 683:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 684:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 685:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 686:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 687:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 688:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 689:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 690:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 691:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 692:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 693:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 694:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 695:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 696:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 697:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 698:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 699:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 700:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 701:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 702:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 703:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 704:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 705:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 706:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 707:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 708:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 709:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 710:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 711:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 712:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 713:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 714:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 715:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 716:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 717:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 718:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 719:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 720:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 721:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 722:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 723:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 724:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 725:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 726:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 727:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 729:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 730:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 731:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 732:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 733:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 734:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 735:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 736:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 737:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 738:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 739:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 740:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 741:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 742:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 743:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 744:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 745:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 746:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 747:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 748:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 749:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 750:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 751:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 752:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 753:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 754:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 755:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 756:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 757:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 758:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 759:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 760:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 761:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 762:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 764:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 765:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 766:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 767:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 769:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 770:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 773:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 774:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 775:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 776:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 777:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 778:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 779:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 780:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 781:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 782:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 783:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 784:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 785:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 786:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 787:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 788:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 789:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 790:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 791:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 792:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 793:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 794:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 795:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 796:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 797:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 798:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 799:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 800:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 801:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 802:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 803:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 804:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 805:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 806:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 807:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 808:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 809:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 810:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 811:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 812:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 813:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 814:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 815:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 816:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 817:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 818:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 819:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 820:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 821:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 822:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 823:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 824:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 825:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 826:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 827:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 828:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 829:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 830:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 831:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 832:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 833:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 834:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 835:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 836:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 837:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 838:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 839:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 840:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 841:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 842:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice status bit
 843:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */ 
 844:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS_BIT
 845:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 846:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 847:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 848:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_BIT_t;
 849:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 850:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 851:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 852:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 853:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 854:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 855:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 856:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 857:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 858:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 859:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 860:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 861:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 862:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 863:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 864:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 865:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 866:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 867:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 868:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 869:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 870:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 871:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 872:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 873:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 874:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 875:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 876:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 877:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 878:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 879:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 880:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 881:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 882:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 883:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 884:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 885:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 886:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 887:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 888:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 889:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 890:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 891:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 892:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 893:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 894:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 895:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 896:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 897:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 898:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 899:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 900:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 901:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 902:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 903:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 904:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 905:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 906:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 907:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 909:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 910:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 911:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 912:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 913:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 914:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 915:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 916:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 917:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 918:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 919:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 921:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 922:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 923:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 924:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 925:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 926:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 927:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 928:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 929:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 930:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 931:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 932:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 933:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 934:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 935:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 936:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 937:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 938:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 939:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 940:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 941:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 942:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 943:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 944:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 945:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 946:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 947:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 948:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 949:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 950:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 951:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 952:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 953:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 954:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 955:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 956:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 957:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 958:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 959:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 960:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 961:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 962:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 963:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 964:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 965:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 966:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 967:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 968:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 969:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 970:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 971:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 972:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 973:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 974:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 975:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 976:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 977:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 978:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 979:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 980:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 981:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 982:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 983:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 984:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 985:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 986:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 987:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 988:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 989:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 990:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 991:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 992:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 993:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 994:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 995:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 996:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 997:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 998:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 999:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
1000:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
1001:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1002:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1003:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1004:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
1005:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
1006:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1007:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
1008:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
1009:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1010:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
1011:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1012:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
1013:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1014:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1015:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1016:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
1017:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1018:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1019:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1020:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1021:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1022:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1023:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1024:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1025:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1026:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1027:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1028:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1029:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1030:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1031:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1032:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1033:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1034:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1035:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1036:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1037:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1038:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1039:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1040:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1041:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1042:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1043:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1044:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1045:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1046:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1047:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1048:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1049:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1050:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1051:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1052:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1053:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1055:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1056:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1057:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1058:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1059:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1060:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1061:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1062:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1063:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1064:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1065:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1066:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1067:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1068:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1069:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1070:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1071:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1072:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1073:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1074:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1075:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1076:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1077:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1078:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1079:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1080:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1081:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1082:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1083:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1084:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1085:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1086:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1087:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1088:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1089:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1090:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1091:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1092:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1093:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1094:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1095:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1096:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1097:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1098:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1099:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
1188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 584              	 .loc 2 1376 0
 585              	 .cfi_startproc
 586              	 
 587              	 
 588              	 
 589 0000 80B4     	 push {r7}
 590              	.LCFI72:
 591              	 .cfi_def_cfa_offset 4
 592              	 .cfi_offset 7,-4
 593 0002 83B0     	 sub sp,sp,#12
 594              	.LCFI73:
 595              	 .cfi_def_cfa_offset 16
 596 0004 00AF     	 add r7,sp,#0
 597              	.LCFI74:
 598              	 .cfi_def_cfa_register 7
 599 0006 7860     	 str r0,[r7,#4]
 600 0008 0B46     	 mov r3,r1
 601 000a FB70     	 strb r3,[r7,#3]
1377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
 602              	 .loc 2 1380 0
 603 000c FB78     	 ldrb r3,[r7,#3]
 604 000e 0122     	 movs r2,#1
 605 0010 9A40     	 lsls r2,r2,r3
 606 0012 7B68     	 ldr r3,[r7,#4]
 607 0014 DA60     	 str r2,[r3,#12]
1381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 608              	 .loc 2 1381 0
 609 0016 0C37     	 adds r7,r7,#12
 610              	.LCFI75:
 611              	 .cfi_def_cfa_offset 4
 612 0018 BD46     	 mov sp,r7
 613              	.LCFI76:
 614              	 .cfi_def_cfa_register 13
 615              	 
 616 001a 5DF8047B 	 ldr r7,[sp],#4
 617              	.LCFI77:
 618              	 .cfi_restore 7
 619              	 .cfi_def_cfa_offset 0
 620 001e 7047     	 bx lr
 621              	 .cfi_endproc
 622              	.LFE240:
 624              	 .section .text.XMC_CCU8_DisableClock,"ax",%progbits
 625              	 .align 2
 626              	 .thumb
 627              	 .thumb_func
 629              	XMC_CCU8_DisableClock:
 630              	.LFB241:
1382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 631              	 .loc 2 1400 0
 632              	 .cfi_startproc
 633              	 
 634              	 
 635              	 
 636 0000 80B4     	 push {r7}
 637              	.LCFI78:
 638              	 .cfi_def_cfa_offset 4
 639              	 .cfi_offset 7,-4
 640 0002 83B0     	 sub sp,sp,#12
 641              	.LCFI79:
 642              	 .cfi_def_cfa_offset 16
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI80:
 645              	 .cfi_def_cfa_register 7
 646 0006 7860     	 str r0,[r7,#4]
 647 0008 0B46     	 mov r3,r1
 648 000a FB70     	 strb r3,[r7,#3]
1401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
 649              	 .loc 2 1404 0
 650 000c FB78     	 ldrb r3,[r7,#3]
 651 000e 0122     	 movs r2,#1
 652 0010 9A40     	 lsls r2,r2,r3
 653 0012 7B68     	 ldr r3,[r7,#4]
 654 0014 9A60     	 str r2,[r3,#8]
1405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 655              	 .loc 2 1405 0
 656 0016 0C37     	 adds r7,r7,#12
 657              	.LCFI81:
 658              	 .cfi_def_cfa_offset 4
 659 0018 BD46     	 mov sp,r7
 660              	.LCFI82:
 661              	 .cfi_def_cfa_register 13
 662              	 
 663 001a 5DF8047B 	 ldr r7,[sp],#4
 664              	.LCFI83:
 665              	 .cfi_restore 7
 666              	 .cfi_def_cfa_offset 0
 667 001e 7047     	 bx lr
 668              	 .cfi_endproc
 669              	.LFE241:
 671              	 .section .text.XMC_CCU8_SLICE_IsTimerRunning,"ax",%progbits
 672              	 .align 2
 673              	 .thumb
 674              	 .thumb_func
 676              	XMC_CCU8_SLICE_IsTimerRunning:
 677              	.LFB251:
1406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1569:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1570:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1571:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1572:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1573:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1574:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1575:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1576:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1577:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1578:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1579:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1581:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1582:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1583:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1584:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1585:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1586:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1587:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1588:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1589:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1590:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1591:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1592:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1593:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1594:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1595:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1596:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1597:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1598:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1599:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1600:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1601:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1602:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1603:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1604:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1605:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1606:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1607:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1608:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1609:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1610:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1611:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1612:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1613:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1614:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1615:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1616:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1617:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1618:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1619:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1620:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1621:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1622:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1623:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1624:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1625:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1626:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1627:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1628:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1629:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1630:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1631:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1632:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1633:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1634:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1635:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1636:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1637:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1638:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1639:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1640:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1641:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1642:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1643:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1644:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1645:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1646:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1647:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1648:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1649:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1650:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1651:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1652:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1653:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1654:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1655:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1656:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1657:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1658:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1659:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1660:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1661:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1662:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1665:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1666:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1667:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1668:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1670:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1671:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1672:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1673:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1674:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1675:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1676:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1677:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1679:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1680:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1681:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1682:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1683:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1684:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1685:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1686:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1687:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1688:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1689:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1690:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1691:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1692:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1693:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1694:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1695:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1696:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1697:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1698:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1699:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1700:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1701:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1702:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1703:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1704:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1705:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1706:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1707:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1708:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1709:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1711:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1712:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1713:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1714:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1715:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1716:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1717:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1718:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1719:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1720:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1721:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1722:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1723:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1724:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1726:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1727:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1728:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1729:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1730:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1731:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1732:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1733:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1734:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1735:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1736:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1737:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1738:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1739:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1740:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1741:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1742:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1743:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1744:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1745:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1746:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1747:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1748:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1749:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1750:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1751:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1752:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1753:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1754:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1755:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1756:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1757:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1758:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1759:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1760:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1761:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1762:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1763:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1764:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1765:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1766:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1767:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1768:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1769:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1770:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1771:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1772:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1773:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1774:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1775:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1776:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1777:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1778:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1779:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1780:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1781:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1782:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1783:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1784:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1785:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1786:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1787:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1788:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1789:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1790:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1791:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1792:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1793:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1794:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1795:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1796:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1797:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1798:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1799:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1800:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1801:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1802:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1804:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1805:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1806:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1807:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1808:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1809:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1810:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1811:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1812:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1813:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1814:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1815:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1816:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1817:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1818:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1819:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1820:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1821:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1822:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1823:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1824:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1825:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1826:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1827:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1828:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1829:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1830:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1831:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1832:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1833:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1834:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1835:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1836:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1837:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1838:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1839:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1840:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1841:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1842:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1843:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1844:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1845:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1846:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1847:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1848:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1849:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1850:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1851:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1852:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1853:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1854:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1855:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1860:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1861:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1862:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1863:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1864:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1866:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1867:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1868:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1869:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1870:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1871:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1872:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1873:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1874:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1875:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1877:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1878:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1879:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1880:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1881:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1882:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1883:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1884:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1885:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1886:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1887:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1888:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1889:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1890:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1891:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1892:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1893:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1894:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1895:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1896:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1897:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1898:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1899:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1900:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1901:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1902:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1903:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1904:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1905:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1906:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1907:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1908:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1909:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1910:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1911:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1912:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1913:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1914:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1915:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1916:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1917:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1918:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1919:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1920:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1921:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1922:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1923:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1924:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1925:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1926:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1927:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1928:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1929:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1930:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1931:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1932:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1933:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1934:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1935:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1936:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1937:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1938:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1939:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1940:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1941:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1942:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1943:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1944:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1945:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1946:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1947:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1948:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1949:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1950:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1951:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1952:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1953:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1954:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1955:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1956:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1957:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1958:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1959:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 678              	 .loc 2 1959 0
 679              	 .cfi_startproc
 680              	 
 681              	 
 682              	 
 683 0000 80B4     	 push {r7}
 684              	.LCFI84:
 685              	 .cfi_def_cfa_offset 4
 686              	 .cfi_offset 7,-4
 687 0002 83B0     	 sub sp,sp,#12
 688              	.LCFI85:
 689              	 .cfi_def_cfa_offset 16
 690 0004 00AF     	 add r7,sp,#0
 691              	.LCFI86:
 692              	 .cfi_def_cfa_register 7
 693 0006 7860     	 str r0,[r7,#4]
1960:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1961:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
 694              	 .loc 2 1961 0
 695 0008 7B68     	 ldr r3,[r7,#4]
 696 000a 9B68     	 ldr r3,[r3,#8]
 697 000c 03F00103 	 and r3,r3,#1
 698 0010 002B     	 cmp r3,#0
 699 0012 14BF     	 ite ne
 700 0014 0123     	 movne r3,#1
 701 0016 0023     	 moveq r3,#0
 702 0018 DBB2     	 uxtb r3,r3
1962:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 703              	 .loc 2 1962 0
 704 001a 1846     	 mov r0,r3
 705 001c 0C37     	 adds r7,r7,#12
 706              	.LCFI87:
 707              	 .cfi_def_cfa_offset 4
 708 001e BD46     	 mov sp,r7
 709              	.LCFI88:
 710              	 .cfi_def_cfa_register 13
 711              	 
 712 0020 5DF8047B 	 ldr r7,[sp],#4
 713              	.LCFI89:
 714              	 .cfi_restore 7
 715              	 .cfi_def_cfa_offset 0
 716 0024 7047     	 bx lr
 717              	 .cfi_endproc
 718              	.LFE251:
 720 0026 00BF     	 .section .text.XMC_CCU8_SLICE_StartTimer,"ax",%progbits
 721              	 .align 2
 722              	 .thumb
 723              	 .thumb_func
 725              	XMC_CCU8_SLICE_StartTimer:
 726              	.LFB255:
1963:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1964:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1965:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1966:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1967:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1968:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1969:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1970:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1971:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1972:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1973:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1974:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1975:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1976:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1977:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1978:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1979:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1980:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1981:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1982:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1983:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1984:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1985:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1986:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1987:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1988:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1989:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1990:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1991:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1992:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1993:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1994:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1995:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1996:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1997:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1998:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1999:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2000:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2001:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2002:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2003:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
2004:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2005:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2006:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
2007:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
2008:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
2009:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2011:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2012:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2013:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2014:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2015:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2016:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
2017:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2018:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2019:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2020:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2021:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2022:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2023:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2024:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2025:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2026:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2027:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2028:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2029:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2030:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2031:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2032:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 727              	 .loc 2 2032 0
 728              	 .cfi_startproc
 729              	 
 730              	 
 731              	 
 732 0000 80B4     	 push {r7}
 733              	.LCFI90:
 734              	 .cfi_def_cfa_offset 4
 735              	 .cfi_offset 7,-4
 736 0002 83B0     	 sub sp,sp,#12
 737              	.LCFI91:
 738              	 .cfi_def_cfa_offset 16
 739 0004 00AF     	 add r7,sp,#0
 740              	.LCFI92:
 741              	 .cfi_def_cfa_register 7
 742 0006 7860     	 str r0,[r7,#4]
2033:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2034:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
 743              	 .loc 2 2034 0
 744 0008 7B68     	 ldr r3,[r7,#4]
 745 000a 0122     	 movs r2,#1
 746 000c DA60     	 str r2,[r3,#12]
2035:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 747              	 .loc 2 2035 0
 748 000e 0C37     	 adds r7,r7,#12
 749              	.LCFI93:
 750              	 .cfi_def_cfa_offset 4
 751 0010 BD46     	 mov sp,r7
 752              	.LCFI94:
 753              	 .cfi_def_cfa_register 13
 754              	 
 755 0012 5DF8047B 	 ldr r7,[sp],#4
 756              	.LCFI95:
 757              	 .cfi_restore 7
 758              	 .cfi_def_cfa_offset 0
 759 0016 7047     	 bx lr
 760              	 .cfi_endproc
 761              	.LFE255:
 763              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 764              	 .align 2
 765              	 .thumb
 766              	 .thumb_func
 768              	XMC_CCU8_SLICE_StopTimer:
 769              	.LFB256:
2036:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2037:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2038:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2039:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2040:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2041:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2042:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2043:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2044:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2045:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2046:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2047:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2048:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2049:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2050:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 770              	 .loc 2 2050 0
 771              	 .cfi_startproc
 772              	 
 773              	 
 774              	 
 775 0000 80B4     	 push {r7}
 776              	.LCFI96:
 777              	 .cfi_def_cfa_offset 4
 778              	 .cfi_offset 7,-4
 779 0002 83B0     	 sub sp,sp,#12
 780              	.LCFI97:
 781              	 .cfi_def_cfa_offset 16
 782 0004 00AF     	 add r7,sp,#0
 783              	.LCFI98:
 784              	 .cfi_def_cfa_register 7
 785 0006 7860     	 str r0,[r7,#4]
2051:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2052:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 786              	 .loc 2 2052 0
 787 0008 7B68     	 ldr r3,[r7,#4]
 788 000a 0122     	 movs r2,#1
 789 000c 1A61     	 str r2,[r3,#16]
2053:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 790              	 .loc 2 2053 0
 791 000e 0C37     	 adds r7,r7,#12
 792              	.LCFI99:
 793              	 .cfi_def_cfa_offset 4
 794 0010 BD46     	 mov sp,r7
 795              	.LCFI100:
 796              	 .cfi_def_cfa_register 13
 797              	 
 798 0012 5DF8047B 	 ldr r7,[sp],#4
 799              	.LCFI101:
 800              	 .cfi_restore 7
 801              	 .cfi_def_cfa_offset 0
 802 0016 7047     	 bx lr
 803              	 .cfi_endproc
 804              	.LFE256:
 806              	 .section .text.XMC_CCU8_SLICE_ClearTimer,"ax",%progbits
 807              	 .align 2
 808              	 .thumb
 809              	 .thumb_func
 811              	XMC_CCU8_SLICE_ClearTimer:
 812              	.LFB257:
2054:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2055:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2056:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2057:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2058:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2059:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2060:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2061:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2062:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2063:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2064:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2065:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2066:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2067:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2068:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2069:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 813              	 .loc 2 2069 0
 814              	 .cfi_startproc
 815              	 
 816              	 
 817              	 
 818 0000 80B4     	 push {r7}
 819              	.LCFI102:
 820              	 .cfi_def_cfa_offset 4
 821              	 .cfi_offset 7,-4
 822 0002 83B0     	 sub sp,sp,#12
 823              	.LCFI103:
 824              	 .cfi_def_cfa_offset 16
 825 0004 00AF     	 add r7,sp,#0
 826              	.LCFI104:
 827              	 .cfi_def_cfa_register 7
 828 0006 7860     	 str r0,[r7,#4]
2070:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2071:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
 829              	 .loc 2 2071 0
 830 0008 7B68     	 ldr r3,[r7,#4]
 831 000a 0222     	 movs r2,#2
 832 000c 1A61     	 str r2,[r3,#16]
2072:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 833              	 .loc 2 2072 0
 834 000e 0C37     	 adds r7,r7,#12
 835              	.LCFI105:
 836              	 .cfi_def_cfa_offset 4
 837 0010 BD46     	 mov sp,r7
 838              	.LCFI106:
 839              	 .cfi_def_cfa_register 13
 840              	 
 841 0012 5DF8047B 	 ldr r7,[sp],#4
 842              	.LCFI107:
 843              	 .cfi_restore 7
 844              	 .cfi_def_cfa_offset 0
 845 0016 7047     	 bx lr
 846              	 .cfi_endproc
 847              	.LFE257:
 849              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 850              	 .align 2
 851              	 .thumb
 852              	 .thumb_func
 854              	XMC_CCU8_EnableShadowTransfer:
 855              	.LFB267:
2073:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2074:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2075:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2076:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2077:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2078:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2079:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2080:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2081:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2082:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2083:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2084:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2085:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2086:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2087:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2088:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2089:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2090:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2091:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2092:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2093:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2094:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2095:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2096:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2097:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2098:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2099:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return 
2324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 856              	 .loc 2 2377 0
 857              	 .cfi_startproc
 858              	 
 859              	 
 860              	 
 861 0000 80B4     	 push {r7}
 862              	.LCFI108:
 863              	 .cfi_def_cfa_offset 4
 864              	 .cfi_offset 7,-4
 865 0002 83B0     	 sub sp,sp,#12
 866              	.LCFI109:
 867              	 .cfi_def_cfa_offset 16
 868 0004 00AF     	 add r7,sp,#0
 869              	.LCFI110:
 870              	 .cfi_def_cfa_register 7
 871 0006 7860     	 str r0,[r7,#4]
 872 0008 3960     	 str r1,[r7]
2378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 873              	 .loc 2 2379 0
 874 000a 7B68     	 ldr r3,[r7,#4]
 875 000c 3A68     	 ldr r2,[r7]
 876 000e 1A61     	 str r2,[r3,#16]
2380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 877              	 .loc 2 2380 0
 878 0010 0C37     	 adds r7,r7,#12
 879              	.LCFI111:
 880              	 .cfi_def_cfa_offset 4
 881 0012 BD46     	 mov sp,r7
 882              	.LCFI112:
 883              	 .cfi_def_cfa_register 13
 884              	 
 885 0014 5DF8047B 	 ldr r7,[sp],#4
 886              	.LCFI113:
 887              	 .cfi_restore 7
 888              	 .cfi_def_cfa_offset 0
 889 0018 7047     	 bx lr
 890              	 .cfi_endproc
 891              	.LFE267:
 893 001a 00BF     	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 894              	 .align 2
 895              	 .thumb
 896              	 .thumb_func
 898              	XMC_CCU8_SLICE_EnableEvent:
 899              	.LFB278:
2381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_PRESCALER_t Prescaler divider value. <BR>
2554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current prescaler value.\n\n
2557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / XM
2558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_PRESCALER_t XMC_CCU8_SLICE_GetPrescaler(XMC_CCU8_SLICE_t *const slic
2563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (XMC_CCU8_SLICE_PRESCALER_t)slice->PSC;
2567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2569:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2570:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2571:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2572:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2573:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2574:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2575:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2576:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2577:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2578:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2579:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2580:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2581:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2582:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2583:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2584:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2585:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2586:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2587:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2588:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2589:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2590:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2591:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2592:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2593:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2594:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2595:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2596:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2597:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2598:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2599:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2600:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2601:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2602:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2603:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2604:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2605:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2606:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2607:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2608:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2609:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2610:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2611:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2612:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2613:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2614:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2615:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2616:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2617:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2618:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2619:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2620:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2621:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2622:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2623:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2624:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2625:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2626:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2627:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2628:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2629:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2630:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2631:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2632:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2633:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2634:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2635:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2636:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2637:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2638:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2639:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2640:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2641:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2642:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2643:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2644:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2645:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2646:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2647:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2648:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2649:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2650:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2651:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2652:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2653:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2654:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2655:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2656:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2657:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2658:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2659:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2660:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2661:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2662:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2663:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2664:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2665:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2666:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2667:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2668:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2669:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2670:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2671:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2672:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2673:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2674:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2675:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2676:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2677:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2678:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2679:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2680:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2681:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2682:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2683:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2684:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2685:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2686:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2687:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2688:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2689:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2690:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2691:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2692:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2693:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2694:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2695:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2696:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2697:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2698:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2699:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2700:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2701:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2702:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2703:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2704:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2705:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2706:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2707:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2708:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2709:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2710:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2711:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2712:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2713:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2714:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2715:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2716:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2717:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2718:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2719:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2720:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 900              	 .loc 2 2720 0
 901              	 .cfi_startproc
 902              	 
 903              	 
 904              	 
 905 0000 80B4     	 push {r7}
 906              	.LCFI114:
 907              	 .cfi_def_cfa_offset 4
 908              	 .cfi_offset 7,-4
 909 0002 83B0     	 sub sp,sp,#12
 910              	.LCFI115:
 911              	 .cfi_def_cfa_offset 16
 912 0004 00AF     	 add r7,sp,#0
 913              	.LCFI116:
 914              	 .cfi_def_cfa_register 7
 915 0006 7860     	 str r0,[r7,#4]
 916 0008 0B46     	 mov r3,r1
 917 000a FB70     	 strb r3,[r7,#3]
2721:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2722:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2723:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2724:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 918              	 .loc 2 2724 0
 919 000c 7B68     	 ldr r3,[r7,#4]
 920 000e D3F8A420 	 ldr r2,[r3,#164]
 921 0012 FB78     	 ldrb r3,[r7,#3]
 922 0014 0121     	 movs r1,#1
 923 0016 01FA03F3 	 lsl r3,r1,r3
 924 001a 1A43     	 orrs r2,r2,r3
 925 001c 7B68     	 ldr r3,[r7,#4]
 926 001e C3F8A420 	 str r2,[r3,#164]
2725:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 927              	 .loc 2 2725 0
 928 0022 0C37     	 adds r7,r7,#12
 929              	.LCFI117:
 930              	 .cfi_def_cfa_offset 4
 931 0024 BD46     	 mov sp,r7
 932              	.LCFI118:
 933              	 .cfi_def_cfa_register 13
 934              	 
 935 0026 5DF8047B 	 ldr r7,[sp],#4
 936              	.LCFI119:
 937              	 .cfi_restore 7
 938              	 .cfi_def_cfa_offset 0
 939 002a 7047     	 bx lr
 940              	 .cfi_endproc
 941              	.LFE278:
 943              	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 944              	 .align 2
 945              	 .thumb
 946              	 .thumb_func
 948              	XMC_CCU8_SLICE_ClearEvent:
 949              	.LFB283:
2726:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2727:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2728:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2729:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2730:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2731:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2732:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2733:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2734:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2735:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2736:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2737:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2738:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2739:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2740:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2741:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2742:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2743:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2744:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2745:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2746:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2747:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2748:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2749:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2750:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2751:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2752:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2753:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2754:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2755:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2756:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2757:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2758:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2759:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2760:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2761:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2762:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2763:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2764:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2765:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2766:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2767:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2768:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2769:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2770:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2771:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2772:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2773:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2774:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2775:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2776:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2777:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2778:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2779:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2780:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2781:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2782:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2783:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2784:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2785:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2786:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2787:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2788:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2789:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2790:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2791:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2792:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2793:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2794:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2795:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2796:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2797:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2798:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2799:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2800:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2801:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2802:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2803:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2804:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2805:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2806:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2807:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2808:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2809:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2810:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2811:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2812:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2813:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS = ((uint32_t) 1) << ((uint32_t) event);
2814:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2815:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2816:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2817:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2818:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2819:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2820:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2821:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2822:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2823:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2824:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2825:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2826:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2827:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2828:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2829:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2830:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 950              	 .loc 2 2830 0
 951              	 .cfi_startproc
 952              	 
 953              	 
 954              	 
 955 0000 80B4     	 push {r7}
 956              	.LCFI120:
 957              	 .cfi_def_cfa_offset 4
 958              	 .cfi_offset 7,-4
 959 0002 83B0     	 sub sp,sp,#12
 960              	.LCFI121:
 961              	 .cfi_def_cfa_offset 16
 962 0004 00AF     	 add r7,sp,#0
 963              	.LCFI122:
 964              	 .cfi_def_cfa_register 7
 965 0006 7860     	 str r0,[r7,#4]
 966 0008 0B46     	 mov r3,r1
 967 000a FB70     	 strb r3,[r7,#3]
2831:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2832:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2833:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR = ((uint32_t) 1) << ((uint32_t) event);
 968              	 .loc 2 2833 0
 969 000c FB78     	 ldrb r3,[r7,#3]
 970 000e 0122     	 movs r2,#1
 971 0010 9A40     	 lsls r2,r2,r3
 972 0012 7B68     	 ldr r3,[r7,#4]
 973 0014 C3F8B020 	 str r2,[r3,#176]
2834:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 974              	 .loc 2 2834 0
 975 0018 0C37     	 adds r7,r7,#12
 976              	.LCFI123:
 977              	 .cfi_def_cfa_offset 4
 978 001a BD46     	 mov sp,r7
 979              	.LCFI124:
 980              	 .cfi_def_cfa_register 13
 981              	 
 982 001c 5DF8047B 	 ldr r7,[sp],#4
 983              	.LCFI125:
 984              	 .cfi_restore 7
 985              	 .cfi_def_cfa_offset 0
 986 0020 7047     	 bx lr
 987              	 .cfi_endproc
 988              	.LFE283:
 990 0022 00BF     	 .section .text.XMC_CCU8_SLICE_GetEvent,"ax",%progbits
 991              	 .align 2
 992              	 .thumb
 993              	 .thumb_func
 995              	XMC_CCU8_SLICE_GetEvent:
 996              	.LFB284:
2835:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2836:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2837:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2838:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2839:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2840:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2841:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2842:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2843:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2844:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2845:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2846:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2847:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2848:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2849:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2850:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2851:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2852:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 997              	 .loc 2 2852 0
 998              	 .cfi_startproc
 999              	 
 1000              	 
 1001              	 
 1002 0000 80B4     	 push {r7}
 1003              	.LCFI126:
 1004              	 .cfi_def_cfa_offset 4
 1005              	 .cfi_offset 7,-4
 1006 0002 83B0     	 sub sp,sp,#12
 1007              	.LCFI127:
 1008              	 .cfi_def_cfa_offset 16
 1009 0004 00AF     	 add r7,sp,#0
 1010              	.LCFI128:
 1011              	 .cfi_def_cfa_register 7
 1012 0006 7860     	 str r0,[r7,#4]
 1013 0008 0B46     	 mov r3,r1
 1014 000a FB70     	 strb r3,[r7,#3]
2853:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2854:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2855:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
 1015              	 .loc 2 2855 0
 1016 000c 7B68     	 ldr r3,[r7,#4]
 1017 000e D3F8A020 	 ldr r2,[r3,#160]
 1018 0012 FB78     	 ldrb r3,[r7,#3]
 1019 0014 22FA03F3 	 lsr r3,r2,r3
 1020 0018 03F00103 	 and r3,r3,#1
 1021 001c 002B     	 cmp r3,#0
 1022 001e 14BF     	 ite ne
 1023 0020 0123     	 movne r3,#1
 1024 0022 0023     	 moveq r3,#0
 1025 0024 DBB2     	 uxtb r3,r3
2856:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
 1026              	 .loc 2 2856 0
 1027 0026 1846     	 mov r0,r3
 1028 0028 0C37     	 adds r7,r7,#12
 1029              	.LCFI129:
 1030              	 .cfi_def_cfa_offset 4
 1031 002a BD46     	 mov sp,r7
 1032              	.LCFI130:
 1033              	 .cfi_def_cfa_register 13
 1034              	 
 1035 002c 5DF8047B 	 ldr r7,[sp],#4
 1036              	.LCFI131:
 1037              	 .cfi_restore 7
 1038              	 .cfi_def_cfa_offset 0
 1039 0030 7047     	 bx lr
 1040              	 .cfi_endproc
 1041              	.LFE284:
 1043 0032 00BF     	 .section .text.PWM_lCCU4_Init,"ax",%progbits
 1044              	 .align 2
 1045              	 .global PWM_lCCU4_Init
 1046              	 .thumb
 1047              	 .thumb_func
 1049              	PWM_lCCU4_Init:
 1050              	.LFB293:
 1051              	 .file 3 "../Dave/Generated/PWM/pwm.c"
   1:../Dave/Generated/PWM/pwm.c **** /**
   2:../Dave/Generated/PWM/pwm.c ****  * @file pwm.c
   3:../Dave/Generated/PWM/pwm.c ****  * @date 2016-07-28
   4:../Dave/Generated/PWM/pwm.c ****  *
   5:../Dave/Generated/PWM/pwm.c ****  * NOTE:
   6:../Dave/Generated/PWM/pwm.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM/pwm.c ****  *
   8:../Dave/Generated/PWM/pwm.c ****  * @cond
   9:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM/pwm.c ****  * PWM v4.1.10 - Generates a PWM using one timer slice of CCU4 or CCU8.
  11:../Dave/Generated/PWM/pwm.c ****  *
  12:../Dave/Generated/PWM/pwm.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:../Dave/Generated/PWM/pwm.c ****  * All rights reserved.
  14:../Dave/Generated/PWM/pwm.c ****  *
  15:../Dave/Generated/PWM/pwm.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/PWM/pwm.c ****  * following conditions are met:
  17:../Dave/Generated/PWM/pwm.c ****  *
  18:../Dave/Generated/PWM/pwm.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/PWM/pwm.c ****  *   disclaimer.
  20:../Dave/Generated/PWM/pwm.c ****  *
  21:../Dave/Generated/PWM/pwm.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/PWM/pwm.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/PWM/pwm.c ****  *
  24:../Dave/Generated/PWM/pwm.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/PWM/pwm.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/PWM/pwm.c ****  *
  27:../Dave/Generated/PWM/pwm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/PWM/pwm.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/PWM/pwm.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/PWM/pwm.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/PWM/pwm.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/PWM/pwm.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/PWM/pwm.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/PWM/pwm.c ****  *
  35:../Dave/Generated/PWM/pwm.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/PWM/pwm.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  38:../Dave/Generated/PWM/pwm.c ****  *
  39:../Dave/Generated/PWM/pwm.c ****  * Change History
  40:../Dave/Generated/PWM/pwm.c ****  * --------------
  41:../Dave/Generated/PWM/pwm.c ****  *
  42:../Dave/Generated/PWM/pwm.c ****  * 2015-02-16:
  43:../Dave/Generated/PWM/pwm.c ****  *     - Initial version for DAVEv4.<BR>
  44:../Dave/Generated/PWM/pwm.c ****  *
  45:../Dave/Generated/PWM/pwm.c ****  * 2015-04-06:
  46:../Dave/Generated/PWM/pwm.c ****  *     - Configuration structure modified of PWM_t.<BR>
  47:../Dave/Generated/PWM/pwm.c ****  *     - Removed PWM_Dynamic_t,PWM_ConfigType_t.<BR>
  48:../Dave/Generated/PWM/pwm.c ****  *     - Added New macros for Mixed usage.<BR>
  49:../Dave/Generated/PWM/pwm.c ****  *     - Added New API PWM_SetPeriodMatchValue().<BR>
  50:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_InterruptType_t to PWM_INTERRUPT_t.<BR>
  51:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_OutputPassiveLevelType_t to PWM_OUTPUT_PASSIVE_LEVEL_t.<BR>
  52:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_TIMER_TYPE_t to PWM_TIMER_SLICE_t .<BR>
  53:../Dave/Generated/PWM/pwm.c ****  *     - PWM_ClearEvent(), PWM_GetInterruptStatus() and PWM_SetPassiveLevel() API prototype modifie
  54:../Dave/Generated/PWM/pwm.c ****  *       new enum.<BR>
  55:../Dave/Generated/PWM/pwm.c ****  *     - API name change PWM_AcknowledgeInterrupt to PWM_ClearEvent.<BR>
  56:../Dave/Generated/PWM/pwm.c ****  *
  57:../Dave/Generated/PWM/pwm.c ****  * 2015-07-09:
  58:../Dave/Generated/PWM/pwm.c ****  *     - Documentation updated.<BR>
  59:../Dave/Generated/PWM/pwm.c ****  *
  60:../Dave/Generated/PWM/pwm.c ****  * 2015-09-01:
  61:../Dave/Generated/PWM/pwm.c ****  *     - XMC14 device support added..<BR>
  62:../Dave/Generated/PWM/pwm.c ****  *
  63:../Dave/Generated/PWM/pwm.c ****  * 2015-10-08:
  64:../Dave/Generated/PWM/pwm.c ****  *     - Added support for XMC4700/XMC4800 devices.<BR>
  65:../Dave/Generated/PWM/pwm.c ****  *
  66:../Dave/Generated/PWM/pwm.c ****  * 2015-12-16:
  67:../Dave/Generated/PWM/pwm.c ****  *     - Added support for XMC4300 devices.<BR>
  68:../Dave/Generated/PWM/pwm.c ****  *
  69:../Dave/Generated/PWM/pwm.c ****  * 2016-07-28:
  70:../Dave/Generated/PWM/pwm.c ****  *     - All event signals are made mandatory.<BR>
  71:../Dave/Generated/PWM/pwm.c ****  *
  72:../Dave/Generated/PWM/pwm.c ****  * @endcond
  73:../Dave/Generated/PWM/pwm.c ****  *
  74:../Dave/Generated/PWM/pwm.c ****  */
  75:../Dave/Generated/PWM/pwm.c **** 
  76:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  77:../Dave/Generated/PWM/pwm.c ****  * HEADER FILES
  78:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  79:../Dave/Generated/PWM/pwm.c **** #include "pwm.h"
  80:../Dave/Generated/PWM/pwm.c **** 
  81:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  82:../Dave/Generated/PWM/pwm.c ****  * MACROS
  83:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  84:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_DUTY_CYCLE ((uint32_t)10000)
  85:../Dave/Generated/PWM/pwm.c **** #define PWM_DUTY_CYCLE_SCALE ((uint32_t)100)
  86:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_PRESCALER ((uint32_t)15)
  87:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_PERIOD_VALUE ((uint32_t) 65535)
  88:../Dave/Generated/PWM/pwm.c **** 
  89:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  90:../Dave/Generated/PWM/pwm.c ****  * LOCAL ROUTINES
  91:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  92:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
  93:../Dave/Generated/PWM/pwm.c **** /*Initialize the App and XMC_CCU4 slice. */
  94:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_Init(PWM_t *const handle_ptr);
  95:../Dave/Generated/PWM/pwm.c **** 
  96:../Dave/Generated/PWM/pwm.c **** /*Initialize interrupts*/
  97:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_ConfigInterrupts(PWM_t *const handle_ptr);
  98:../Dave/Generated/PWM/pwm.c **** 
  99:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU4 slice. */
 100:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Start(PWM_t *const handle_ptr);
 101:../Dave/Generated/PWM/pwm.c **** 
 102:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU4 slice. */
 103:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Stop(PWM_t *const handle_ptr);
 104:../Dave/Generated/PWM/pwm.c **** 
 105:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU4 slice. */
 106:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle);
 107:../Dave/Generated/PWM/pwm.c **** 
 108:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU4 slice. */
 109:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz);
 110:../Dave/Generated/PWM/pwm.c **** 
 111:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU4 slice. */
 112:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 113:../Dave/Generated/PWM/pwm.c **** #endif
 114:../Dave/Generated/PWM/pwm.c **** 
 115:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 116:../Dave/Generated/PWM/pwm.c **** /*Initialize the App and XMC_CCU8 slice. */
 117:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_Init(PWM_t *const handle_ptr);
 118:../Dave/Generated/PWM/pwm.c **** 
 119:../Dave/Generated/PWM/pwm.c **** /*Initialize interrupts*/
 120:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_ConfigInterrupts(PWM_t *const handle_ptr);
 121:../Dave/Generated/PWM/pwm.c **** 
 122:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU8 slice. */
 123:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Start(PWM_t *const handle_ptr);
 124:../Dave/Generated/PWM/pwm.c **** 
 125:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU8 slice. */
 126:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Stop(PWM_t *const handle_ptr);
 127:../Dave/Generated/PWM/pwm.c **** 
 128:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU8 slice. */
 129:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle);
 130:../Dave/Generated/PWM/pwm.c **** 
 131:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU8 slice. */
 132:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz);
 133:../Dave/Generated/PWM/pwm.c **** 
 134:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU8 slice. */
 135:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 136:../Dave/Generated/PWM/pwm.c **** #endif
 137:../Dave/Generated/PWM/pwm.c **** 
 138:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 139:../Dave/Generated/PWM/pwm.c **** 
 140:../Dave/Generated/PWM/pwm.c **** /*Initialize the APP and CCU4 slice. */
 141:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_Init(PWM_t *const handle_ptr)
 142:../Dave/Generated/PWM/pwm.c **** {
 1052              	 .loc 3 142 0
 1053              	 .cfi_startproc
 1054              	 
 1055              	 
 1056 0000 80B5     	 push {r7,lr}
 1057              	.LCFI132:
 1058              	 .cfi_def_cfa_offset 8
 1059              	 .cfi_offset 7,-8
 1060              	 .cfi_offset 14,-4
 1061 0002 84B0     	 sub sp,sp,#16
 1062              	.LCFI133:
 1063              	 .cfi_def_cfa_offset 24
 1064 0004 00AF     	 add r7,sp,#0
 1065              	.LCFI134:
 1066              	 .cfi_def_cfa_register 7
 1067 0006 7860     	 str r0,[r7,#4]
 143:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status = PWM_STATUS_FAILURE;
 1068              	 .loc 3 143 0
 1069 0008 0123     	 movs r3,#1
 1070 000a FB73     	 strb r3,[r7,#15]
 144:../Dave/Generated/PWM/pwm.c **** 
 145:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_Init:Invalid handle_ptr" , (handle_ptr != NULL))
 146:../Dave/Generated/PWM/pwm.c **** 
 147:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED == handle_ptr->state)
 1071              	 .loc 3 147 0
 1072 000c 7B68     	 ldr r3,[r7,#4]
 1073 000e 93F82930 	 ldrb r3,[r3,#41]
 1074 0012 022B     	 cmp r3,#2
 1075 0014 4DD1     	 bne .L28
 148:../Dave/Generated/PWM/pwm.c ****   {
 149:../Dave/Generated/PWM/pwm.c ****     /* Initialize consumed Apps */
 150:../Dave/Generated/PWM/pwm.c ****     status = (PWM_STATUS_t)GLOBAL_CCU4_Init(handle_ptr->global_ccu4_handle);
 1076              	 .loc 3 150 0
 1077 0016 7B68     	 ldr r3,[r7,#4]
 1078 0018 1B68     	 ldr r3,[r3]
 1079 001a 1846     	 mov r0,r3
 1080 001c FFF7FEFF 	 bl GLOBAL_CCU4_Init
 1081 0020 0346     	 mov r3,r0
 1082 0022 FB73     	 strb r3,[r7,#15]
 151:../Dave/Generated/PWM/pwm.c **** 
 152:../Dave/Generated/PWM/pwm.c ****     /*Initialize CCU4 slice */
 153:../Dave/Generated/PWM/pwm.c ****     if (PWM_STATUS_SUCCESS == status)/*check GLOBAL_CCU4_Init status*/
 1083              	 .loc 3 153 0
 1084 0024 FB7B     	 ldrb r3,[r7,#15]
 1085 0026 002B     	 cmp r3,#0
 1086 0028 3FD1     	 bne .L29
 154:../Dave/Generated/PWM/pwm.c ****     {
 155:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_Init:Initilizing Slice")
 156:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_CompareInit(handle_ptr->ccu4_slice_ptr, handle_ptr->ccu4_slice_config_ptr);
 1087              	 .loc 3 156 0
 1088 002a 7B68     	 ldr r3,[r7,#4]
 1089 002c 9A68     	 ldr r2,[r3,#8]
 1090 002e 7B68     	 ldr r3,[r7,#4]
 1091 0030 DB68     	 ldr r3,[r3,#12]
 1092 0032 1046     	 mov r0,r2
 1093 0034 1946     	 mov r1,r3
 1094 0036 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 157:../Dave/Generated/PWM/pwm.c **** 
 158:../Dave/Generated/PWM/pwm.c ****       /* Set the period and compare register values */
 159:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr,
 1095              	 .loc 3 159 0
 1096 003a 7B68     	 ldr r3,[r7,#4]
 1097 003c 9A68     	 ldr r2,[r3,#8]
 160:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)handle_ptr->period_value);
 1098              	 .loc 3 160 0
 1099 003e 7B68     	 ldr r3,[r7,#4]
 1100 0040 DB69     	 ldr r3,[r3,#28]
 159:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)handle_ptr->period_value);
 1101              	 .loc 3 159 0
 1102 0042 9BB2     	 uxth r3,r3
 1103 0044 1046     	 mov r0,r2
 1104 0046 1946     	 mov r1,r3
 1105 0048 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 161:../Dave/Generated/PWM/pwm.c **** 
 162:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr,
 1106              	 .loc 3 162 0
 1107 004c 7B68     	 ldr r3,[r7,#4]
 1108 004e 9A68     	 ldr r2,[r3,#8]
 163:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 1109              	 .loc 3 163 0
 1110 0050 7B68     	 ldr r3,[r7,#4]
 1111 0052 9B69     	 ldr r3,[r3,#24]
 162:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 1112              	 .loc 3 162 0
 1113 0054 9BB2     	 uxth r3,r3
 1114 0056 1046     	 mov r0,r2
 1115 0058 1946     	 mov r1,r3
 1116 005a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 164:../Dave/Generated/PWM/pwm.c **** 
 165:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1117              	 .loc 3 165 0
 1118 005e 7B68     	 ldr r3,[r7,#4]
 1119 0060 5A68     	 ldr r2,[r3,#4]
 1120 0062 7B68     	 ldr r3,[r7,#4]
 1121 0064 5B6A     	 ldr r3,[r3,#36]
 1122 0066 1046     	 mov r0,r2
 1123 0068 1946     	 mov r1,r3
 1124 006a FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 166:../Dave/Generated/PWM/pwm.c **** 
 167:../Dave/Generated/PWM/pwm.c ****       /* Initialize interrupts */
 168:../Dave/Generated/PWM/pwm.c ****       PWM_lCCU4_ConfigInterrupts(handle_ptr);
 1125              	 .loc 3 168 0
 1126 006e 7868     	 ldr r0,[r7,#4]
 1127 0070 FFF7FEFF 	 bl PWM_lCCU4_ConfigInterrupts
 169:../Dave/Generated/PWM/pwm.c **** 
 170:../Dave/Generated/PWM/pwm.c ****       XMC_GPIO_Init(handle_ptr->gpio_out_port,handle_ptr->gpio_out_pin,
 1128              	 .loc 3 170 0
 1129 0074 7B68     	 ldr r3,[r7,#4]
 1130 0076 1969     	 ldr r1,[r3,#16]
 1131 0078 7B68     	 ldr r3,[r7,#4]
 1132 007a 93F82C20 	 ldrb r2,[r3,#44]
 1133 007e 7B68     	 ldr r3,[r7,#4]
 1134 0080 5B69     	 ldr r3,[r3,#20]
 1135 0082 0846     	 mov r0,r1
 1136 0084 1146     	 mov r1,r2
 1137 0086 1A46     	 mov r2,r3
 1138 0088 FFF7FEFF 	 bl XMC_GPIO_Init
 171:../Dave/Generated/PWM/pwm.c ****     		        handle_ptr->gpio_out_config);
 172:../Dave/Generated/PWM/pwm.c **** 
 173:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_SUCCESS;
 1139              	 .loc 3 173 0
 1140 008c 7B68     	 ldr r3,[r7,#4]
 1141 008e 0022     	 movs r2,#0
 1142 0090 83F82920 	 strb r2,[r3,#41]
 174:../Dave/Generated/PWM/pwm.c **** 
 175:../Dave/Generated/PWM/pwm.c ****       /* Start the PWM generation if start at initialization is enabled */
 176:../Dave/Generated/PWM/pwm.c ****       if ((bool) true == handle_ptr->start_control)
 1143              	 .loc 3 176 0
 1144 0094 7B68     	 ldr r3,[r7,#4]
 1145 0096 93F82F30 	 ldrb r3,[r3,#47]
 1146 009a 002B     	 cmp r3,#0
 1147 009c 02D0     	 beq .L30
 177:../Dave/Generated/PWM/pwm.c ****       {
 178:../Dave/Generated/PWM/pwm.c ****         PWM_Start(handle_ptr);
 1148              	 .loc 3 178 0
 1149 009e 7868     	 ldr r0,[r7,#4]
 1150 00a0 FFF7FEFF 	 bl PWM_Start
 1151              	.L30:
 179:../Dave/Generated/PWM/pwm.c ****       }
 180:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 1152              	 .loc 3 180 0
 1153 00a4 0023     	 movs r3,#0
 1154 00a6 FB73     	 strb r3,[r7,#15]
 1155 00a8 03E0     	 b .L28
 1156              	.L29:
 181:../Dave/Generated/PWM/pwm.c ****     }
 182:../Dave/Generated/PWM/pwm.c ****     else
 183:../Dave/Generated/PWM/pwm.c ****     {
 184:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_UNINITIALIZED;
 1157              	 .loc 3 184 0
 1158 00aa 7B68     	 ldr r3,[r7,#4]
 1159 00ac 0222     	 movs r2,#2
 1160 00ae 83F82920 	 strb r2,[r3,#41]
 1161              	.L28:
 185:../Dave/Generated/PWM/pwm.c ****     }
 186:../Dave/Generated/PWM/pwm.c **** 
 187:../Dave/Generated/PWM/pwm.c ****   }
 188:../Dave/Generated/PWM/pwm.c ****   return (status);
 1162              	 .loc 3 188 0
 1163 00b2 FB7B     	 ldrb r3,[r7,#15]
 189:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Init() api */
 1164              	 .loc 3 189 0
 1165 00b4 1846     	 mov r0,r3
 1166 00b6 1037     	 adds r7,r7,#16
 1167              	.LCFI135:
 1168              	 .cfi_def_cfa_offset 8
 1169 00b8 BD46     	 mov sp,r7
 1170              	.LCFI136:
 1171              	 .cfi_def_cfa_register 13
 1172              	 
 1173 00ba 80BD     	 pop {r7,pc}
 1174              	 .cfi_endproc
 1175              	.LFE293:
 1177              	 .section .text.PWM_lCCU4_ConfigInterrupts,"ax",%progbits
 1178              	 .align 2
 1179              	 .global PWM_lCCU4_ConfigInterrupts
 1180              	 .thumb
 1181              	 .thumb_func
 1183              	PWM_lCCU4_ConfigInterrupts:
 1184              	.LFB294:
 190:../Dave/Generated/PWM/pwm.c **** 
 191:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 192:../Dave/Generated/PWM/pwm.c **** /* Initialize interrupts */
 193:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_ConfigInterrupts(PWM_t *const handle_ptr)
 194:../Dave/Generated/PWM/pwm.c **** {
 1185              	 .loc 3 194 0
 1186              	 .cfi_startproc
 1187              	 
 1188              	 
 1189 0000 80B5     	 push {r7,lr}
 1190              	.LCFI137:
 1191              	 .cfi_def_cfa_offset 8
 1192              	 .cfi_offset 7,-8
 1193              	 .cfi_offset 14,-4
 1194 0002 82B0     	 sub sp,sp,#8
 1195              	.LCFI138:
 1196              	 .cfi_def_cfa_offset 16
 1197 0004 00AF     	 add r7,sp,#0
 1198              	.LCFI139:
 1199              	 .cfi_def_cfa_register 7
 1200 0006 7860     	 str r0,[r7,#4]
 195:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->period_match_enable)
 1201              	 .loc 3 195 0
 1202 0008 7B68     	 ldr r3,[r7,#4]
 1203 000a 93F83030 	 ldrb r3,[r3,#48]
 1204 000e 002B     	 cmp r3,#0
 1205 0010 0FD0     	 beq .L33
 196:../Dave/Generated/PWM/pwm.c ****   {
 197:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_ConfigInterrupts:period match enable")
 198:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 1206              	 .loc 3 198 0
 1207 0012 7B68     	 ldr r3,[r7,#4]
 1208 0014 9B68     	 ldr r3,[r3,#8]
 1209 0016 1846     	 mov r0,r3
 1210 0018 0021     	 movs r1,#0
 1211 001a FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 199:../Dave/Generated/PWM/pwm.c **** 
 200:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node to period match event*/
 201:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH,
 1212              	 .loc 3 201 0
 1213 001e 7B68     	 ldr r3,[r7,#4]
 1214 0020 9A68     	 ldr r2,[r3,#8]
 1215 0022 7B68     	 ldr r3,[r7,#4]
 1216 0024 93F82A30 	 ldrb r3,[r3,#42]
 1217 0028 1046     	 mov r0,r2
 1218 002a 0021     	 movs r1,#0
 1219 002c 1A46     	 mov r2,r3
 1220 002e FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 1221              	.L33:
 202:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu4_slice_period_match_node);
 203:../Dave/Generated/PWM/pwm.c ****   }
 204:../Dave/Generated/PWM/pwm.c **** 
 205:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->compare_match_enable)
 1222              	 .loc 3 205 0
 1223 0032 7B68     	 ldr r3,[r7,#4]
 1224 0034 93F83130 	 ldrb r3,[r3,#49]
 1225 0038 002B     	 cmp r3,#0
 1226 003a 0FD0     	 beq .L32
 206:../Dave/Generated/PWM/pwm.c ****   {
 207:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_ConfigInterrupts:compare match enable")
 208:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP);
 1227              	 .loc 3 208 0
 1228 003c 7B68     	 ldr r3,[r7,#4]
 1229 003e 9B68     	 ldr r3,[r3,#8]
 1230 0040 1846     	 mov r0,r3
 1231 0042 0221     	 movs r1,#2
 1232 0044 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 209:../Dave/Generated/PWM/pwm.c **** 
 210:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node to compare match event */
 211:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH
 1233              	 .loc 3 211 0
 1234 0048 7B68     	 ldr r3,[r7,#4]
 1235 004a 9A68     	 ldr r2,[r3,#8]
 1236 004c 7B68     	 ldr r3,[r7,#4]
 1237 004e 93F82B30 	 ldrb r3,[r3,#43]
 1238 0052 1046     	 mov r0,r2
 1239 0054 0221     	 movs r1,#2
 1240 0056 1A46     	 mov r2,r3
 1241 0058 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 1242              	.L32:
 212:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu4_slice_compare_match_node);
 213:../Dave/Generated/PWM/pwm.c ****   }
 214:../Dave/Generated/PWM/pwm.c **** }
 1243              	 .loc 3 214 0
 1244 005c 0837     	 adds r7,r7,#8
 1245              	.LCFI140:
 1246              	 .cfi_def_cfa_offset 8
 1247 005e BD46     	 mov sp,r7
 1248              	.LCFI141:
 1249              	 .cfi_def_cfa_register 13
 1250              	 
 1251 0060 80BD     	 pop {r7,pc}
 1252              	 .cfi_endproc
 1253              	.LFE294:
 1255 0062 00BF     	 .section .text.PWM_lCCU4_Start,"ax",%progbits
 1256              	 .align 2
 1257              	 .global PWM_lCCU4_Start
 1258              	 .thumb
 1259              	 .thumb_func
 1261              	PWM_lCCU4_Start:
 1262              	.LFB295:
 215:../Dave/Generated/PWM/pwm.c **** 
 216:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 217:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU4 slice. */
 218:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Start(PWM_t *const handle_ptr)
 219:../Dave/Generated/PWM/pwm.c **** {
 1263              	 .loc 3 219 0
 1264              	 .cfi_startproc
 1265              	 
 1266              	 
 1267 0000 80B5     	 push {r7,lr}
 1268              	.LCFI142:
 1269              	 .cfi_def_cfa_offset 8
 1270              	 .cfi_offset 7,-8
 1271              	 .cfi_offset 14,-4
 1272 0002 82B0     	 sub sp,sp,#8
 1273              	.LCFI143:
 1274              	 .cfi_def_cfa_offset 16
 1275 0004 00AF     	 add r7,sp,#0
 1276              	.LCFI144:
 1277              	 .cfi_def_cfa_register 7
 1278 0006 7860     	 str r0,[r7,#4]
 220:../Dave/Generated/PWM/pwm.c ****   if ((PWM_STATUS_SUCCESS == handle_ptr->state) || (PWM_STATUS_STOPPED == handle_ptr->state))
 1279              	 .loc 3 220 0
 1280 0008 7B68     	 ldr r3,[r7,#4]
 1281 000a 93F82930 	 ldrb r3,[r3,#41]
 1282 000e 002B     	 cmp r3,#0
 1283 0010 04D0     	 beq .L36
 1284              	 .loc 3 220 0 is_stmt 0 discriminator 1
 1285 0012 7B68     	 ldr r3,[r7,#4]
 1286 0014 93F82930 	 ldrb r3,[r3,#41]
 1287 0018 042B     	 cmp r3,#4
 1288 001a 11D1     	 bne .L35
 1289              	.L36:
 221:../Dave/Generated/PWM/pwm.c ****   {
 222:../Dave/Generated/PWM/pwm.c ****     /* Clears the IDLE mode for the slice */
 223:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_EnableClock(handle_ptr->ccu4_kernel_ptr,handle_ptr->slice_number);
 1290              	 .loc 3 223 0 is_stmt 1
 1291 001c 7B68     	 ldr r3,[r7,#4]
 1292 001e 5A68     	 ldr r2,[r3,#4]
 1293 0020 7B68     	 ldr r3,[r7,#4]
 1294 0022 93F82E30 	 ldrb r3,[r3,#46]
 1295 0026 1046     	 mov r0,r2
 1296 0028 1946     	 mov r1,r3
 1297 002a FFF7FEFF 	 bl XMC_CCU4_EnableClock
 224:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_StartTimer(handle_ptr->ccu4_slice_ptr);
 1298              	 .loc 3 224 0
 1299 002e 7B68     	 ldr r3,[r7,#4]
 1300 0030 9B68     	 ldr r3,[r3,#8]
 1301 0032 1846     	 mov r0,r3
 1302 0034 FFF7FEFF 	 bl XMC_CCU4_SLICE_StartTimer
 225:../Dave/Generated/PWM/pwm.c **** 
 226:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_RUNNING;
 1303              	 .loc 3 226 0
 1304 0038 7B68     	 ldr r3,[r7,#4]
 1305 003a 0322     	 movs r2,#3
 1306 003c 83F82920 	 strb r2,[r3,#41]
 1307              	.L35:
 227:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_Start:start PWM")
 228:../Dave/Generated/PWM/pwm.c ****   }
 229:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Start() api */
 1308              	 .loc 3 229 0
 1309 0040 0837     	 adds r7,r7,#8
 1310              	.LCFI145:
 1311              	 .cfi_def_cfa_offset 8
 1312 0042 BD46     	 mov sp,r7
 1313              	.LCFI146:
 1314              	 .cfi_def_cfa_register 13
 1315              	 
 1316 0044 80BD     	 pop {r7,pc}
 1317              	 .cfi_endproc
 1318              	.LFE295:
 1320 0046 00BF     	 .section .text.PWM_lCCU4_Stop,"ax",%progbits
 1321              	 .align 2
 1322              	 .global PWM_lCCU4_Stop
 1323              	 .thumb
 1324              	 .thumb_func
 1326              	PWM_lCCU4_Stop:
 1327              	.LFB296:
 230:../Dave/Generated/PWM/pwm.c **** 
 231:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 232:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU4 slice. */
 233:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Stop(PWM_t *const handle_ptr)
 234:../Dave/Generated/PWM/pwm.c **** {
 1328              	 .loc 3 234 0
 1329              	 .cfi_startproc
 1330              	 
 1331              	 
 1332 0000 80B5     	 push {r7,lr}
 1333              	.LCFI147:
 1334              	 .cfi_def_cfa_offset 8
 1335              	 .cfi_offset 7,-8
 1336              	 .cfi_offset 14,-4
 1337 0002 82B0     	 sub sp,sp,#8
 1338              	.LCFI148:
 1339              	 .cfi_def_cfa_offset 16
 1340 0004 00AF     	 add r7,sp,#0
 1341              	.LCFI149:
 1342              	 .cfi_def_cfa_register 7
 1343 0006 7860     	 str r0,[r7,#4]
 235:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 1344              	 .loc 3 235 0
 1345 0008 7B68     	 ldr r3,[r7,#4]
 1346 000a 93F82930 	 ldrb r3,[r3,#41]
 1347 000e 022B     	 cmp r3,#2
 1348 0010 16D0     	 beq .L38
 236:../Dave/Generated/PWM/pwm.c ****   {
 237:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_StopTimer(handle_ptr->ccu4_slice_ptr);
 1349              	 .loc 3 237 0
 1350 0012 7B68     	 ldr r3,[r7,#4]
 1351 0014 9B68     	 ldr r3,[r3,#8]
 1352 0016 1846     	 mov r0,r3
 1353 0018 FFF7FEFF 	 bl XMC_CCU4_SLICE_StopTimer
 238:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_ClearTimer(handle_ptr->ccu4_slice_ptr);
 1354              	 .loc 3 238 0
 1355 001c 7B68     	 ldr r3,[r7,#4]
 1356 001e 9B68     	 ldr r3,[r3,#8]
 1357 0020 1846     	 mov r0,r3
 1358 0022 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 239:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_DisableClock(handle_ptr->ccu4_kernel_ptr,handle_ptr->slice_number);
 1359              	 .loc 3 239 0
 1360 0026 7B68     	 ldr r3,[r7,#4]
 1361 0028 5A68     	 ldr r2,[r3,#4]
 1362 002a 7B68     	 ldr r3,[r7,#4]
 1363 002c 93F82E30 	 ldrb r3,[r3,#46]
 1364 0030 1046     	 mov r0,r2
 1365 0032 1946     	 mov r1,r3
 1366 0034 FFF7FEFF 	 bl XMC_CCU4_DisableClock
 240:../Dave/Generated/PWM/pwm.c **** 
 241:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_STOPPED;
 1367              	 .loc 3 241 0
 1368 0038 7B68     	 ldr r3,[r7,#4]
 1369 003a 0422     	 movs r2,#4
 1370 003c 83F82920 	 strb r2,[r3,#41]
 1371              	.L38:
 242:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_Stop:stop PWM")
 243:../Dave/Generated/PWM/pwm.c ****   }
 244:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Stop() api */
 1372              	 .loc 3 244 0
 1373 0040 0837     	 adds r7,r7,#8
 1374              	.LCFI150:
 1375              	 .cfi_def_cfa_offset 8
 1376 0042 BD46     	 mov sp,r7
 1377              	.LCFI151:
 1378              	 .cfi_def_cfa_register 13
 1379              	 
 1380 0044 80BD     	 pop {r7,pc}
 1381              	 .cfi_endproc
 1382              	.LFE296:
 1384 0046 00BF     	 .section .text.PWM_lCCU4_SetDutyCycle,"ax",%progbits
 1385              	 .align 2
 1386              	 .global PWM_lCCU4_SetDutyCycle
 1387              	 .thumb
 1388              	 .thumb_func
 1390              	PWM_lCCU4_SetDutyCycle:
 1391              	.LFB297:
 245:../Dave/Generated/PWM/pwm.c **** 
 246:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 247:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU4 slice. */
 248:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 249:../Dave/Generated/PWM/pwm.c **** {
 1392              	 .loc 3 249 0
 1393              	 .cfi_startproc
 1394              	 
 1395              	 
 1396 0000 80B5     	 push {r7,lr}
 1397              	.LCFI152:
 1398              	 .cfi_def_cfa_offset 8
 1399              	 .cfi_offset 7,-8
 1400              	 .cfi_offset 14,-4
 1401 0002 86B0     	 sub sp,sp,#24
 1402              	.LCFI153:
 1403              	 .cfi_def_cfa_offset 32
 1404 0004 00AF     	 add r7,sp,#0
 1405              	.LCFI154:
 1406              	 .cfi_def_cfa_register 7
 1407 0006 7860     	 str r0,[r7,#4]
 1408 0008 3960     	 str r1,[r7]
 250:../Dave/Generated/PWM/pwm.c ****   uint32_t period;
 251:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 252:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 253:../Dave/Generated/PWM/pwm.c **** 
 254:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetDutyCycle:Invalid duty_cycle " , ((duty_cycle >= 0) && (duty_cycle <= PW
 255:../Dave/Generated/PWM/pwm.c **** 
 256:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 1409              	 .loc 3 256 0
 1410 000a 0123     	 movs r3,#1
 1411 000c FB75     	 strb r3,[r7,#23]
 257:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 1412              	 .loc 3 257 0
 1413 000e 7B68     	 ldr r3,[r7,#4]
 1414 0010 93F82930 	 ldrb r3,[r3,#41]
 1415 0014 022B     	 cmp r3,#2
 1416 0016 2CD0     	 beq .L41
 258:../Dave/Generated/PWM/pwm.c ****   {
 259:../Dave/Generated/PWM/pwm.c ****     /* Duty cycle needs between 0 and 10000 */
 260:../Dave/Generated/PWM/pwm.c ****     if (duty_cycle <= PWM_MAX_DUTY_CYCLE)
 1417              	 .loc 3 260 0
 1418 0018 3B68     	 ldr r3,[r7]
 1419 001a 42F21072 	 movw r2,#10000
 1420 001e 9342     	 cmp r3,r2
 1421 0020 27D8     	 bhi .L41
 261:../Dave/Generated/PWM/pwm.c ****     {
 262:../Dave/Generated/PWM/pwm.c ****       /* period = (PR + 1) */
 263:../Dave/Generated/PWM/pwm.c ****       period = (uint32_t)handle_ptr->period_value + 1U;
 1422              	 .loc 3 263 0
 1423 0022 7B68     	 ldr r3,[r7,#4]
 1424 0024 DB69     	 ldr r3,[r3,#28]
 1425 0026 0133     	 adds r3,r3,#1
 1426 0028 3B61     	 str r3,[r7,#16]
 264:../Dave/Generated/PWM/pwm.c **** 
 265:../Dave/Generated/PWM/pwm.c ****       /* Duty Cycle(symmetric) = (PR-CR1)+1 / period */
 266:../Dave/Generated/PWM/pwm.c ****       compare = ((period * (PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PWM_DUTY_CYCLE_SC
 1427              	 .loc 3 266 0
 1428 002a 3B68     	 ldr r3,[r7]
 1429 002c C3F51C53 	 rsb r3,r3,#9984
 1430 0030 1033     	 adds r3,r3,#16
 1431 0032 3A69     	 ldr r2,[r7,#16]
 1432 0034 02FB03F3 	 mul r3,r2,r3
 1433 0038 104A     	 ldr r2,.L43
 1434 003a A2FB0323 	 umull r2,r3,r2,r3
 1435 003e 5B0B     	 lsrs r3,r3,#13
 1436 0040 FB60     	 str r3,[r7,#12]
 267:../Dave/Generated/PWM/pwm.c **** 
 268:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 1437              	 .loc 3 268 0
 1438 0042 7B68     	 ldr r3,[r7,#4]
 1439 0044 FA68     	 ldr r2,[r7,#12]
 1440 0046 9A61     	 str r2,[r3,#24]
 269:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 1441              	 .loc 3 269 0
 1442 0048 7B68     	 ldr r3,[r7,#4]
 1443 004a 3A68     	 ldr r2,[r7]
 1444 004c 1A62     	 str r2,[r3,#32]
 270:../Dave/Generated/PWM/pwm.c **** 
 271:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 1445              	 .loc 3 271 0
 1446 004e 7B68     	 ldr r3,[r7,#4]
 1447 0050 9A68     	 ldr r2,[r3,#8]
 1448 0052 FB68     	 ldr r3,[r7,#12]
 1449 0054 9BB2     	 uxth r3,r3
 1450 0056 1046     	 mov r0,r2
 1451 0058 1946     	 mov r1,r3
 1452 005a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 272:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1453              	 .loc 3 272 0
 1454 005e 7B68     	 ldr r3,[r7,#4]
 1455 0060 5A68     	 ldr r2,[r3,#4]
 1456 0062 7B68     	 ldr r3,[r7,#4]
 1457 0064 5B6A     	 ldr r3,[r3,#36]
 1458 0066 1046     	 mov r0,r2
 1459 0068 1946     	 mov r1,r3
 1460 006a FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 273:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 1461              	 .loc 3 273 0
 1462 006e 0023     	 movs r3,#0
 1463 0070 FB75     	 strb r3,[r7,#23]
 1464              	.L41:
 274:../Dave/Generated/PWM/pwm.c ****     }
 275:../Dave/Generated/PWM/pwm.c ****   }
 276:../Dave/Generated/PWM/pwm.c **** 
 277:../Dave/Generated/PWM/pwm.c ****   XMC_DEBUG("PWM_lCCU4_SetDutyCycle:dutycycle set")
 278:../Dave/Generated/PWM/pwm.c ****   return (status);
 1465              	 .loc 3 278 0
 1466 0072 FB7D     	 ldrb r3,[r7,#23]
 279:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetDutyCycle() api */
 1467              	 .loc 3 279 0
 1468 0074 1846     	 mov r0,r3
 1469 0076 1837     	 adds r7,r7,#24
 1470              	.LCFI155:
 1471              	 .cfi_def_cfa_offset 8
 1472 0078 BD46     	 mov sp,r7
 1473              	.LCFI156:
 1474              	 .cfi_def_cfa_register 13
 1475              	 
 1476 007a 80BD     	 pop {r7,pc}
 1477              	.L44:
 1478              	 .align 2
 1479              	.L43:
 1480 007c 5917B7D1 	 .word -776530087
 1481              	 .cfi_endproc
 1482              	.LFE297:
 1484              	 .section .text.PWM_lCCU4_SetFreq,"ax",%progbits
 1485              	 .align 2
 1486              	 .global PWM_lCCU4_SetFreq
 1487              	 .thumb
 1488              	 .thumb_func
 1490              	PWM_lCCU4_SetFreq:
 1491              	.LFB298:
 280:../Dave/Generated/PWM/pwm.c **** 
 281:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 282:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU4 slice. */
 283:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 284:../Dave/Generated/PWM/pwm.c **** {
 1492              	 .loc 3 284 0
 1493              	 .cfi_startproc
 1494              	 
 1495              	 
 1496 0000 80B5     	 push {r7,lr}
 1497              	.LCFI157:
 1498              	 .cfi_def_cfa_offset 8
 1499              	 .cfi_offset 7,-8
 1500              	 .cfi_offset 14,-4
 1501 0002 86B0     	 sub sp,sp,#24
 1502              	.LCFI158:
 1503              	 .cfi_def_cfa_offset 32
 1504 0004 00AF     	 add r7,sp,#0
 1505              	.LCFI159:
 1506              	 .cfi_def_cfa_register 7
 1507 0006 7860     	 str r0,[r7,#4]
 1508 0008 3960     	 str r1,[r7]
 285:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 286:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 287:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 288:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 289:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 290:../Dave/Generated/PWM/pwm.c **** 
 291:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreq:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 292:../Dave/Generated/PWM/pwm.c **** 
 293:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 1509              	 .loc 3 293 0
 1510 000a 7B68     	 ldr r3,[r7,#4]
 1511 000c 93F82930 	 ldrb r3,[r3,#41]
 1512 0010 FB75     	 strb r3,[r7,#23]
 294:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 1513              	 .loc 3 294 0
 1514 0012 0023     	 movs r3,#0
 1515 0014 BB75     	 strb r3,[r7,#22]
 295:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 1516              	 .loc 3 295 0
 1517 0016 0023     	 movs r3,#0
 1518 0018 3B61     	 str r3,[r7,#16]
 296:../Dave/Generated/PWM/pwm.c **** 
 297:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 298:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 1519              	 .loc 3 298 0
 1520 001a FB7D     	 ldrb r3,[r7,#23]
 1521 001c 022B     	 cmp r3,#2
 1522 001e 5BD0     	 beq .L46
 1523              	 .loc 3 298 0 is_stmt 0 discriminator 1
 1524 0020 3B68     	 ldr r3,[r7]
 1525 0022 002B     	 cmp r3,#0
 1526 0024 58D0     	 beq .L46
 299:../Dave/Generated/PWM/pwm.c ****   {
 300:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 1527              	 .loc 3 300 0 is_stmt 1
 1528 0026 0023     	 movs r3,#0
 1529 0028 FB75     	 strb r3,[r7,#23]
 301:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 302:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu4_handle->module_frequency;
 1530              	 .loc 3 302 0
 1531 002a 7B68     	 ldr r3,[r7,#4]
 1532 002c 1B68     	 ldr r3,[r3]
 1533 002e 1B68     	 ldr r3,[r3]
 1534 0030 FB60     	 str r3,[r7,#12]
 303:../Dave/Generated/PWM/pwm.c **** 
 304:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 305:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 1535              	 .loc 3 305 0
 1536 0032 0FE0     	 b .L47
 1537              	.L50:
 306:../Dave/Generated/PWM/pwm.c ****     {
 307:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 1538              	 .loc 3 307 0
 1539 0034 FA68     	 ldr r2,[r7,#12]
 1540 0036 3B68     	 ldr r3,[r7]
 1541 0038 B2FBF3F2 	 udiv r2,r2,r3
 1542 003c BB7D     	 ldrb r3,[r7,#22]
 1543 003e 22FA03F3 	 lsr r3,r2,r3
 1544 0042 3B61     	 str r3,[r7,#16]
 308:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 309:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT )
 1545              	 .loc 3 309 0
 1546 0044 3B69     	 ldr r3,[r7,#16]
 1547 0046 B3F5803F 	 cmp r3,#65536
 1548 004a 00D2     	 bcs .L48
 310:../Dave/Generated/PWM/pwm.c ****       {
 311:../Dave/Generated/PWM/pwm.c ****         break;
 1549              	 .loc 3 311 0
 1550 004c 05E0     	 b .L49
 1551              	.L48:
 312:../Dave/Generated/PWM/pwm.c ****       }
 313:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 1552              	 .loc 3 313 0
 1553 004e BB7D     	 ldrb r3,[r7,#22]
 1554 0050 0133     	 adds r3,r3,#1
 1555 0052 BB75     	 strb r3,[r7,#22]
 1556              	.L47:
 305:../Dave/Generated/PWM/pwm.c ****     {
 1557              	 .loc 3 305 0
 1558 0054 BB7D     	 ldrb r3,[r7,#22]
 1559 0056 0F2B     	 cmp r3,#15
 1560 0058 ECD9     	 bls .L50
 1561              	.L49:
 314:../Dave/Generated/PWM/pwm.c ****     }
 315:../Dave/Generated/PWM/pwm.c **** 
 316:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 317:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || ((uint32_t)0 == period_value))
 1562              	 .loc 3 317 0
 1563 005a BB7D     	 ldrb r3,[r7,#22]
 1564 005c 0F2B     	 cmp r3,#15
 1565 005e 02D8     	 bhi .L51
 1566              	 .loc 3 317 0 is_stmt 0 discriminator 1
 1567 0060 3B69     	 ldr r3,[r7,#16]
 1568 0062 002B     	 cmp r3,#0
 1569 0064 02D1     	 bne .L52
 1570              	.L51:
 318:../Dave/Generated/PWM/pwm.c ****     {
 319:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreq:Frequency could not be set")
 320:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 1571              	 .loc 3 320 0 is_stmt 1
 1572 0066 0123     	 movs r3,#1
 1573 0068 FB75     	 strb r3,[r7,#23]
 317:../Dave/Generated/PWM/pwm.c ****     {
 1574              	 .loc 3 317 0
 1575 006a 37E0     	 b .L54
 1576              	.L52:
 321:../Dave/Generated/PWM/pwm.c ****     }
 322:../Dave/Generated/PWM/pwm.c ****     else
 323:../Dave/Generated/PWM/pwm.c ****     {
 324:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 325:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * (PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 1577              	 .loc 3 325 0
 1578 006c 7B68     	 ldr r3,[r7,#4]
 1579 006e 1B6A     	 ldr r3,[r3,#32]
 1580 0070 C3F51C53 	 rsb r3,r3,#9984
 1581 0074 1033     	 adds r3,r3,#16
 1582 0076 3A69     	 ldr r2,[r7,#16]
 1583 0078 02FB03F3 	 mul r3,r2,r3
 1584 007c 1A4A     	 ldr r2,.L56
 1585 007e A2FB0323 	 umull r2,r3,r2,r3
 1586 0082 5B0B     	 lsrs r3,r3,#13
 1587 0084 BB60     	 str r3,[r7,#8]
 326:../Dave/Generated/PWM/pwm.c ****     		     / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
 327:../Dave/Generated/PWM/pwm.c **** 
 328:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetPrescaler(handle_ptr->ccu4_slice_ptr, prescaler);
 1588              	 .loc 3 328 0
 1589 0086 7B68     	 ldr r3,[r7,#4]
 1590 0088 9A68     	 ldr r2,[r3,#8]
 1591 008a BB7D     	 ldrb r3,[r7,#22]
 1592 008c 1046     	 mov r0,r2
 1593 008e 1946     	 mov r1,r3
 1594 0090 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPrescaler
 329:../Dave/Generated/PWM/pwm.c **** 
 330:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 331:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 1595              	 .loc 3 331 0
 1596 0094 3B69     	 ldr r3,[r7,#16]
 1597 0096 013B     	 subs r3,r3,#1
 1598 0098 3B61     	 str r3,[r7,#16]
 332:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period_value));
 1599              	 .loc 3 332 0
 1600 009a 7B68     	 ldr r3,[r7,#4]
 1601 009c 9A68     	 ldr r2,[r3,#8]
 1602 009e 3B69     	 ldr r3,[r7,#16]
 1603 00a0 9BB2     	 uxth r3,r3
 1604 00a2 1046     	 mov r0,r2
 1605 00a4 1946     	 mov r1,r3
 1606 00a6 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 333:../Dave/Generated/PWM/pwm.c **** 
 334:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 1607              	 .loc 3 334 0
 1608 00aa 7B68     	 ldr r3,[r7,#4]
 1609 00ac 9A68     	 ldr r2,[r3,#8]
 1610 00ae BB68     	 ldr r3,[r7,#8]
 1611 00b0 9BB2     	 uxth r3,r3
 1612 00b2 1046     	 mov r0,r2
 1613 00b4 1946     	 mov r1,r3
 1614 00b6 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 335:../Dave/Generated/PWM/pwm.c **** 
 336:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1615              	 .loc 3 336 0
 1616 00ba 7B68     	 ldr r3,[r7,#4]
 1617 00bc 5A68     	 ldr r2,[r3,#4]
 1618 00be 7B68     	 ldr r3,[r7,#4]
 1619 00c0 5B6A     	 ldr r3,[r3,#36]
 1620 00c2 1046     	 mov r0,r2
 1621 00c4 1946     	 mov r1,r3
 1622 00c6 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 337:../Dave/Generated/PWM/pwm.c **** 
 338:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 1623              	 .loc 3 338 0
 1624 00ca 7B68     	 ldr r3,[r7,#4]
 1625 00cc BA68     	 ldr r2,[r7,#8]
 1626 00ce 9A61     	 str r2,[r3,#24]
 339:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 1627              	 .loc 3 339 0
 1628 00d0 7B68     	 ldr r3,[r7,#4]
 1629 00d2 3A69     	 ldr r2,[r7,#16]
 1630 00d4 DA61     	 str r2,[r3,#28]
 317:../Dave/Generated/PWM/pwm.c ****     {
 1631              	 .loc 3 317 0
 1632 00d6 01E0     	 b .L54
 1633              	.L46:
 340:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreq:frequency set")
 341:../Dave/Generated/PWM/pwm.c ****     }
 342:../Dave/Generated/PWM/pwm.c ****   }
 343:../Dave/Generated/PWM/pwm.c ****   else
 344:../Dave/Generated/PWM/pwm.c ****   {
 345:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 1634              	 .loc 3 345 0
 1635 00d8 0123     	 movs r3,#1
 1636 00da FB75     	 strb r3,[r7,#23]
 1637              	.L54:
 346:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_SetFreq:Frequency could not be set")
 347:../Dave/Generated/PWM/pwm.c ****   }
 348:../Dave/Generated/PWM/pwm.c **** 
 349:../Dave/Generated/PWM/pwm.c **** 
 350:../Dave/Generated/PWM/pwm.c ****   return status;
 1638              	 .loc 3 350 0
 1639 00dc FB7D     	 ldrb r3,[r7,#23]
 351:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetFreq() api */
 1640              	 .loc 3 351 0
 1641 00de 1846     	 mov r0,r3
 1642 00e0 1837     	 adds r7,r7,#24
 1643              	.LCFI160:
 1644              	 .cfi_def_cfa_offset 8
 1645 00e2 BD46     	 mov sp,r7
 1646              	.LCFI161:
 1647              	 .cfi_def_cfa_register 13
 1648              	 
 1649 00e4 80BD     	 pop {r7,pc}
 1650              	.L57:
 1651 00e6 00BF     	 .align 2
 1652              	.L56:
 1653 00e8 5917B7D1 	 .word -776530087
 1654              	 .cfi_endproc
 1655              	.LFE298:
 1657              	 .section .text.PWM_lCCU4_SetFreqAndDutyCycle,"ax",%progbits
 1658              	 .align 2
 1659              	 .global PWM_lCCU4_SetFreqAndDutyCycle
 1660              	 .thumb
 1661              	 .thumb_func
 1663              	PWM_lCCU4_SetFreqAndDutyCycle:
 1664              	.LFB299:
 352:../Dave/Generated/PWM/pwm.c **** 
 353:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 354:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU4 slice. */
 355:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 356:../Dave/Generated/PWM/pwm.c **** {
 1665              	 .loc 3 356 0
 1666              	 .cfi_startproc
 1667              	 
 1668              	 
 1669 0000 80B5     	 push {r7,lr}
 1670              	.LCFI162:
 1671              	 .cfi_def_cfa_offset 8
 1672              	 .cfi_offset 7,-8
 1673              	 .cfi_offset 14,-4
 1674 0002 88B0     	 sub sp,sp,#32
 1675              	.LCFI163:
 1676              	 .cfi_def_cfa_offset 40
 1677 0004 00AF     	 add r7,sp,#0
 1678              	.LCFI164:
 1679              	 .cfi_def_cfa_register 7
 1680 0006 F860     	 str r0,[r7,#12]
 1681 0008 B960     	 str r1,[r7,#8]
 1682 000a 7A60     	 str r2,[r7,#4]
 357:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 358:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 359:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 360:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 361:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 362:../Dave/Generated/PWM/pwm.c **** 
 363:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreqAndDutyCycle:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 364:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreqAndDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 365:../Dave/Generated/PWM/pwm.c ****                                                                (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 366:../Dave/Generated/PWM/pwm.c **** 
 367:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 1683              	 .loc 3 367 0
 1684 000c FB68     	 ldr r3,[r7,#12]
 1685 000e 93F82930 	 ldrb r3,[r3,#41]
 1686 0012 FB77     	 strb r3,[r7,#31]
 368:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 1687              	 .loc 3 368 0
 1688 0014 0023     	 movs r3,#0
 1689 0016 BB77     	 strb r3,[r7,#30]
 369:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 1690              	 .loc 3 369 0
 1691 0018 0023     	 movs r3,#0
 1692 001a BB61     	 str r3,[r7,#24]
 370:../Dave/Generated/PWM/pwm.c **** 
 371:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 372:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 1693              	 .loc 3 372 0
 1694 001c FB7F     	 ldrb r3,[r7,#31]
 1695 001e 022B     	 cmp r3,#2
 1696 0020 62D0     	 beq .L59
 1697              	 .loc 3 372 0 is_stmt 0 discriminator 1
 1698 0022 BB68     	 ldr r3,[r7,#8]
 1699 0024 002B     	 cmp r3,#0
 1700 0026 5FD0     	 beq .L59
 373:../Dave/Generated/PWM/pwm.c ****   {
 374:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 1701              	 .loc 3 374 0 is_stmt 1
 1702 0028 0023     	 movs r3,#0
 1703 002a FB77     	 strb r3,[r7,#31]
 375:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 376:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu4_handle->module_frequency;
 1704              	 .loc 3 376 0
 1705 002c FB68     	 ldr r3,[r7,#12]
 1706 002e 1B68     	 ldr r3,[r3]
 1707 0030 1B68     	 ldr r3,[r3]
 1708 0032 7B61     	 str r3,[r7,#20]
 377:../Dave/Generated/PWM/pwm.c **** 
 378:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 379:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 1709              	 .loc 3 379 0
 1710 0034 0FE0     	 b .L60
 1711              	.L63:
 380:../Dave/Generated/PWM/pwm.c ****     {
 381:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 1712              	 .loc 3 381 0
 1713 0036 7A69     	 ldr r2,[r7,#20]
 1714 0038 BB68     	 ldr r3,[r7,#8]
 1715 003a B2FBF3F2 	 udiv r2,r2,r3
 1716 003e BB7F     	 ldrb r3,[r7,#30]
 1717 0040 22FA03F3 	 lsr r3,r2,r3
 1718 0044 BB61     	 str r3,[r7,#24]
 382:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 383:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT )
 1719              	 .loc 3 383 0
 1720 0046 BB69     	 ldr r3,[r7,#24]
 1721 0048 B3F5803F 	 cmp r3,#65536
 1722 004c 00D2     	 bcs .L61
 384:../Dave/Generated/PWM/pwm.c ****       {
 385:../Dave/Generated/PWM/pwm.c ****         break;
 1723              	 .loc 3 385 0
 1724 004e 05E0     	 b .L62
 1725              	.L61:
 386:../Dave/Generated/PWM/pwm.c ****       }
 387:../Dave/Generated/PWM/pwm.c **** 
 388:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 1726              	 .loc 3 388 0
 1727 0050 BB7F     	 ldrb r3,[r7,#30]
 1728 0052 0133     	 adds r3,r3,#1
 1729 0054 BB77     	 strb r3,[r7,#30]
 1730              	.L60:
 379:../Dave/Generated/PWM/pwm.c ****     {
 1731              	 .loc 3 379 0
 1732 0056 BB7F     	 ldrb r3,[r7,#30]
 1733 0058 0F2B     	 cmp r3,#15
 1734 005a ECD9     	 bls .L63
 1735              	.L62:
 389:../Dave/Generated/PWM/pwm.c ****     }
 390:../Dave/Generated/PWM/pwm.c **** 
 391:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 392:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || (duty_cycle > PWM_MAX_DUTY_CYCLE) || ((uint32_t)0 == per
 1736              	 .loc 3 392 0
 1737 005c BB7F     	 ldrb r3,[r7,#30]
 1738 005e 0F2B     	 cmp r3,#15
 1739 0060 07D8     	 bhi .L64
 1740              	 .loc 3 392 0 is_stmt 0 discriminator 1
 1741 0062 7B68     	 ldr r3,[r7,#4]
 1742 0064 42F21072 	 movw r2,#10000
 1743 0068 9342     	 cmp r3,r2
 1744 006a 02D8     	 bhi .L64
 1745              	 .loc 3 392 0 discriminator 2
 1746 006c BB69     	 ldr r3,[r7,#24]
 1747 006e 002B     	 cmp r3,#0
 1748 0070 02D1     	 bne .L65
 1749              	.L64:
 393:../Dave/Generated/PWM/pwm.c ****     {
 394:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 395:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 1750              	 .loc 3 395 0 is_stmt 1
 1751 0072 0123     	 movs r3,#1
 1752 0074 FB77     	 strb r3,[r7,#31]
 392:../Dave/Generated/PWM/pwm.c ****     {
 1753              	 .loc 3 392 0
 1754 0076 39E0     	 b .L67
 1755              	.L65:
 396:../Dave/Generated/PWM/pwm.c ****     }
 397:../Dave/Generated/PWM/pwm.c ****     else
 398:../Dave/Generated/PWM/pwm.c ****     {
 399:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 400:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PW
 1756              	 .loc 3 400 0
 1757 0078 7B68     	 ldr r3,[r7,#4]
 1758 007a C3F51C53 	 rsb r3,r3,#9984
 1759 007e 1033     	 adds r3,r3,#16
 1760 0080 BA69     	 ldr r2,[r7,#24]
 1761 0082 02FB03F3 	 mul r3,r2,r3
 1762 0086 1C4A     	 ldr r2,.L69
 1763 0088 A2FB0323 	 umull r2,r3,r2,r3
 1764 008c 5B0B     	 lsrs r3,r3,#13
 1765 008e 3B61     	 str r3,[r7,#16]
 401:../Dave/Generated/PWM/pwm.c **** 
 402:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetPrescaler(handle_ptr->ccu4_slice_ptr, prescaler);
 1766              	 .loc 3 402 0
 1767 0090 FB68     	 ldr r3,[r7,#12]
 1768 0092 9A68     	 ldr r2,[r3,#8]
 1769 0094 BB7F     	 ldrb r3,[r7,#30]
 1770 0096 1046     	 mov r0,r2
 1771 0098 1946     	 mov r1,r3
 1772 009a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPrescaler
 403:../Dave/Generated/PWM/pwm.c **** 
 404:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 405:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 1773              	 .loc 3 405 0
 1774 009e BB69     	 ldr r3,[r7,#24]
 1775 00a0 013B     	 subs r3,r3,#1
 1776 00a2 BB61     	 str r3,[r7,#24]
 406:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period_value));
 1777              	 .loc 3 406 0
 1778 00a4 FB68     	 ldr r3,[r7,#12]
 1779 00a6 9A68     	 ldr r2,[r3,#8]
 1780 00a8 BB69     	 ldr r3,[r7,#24]
 1781 00aa 9BB2     	 uxth r3,r3
 1782 00ac 1046     	 mov r0,r2
 1783 00ae 1946     	 mov r1,r3
 1784 00b0 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 407:../Dave/Generated/PWM/pwm.c **** 
 408:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 1785              	 .loc 3 408 0
 1786 00b4 FB68     	 ldr r3,[r7,#12]
 1787 00b6 9A68     	 ldr r2,[r3,#8]
 1788 00b8 3B69     	 ldr r3,[r7,#16]
 1789 00ba 9BB2     	 uxth r3,r3
 1790 00bc 1046     	 mov r0,r2
 1791 00be 1946     	 mov r1,r3
 1792 00c0 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 409:../Dave/Generated/PWM/pwm.c **** 
 410:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1793              	 .loc 3 410 0
 1794 00c4 FB68     	 ldr r3,[r7,#12]
 1795 00c6 5A68     	 ldr r2,[r3,#4]
 1796 00c8 FB68     	 ldr r3,[r7,#12]
 1797 00ca 5B6A     	 ldr r3,[r3,#36]
 1798 00cc 1046     	 mov r0,r2
 1799 00ce 1946     	 mov r1,r3
 1800 00d0 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 411:../Dave/Generated/PWM/pwm.c **** 
 412:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 1801              	 .loc 3 412 0
 1802 00d4 FB68     	 ldr r3,[r7,#12]
 1803 00d6 3A69     	 ldr r2,[r7,#16]
 1804 00d8 9A61     	 str r2,[r3,#24]
 413:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 1805              	 .loc 3 413 0
 1806 00da FB68     	 ldr r3,[r7,#12]
 1807 00dc BA69     	 ldr r2,[r7,#24]
 1808 00de DA61     	 str r2,[r3,#28]
 414:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 1809              	 .loc 3 414 0
 1810 00e0 FB68     	 ldr r3,[r7,#12]
 1811 00e2 7A68     	 ldr r2,[r7,#4]
 1812 00e4 1A62     	 str r2,[r3,#32]
 392:../Dave/Generated/PWM/pwm.c ****     {
 1813              	 .loc 3 392 0
 1814 00e6 01E0     	 b .L67
 1815              	.L59:
 415:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:frequency and duty cycle set")
 416:../Dave/Generated/PWM/pwm.c ****     }
 417:../Dave/Generated/PWM/pwm.c ****   }
 418:../Dave/Generated/PWM/pwm.c ****   else
 419:../Dave/Generated/PWM/pwm.c ****   {
 420:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 1816              	 .loc 3 420 0
 1817 00e8 0123     	 movs r3,#1
 1818 00ea FB77     	 strb r3,[r7,#31]
 1819              	.L67:
 421:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 422:../Dave/Generated/PWM/pwm.c ****   }
 423:../Dave/Generated/PWM/pwm.c **** 
 424:../Dave/Generated/PWM/pwm.c **** 
 425:../Dave/Generated/PWM/pwm.c ****   return status;
 1820              	 .loc 3 425 0
 1821 00ec FB7F     	 ldrb r3,[r7,#31]
 426:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetFreqAndDutyCycle() api */
 1822              	 .loc 3 426 0
 1823 00ee 1846     	 mov r0,r3
 1824 00f0 2037     	 adds r7,r7,#32
 1825              	.LCFI165:
 1826              	 .cfi_def_cfa_offset 8
 1827 00f2 BD46     	 mov sp,r7
 1828              	.LCFI166:
 1829              	 .cfi_def_cfa_register 13
 1830              	 
 1831 00f4 80BD     	 pop {r7,pc}
 1832              	.L70:
 1833 00f6 00BF     	 .align 2
 1834              	.L69:
 1835 00f8 5917B7D1 	 .word -776530087
 1836              	 .cfi_endproc
 1837              	.LFE299:
 1839              	 .section .text.PWM_lCCU8_Init,"ax",%progbits
 1840              	 .align 2
 1841              	 .global PWM_lCCU8_Init
 1842              	 .thumb
 1843              	 .thumb_func
 1845              	PWM_lCCU8_Init:
 1846              	.LFB300:
 427:../Dave/Generated/PWM/pwm.c **** 
 428:../Dave/Generated/PWM/pwm.c **** #endif /* end of CCU4 function definitions */
 429:../Dave/Generated/PWM/pwm.c **** 
 430:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 431:../Dave/Generated/PWM/pwm.c **** 
 432:../Dave/Generated/PWM/pwm.c **** /*Initialize the APP and CCU8 slice. */
 433:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_Init(PWM_t *const handle_ptr)
 434:../Dave/Generated/PWM/pwm.c **** {
 1847              	 .loc 3 434 0
 1848              	 .cfi_startproc
 1849              	 
 1850              	 
 1851 0000 80B5     	 push {r7,lr}
 1852              	.LCFI167:
 1853              	 .cfi_def_cfa_offset 8
 1854              	 .cfi_offset 7,-8
 1855              	 .cfi_offset 14,-4
 1856 0002 84B0     	 sub sp,sp,#16
 1857              	.LCFI168:
 1858              	 .cfi_def_cfa_offset 24
 1859 0004 00AF     	 add r7,sp,#0
 1860              	.LCFI169:
 1861              	 .cfi_def_cfa_register 7
 1862 0006 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status = PWM_STATUS_FAILURE;
 1863              	 .loc 3 435 0
 1864 0008 0123     	 movs r3,#1
 1865 000a FB73     	 strb r3,[r7,#15]
 436:../Dave/Generated/PWM/pwm.c **** 
 437:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED == handle_ptr->state)
 1866              	 .loc 3 437 0
 1867 000c 7B68     	 ldr r3,[r7,#4]
 1868 000e 93F82930 	 ldrb r3,[r3,#41]
 1869 0012 022B     	 cmp r3,#2
 1870 0014 4ED1     	 bne .L72
 438:../Dave/Generated/PWM/pwm.c ****   {
 439:../Dave/Generated/PWM/pwm.c ****     /* Initialize consumed Apps */
 440:../Dave/Generated/PWM/pwm.c ****     status = (PWM_STATUS_t)GLOBAL_CCU8_Init(handle_ptr->global_ccu8_handle);
 1871              	 .loc 3 440 0
 1872 0016 7B68     	 ldr r3,[r7,#4]
 1873 0018 1B68     	 ldr r3,[r3]
 1874 001a 1846     	 mov r0,r3
 1875 001c FFF7FEFF 	 bl GLOBAL_CCU8_Init
 1876 0020 0346     	 mov r3,r0
 1877 0022 FB73     	 strb r3,[r7,#15]
 441:../Dave/Generated/PWM/pwm.c **** 
 442:../Dave/Generated/PWM/pwm.c ****     /*Initialize CCU8 slice */
 443:../Dave/Generated/PWM/pwm.c ****     if (PWM_STATUS_SUCCESS == status)
 1878              	 .loc 3 443 0
 1879 0024 FB7B     	 ldrb r3,[r7,#15]
 1880 0026 002B     	 cmp r3,#0
 1881 0028 40D1     	 bne .L73
 444:../Dave/Generated/PWM/pwm.c ****     {
 445:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_Init:Initilizing Slice")
 446:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_CompareInit(handle_ptr->ccu8_slice_ptr, handle_ptr->ccu8_slice_config_ptr);
 1882              	 .loc 3 446 0
 1883 002a 7B68     	 ldr r3,[r7,#4]
 1884 002c 9A68     	 ldr r2,[r3,#8]
 1885 002e 7B68     	 ldr r3,[r7,#4]
 1886 0030 DB68     	 ldr r3,[r3,#12]
 1887 0032 1046     	 mov r0,r2
 1888 0034 1946     	 mov r1,r3
 1889 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 447:../Dave/Generated/PWM/pwm.c **** 
 448:../Dave/Generated/PWM/pwm.c ****       /* Set the period and compare register values */
 449:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr,
 1890              	 .loc 3 449 0
 1891 003a 7B68     	 ldr r3,[r7,#4]
 1892 003c 9A68     	 ldr r2,[r3,#8]
 450:../Dave/Generated/PWM/pwm.c ****     		                            (uint16_t)handle_ptr->period_value);
 1893              	 .loc 3 450 0
 1894 003e 7B68     	 ldr r3,[r7,#4]
 1895 0040 DB69     	 ldr r3,[r3,#28]
 449:../Dave/Generated/PWM/pwm.c ****     		                            (uint16_t)handle_ptr->period_value);
 1896              	 .loc 3 449 0
 1897 0042 9BB2     	 uxth r3,r3
 1898 0044 1046     	 mov r0,r2
 1899 0046 1946     	 mov r1,r3
 1900 0048 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 451:../Dave/Generated/PWM/pwm.c **** 
 452:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 1901              	 .loc 3 452 0
 1902 004c 7B68     	 ldr r3,[r7,#4]
 1903 004e 9A68     	 ldr r2,[r3,#8]
 453:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 1904              	 .loc 3 453 0
 1905 0050 7B68     	 ldr r3,[r7,#4]
 1906 0052 9B69     	 ldr r3,[r3,#24]
 452:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 1907              	 .loc 3 452 0
 1908 0054 9BB2     	 uxth r3,r3
 1909 0056 1046     	 mov r0,r2
 1910 0058 0021     	 movs r1,#0
 1911 005a 1A46     	 mov r2,r3
 1912 005c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 454:../Dave/Generated/PWM/pwm.c **** 
 455:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 1913              	 .loc 3 455 0
 1914 0060 7B68     	 ldr r3,[r7,#4]
 1915 0062 5A68     	 ldr r2,[r3,#4]
 1916 0064 7B68     	 ldr r3,[r7,#4]
 1917 0066 5B6A     	 ldr r3,[r3,#36]
 1918 0068 1046     	 mov r0,r2
 1919 006a 1946     	 mov r1,r3
 1920 006c FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 456:../Dave/Generated/PWM/pwm.c **** 
 457:../Dave/Generated/PWM/pwm.c ****       /* Initialize interrupts */
 458:../Dave/Generated/PWM/pwm.c ****       PWM_lCCU8_ConfigInterrupts(handle_ptr);
 1921              	 .loc 3 458 0
 1922 0070 7868     	 ldr r0,[r7,#4]
 1923 0072 FFF7FEFF 	 bl PWM_lCCU8_ConfigInterrupts
 459:../Dave/Generated/PWM/pwm.c **** 
 460:../Dave/Generated/PWM/pwm.c ****       XMC_GPIO_Init(handle_ptr->gpio_out_port,handle_ptr->gpio_out_pin,
 1924              	 .loc 3 460 0
 1925 0076 7B68     	 ldr r3,[r7,#4]
 1926 0078 1969     	 ldr r1,[r3,#16]
 1927 007a 7B68     	 ldr r3,[r7,#4]
 1928 007c 93F82C20 	 ldrb r2,[r3,#44]
 1929 0080 7B68     	 ldr r3,[r7,#4]
 1930 0082 5B69     	 ldr r3,[r3,#20]
 1931 0084 0846     	 mov r0,r1
 1932 0086 1146     	 mov r1,r2
 1933 0088 1A46     	 mov r2,r3
 1934 008a FFF7FEFF 	 bl XMC_GPIO_Init
 461:../Dave/Generated/PWM/pwm.c ****     		        handle_ptr->gpio_out_config);
 462:../Dave/Generated/PWM/pwm.c **** 
 463:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_SUCCESS;
 1935              	 .loc 3 463 0
 1936 008e 7B68     	 ldr r3,[r7,#4]
 1937 0090 0022     	 movs r2,#0
 1938 0092 83F82920 	 strb r2,[r3,#41]
 464:../Dave/Generated/PWM/pwm.c **** 
 465:../Dave/Generated/PWM/pwm.c ****       /* Start the PWM generation if start at initialization is enabled */
 466:../Dave/Generated/PWM/pwm.c ****       if ((bool) true == handle_ptr->start_control)
 1939              	 .loc 3 466 0
 1940 0096 7B68     	 ldr r3,[r7,#4]
 1941 0098 93F82F30 	 ldrb r3,[r3,#47]
 1942 009c 002B     	 cmp r3,#0
 1943 009e 02D0     	 beq .L74
 467:../Dave/Generated/PWM/pwm.c ****       {
 468:../Dave/Generated/PWM/pwm.c ****         PWM_Start(handle_ptr);
 1944              	 .loc 3 468 0
 1945 00a0 7868     	 ldr r0,[r7,#4]
 1946 00a2 FFF7FEFF 	 bl PWM_Start
 1947              	.L74:
 469:../Dave/Generated/PWM/pwm.c ****       }
 470:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 1948              	 .loc 3 470 0
 1949 00a6 0023     	 movs r3,#0
 1950 00a8 FB73     	 strb r3,[r7,#15]
 1951 00aa 03E0     	 b .L72
 1952              	.L73:
 471:../Dave/Generated/PWM/pwm.c ****     }
 472:../Dave/Generated/PWM/pwm.c ****     else
 473:../Dave/Generated/PWM/pwm.c ****     {
 474:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_UNINITIALIZED;
 1953              	 .loc 3 474 0
 1954 00ac 7B68     	 ldr r3,[r7,#4]
 1955 00ae 0222     	 movs r2,#2
 1956 00b0 83F82920 	 strb r2,[r3,#41]
 1957              	.L72:
 475:../Dave/Generated/PWM/pwm.c ****     }
 476:../Dave/Generated/PWM/pwm.c **** 
 477:../Dave/Generated/PWM/pwm.c ****   }
 478:../Dave/Generated/PWM/pwm.c ****   return(status);
 1958              	 .loc 3 478 0
 1959 00b4 FB7B     	 ldrb r3,[r7,#15]
 479:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Init() api */
 1960              	 .loc 3 479 0
 1961 00b6 1846     	 mov r0,r3
 1962 00b8 1037     	 adds r7,r7,#16
 1963              	.LCFI170:
 1964              	 .cfi_def_cfa_offset 8
 1965 00ba BD46     	 mov sp,r7
 1966              	.LCFI171:
 1967              	 .cfi_def_cfa_register 13
 1968              	 
 1969 00bc 80BD     	 pop {r7,pc}
 1970              	 .cfi_endproc
 1971              	.LFE300:
 1973 00be 00BF     	 .section .text.PWM_lCCU8_ConfigInterrupts,"ax",%progbits
 1974              	 .align 2
 1975              	 .global PWM_lCCU8_ConfigInterrupts
 1976              	 .thumb
 1977              	 .thumb_func
 1979              	PWM_lCCU8_ConfigInterrupts:
 1980              	.LFB301:
 480:../Dave/Generated/PWM/pwm.c **** 
 481:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 482:../Dave/Generated/PWM/pwm.c **** /* Initialize interrupts */
 483:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_ConfigInterrupts(PWM_t *const handle_ptr)
 484:../Dave/Generated/PWM/pwm.c **** {
 1981              	 .loc 3 484 0
 1982              	 .cfi_startproc
 1983              	 
 1984              	 
 1985 0000 80B5     	 push {r7,lr}
 1986              	.LCFI172:
 1987              	 .cfi_def_cfa_offset 8
 1988              	 .cfi_offset 7,-8
 1989              	 .cfi_offset 14,-4
 1990 0002 82B0     	 sub sp,sp,#8
 1991              	.LCFI173:
 1992              	 .cfi_def_cfa_offset 16
 1993 0004 00AF     	 add r7,sp,#0
 1994              	.LCFI174:
 1995              	 .cfi_def_cfa_register 7
 1996 0006 7860     	 str r0,[r7,#4]
 485:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->period_match_enable)
 1997              	 .loc 3 485 0
 1998 0008 7B68     	 ldr r3,[r7,#4]
 1999 000a 93F83030 	 ldrb r3,[r3,#48]
 2000 000e 002B     	 cmp r3,#0
 2001 0010 0FD0     	 beq .L77
 486:../Dave/Generated/PWM/pwm.c ****   {
 487:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_ConfigInterrupts:period match event enable")
 488:../Dave/Generated/PWM/pwm.c **** 
 489:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 2002              	 .loc 3 489 0
 2003 0012 7B68     	 ldr r3,[r7,#4]
 2004 0014 9B68     	 ldr r3,[r3,#8]
 2005 0016 1846     	 mov r0,r3
 2006 0018 0021     	 movs r1,#0
 2007 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 490:../Dave/Generated/PWM/pwm.c **** 
 491:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node for period match event */
 492:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH,
 2008              	 .loc 3 492 0
 2009 001e 7B68     	 ldr r3,[r7,#4]
 2010 0020 9A68     	 ldr r2,[r3,#8]
 2011 0022 7B68     	 ldr r3,[r7,#4]
 2012 0024 93F82A30 	 ldrb r3,[r3,#42]
 2013 0028 1046     	 mov r0,r2
 2014 002a 0021     	 movs r1,#0
 2015 002c 1A46     	 mov r2,r3
 2016 002e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 2017              	.L77:
 493:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu8_slice_period_match_node);
 494:../Dave/Generated/PWM/pwm.c ****   }
 495:../Dave/Generated/PWM/pwm.c **** 
 496:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->compare_match_enable)
 2018              	 .loc 3 496 0
 2019 0032 7B68     	 ldr r3,[r7,#4]
 2020 0034 93F83130 	 ldrb r3,[r3,#49]
 2021 0038 002B     	 cmp r3,#0
 2022 003a 0FD0     	 beq .L76
 497:../Dave/Generated/PWM/pwm.c ****   {
 498:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_ConfigInterrupts:compare match event enable ")
 499:../Dave/Generated/PWM/pwm.c **** 
 500:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 2023              	 .loc 3 500 0
 2024 003c 7B68     	 ldr r3,[r7,#4]
 2025 003e 9B68     	 ldr r3,[r3,#8]
 2026 0040 1846     	 mov r0,r3
 2027 0042 0221     	 movs r1,#2
 2028 0044 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 501:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node for compare match event */
 502:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH
 2029              	 .loc 3 502 0
 2030 0048 7B68     	 ldr r3,[r7,#4]
 2031 004a 9A68     	 ldr r2,[r3,#8]
 2032 004c 7B68     	 ldr r3,[r7,#4]
 2033 004e 93F82B30 	 ldrb r3,[r3,#43]
 2034 0052 1046     	 mov r0,r2
 2035 0054 0221     	 movs r1,#2
 2036 0056 1A46     	 mov r2,r3
 2037 0058 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 2038              	.L76:
 503:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu8_slice_compare_match_node);
 504:../Dave/Generated/PWM/pwm.c ****   }
 505:../Dave/Generated/PWM/pwm.c **** }
 2039              	 .loc 3 505 0
 2040 005c 0837     	 adds r7,r7,#8
 2041              	.LCFI175:
 2042              	 .cfi_def_cfa_offset 8
 2043 005e BD46     	 mov sp,r7
 2044              	.LCFI176:
 2045              	 .cfi_def_cfa_register 13
 2046              	 
 2047 0060 80BD     	 pop {r7,pc}
 2048              	 .cfi_endproc
 2049              	.LFE301:
 2051 0062 00BF     	 .section .text.PWM_lCCU8_Start,"ax",%progbits
 2052              	 .align 2
 2053              	 .global PWM_lCCU8_Start
 2054              	 .thumb
 2055              	 .thumb_func
 2057              	PWM_lCCU8_Start:
 2058              	.LFB302:
 506:../Dave/Generated/PWM/pwm.c **** 
 507:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 508:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU8 slice. */
 509:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Start(PWM_t *const handle_ptr)
 510:../Dave/Generated/PWM/pwm.c **** {
 2059              	 .loc 3 510 0
 2060              	 .cfi_startproc
 2061              	 
 2062              	 
 2063 0000 80B5     	 push {r7,lr}
 2064              	.LCFI177:
 2065              	 .cfi_def_cfa_offset 8
 2066              	 .cfi_offset 7,-8
 2067              	 .cfi_offset 14,-4
 2068 0002 82B0     	 sub sp,sp,#8
 2069              	.LCFI178:
 2070              	 .cfi_def_cfa_offset 16
 2071 0004 00AF     	 add r7,sp,#0
 2072              	.LCFI179:
 2073              	 .cfi_def_cfa_register 7
 2074 0006 7860     	 str r0,[r7,#4]
 511:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_Start:Invalid handle_ptr" , (handle_ptr != NULL))
 512:../Dave/Generated/PWM/pwm.c **** 
 513:../Dave/Generated/PWM/pwm.c ****   if ((PWM_STATUS_SUCCESS == handle_ptr->state) || (PWM_STATUS_STOPPED == handle_ptr->state))
 2075              	 .loc 3 513 0
 2076 0008 7B68     	 ldr r3,[r7,#4]
 2077 000a 93F82930 	 ldrb r3,[r3,#41]
 2078 000e 002B     	 cmp r3,#0
 2079 0010 04D0     	 beq .L80
 2080              	 .loc 3 513 0 is_stmt 0 discriminator 1
 2081 0012 7B68     	 ldr r3,[r7,#4]
 2082 0014 93F82930 	 ldrb r3,[r3,#41]
 2083 0018 042B     	 cmp r3,#4
 2084 001a 11D1     	 bne .L79
 2085              	.L80:
 514:../Dave/Generated/PWM/pwm.c ****   {
 515:../Dave/Generated/PWM/pwm.c ****     /* Clears IDLE mode for the slice */
 516:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_EnableClock(handle_ptr->ccu8_kernel_ptr,handle_ptr->slice_number);
 2086              	 .loc 3 516 0 is_stmt 1
 2087 001c 7B68     	 ldr r3,[r7,#4]
 2088 001e 5A68     	 ldr r2,[r3,#4]
 2089 0020 7B68     	 ldr r3,[r7,#4]
 2090 0022 93F82E30 	 ldrb r3,[r3,#46]
 2091 0026 1046     	 mov r0,r2
 2092 0028 1946     	 mov r1,r3
 2093 002a FFF7FEFF 	 bl XMC_CCU8_EnableClock
 517:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 2094              	 .loc 3 517 0
 2095 002e 7B68     	 ldr r3,[r7,#4]
 2096 0030 9B68     	 ldr r3,[r3,#8]
 2097 0032 1846     	 mov r0,r3
 2098 0034 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartTimer
 518:../Dave/Generated/PWM/pwm.c **** 
 519:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_RUNNING;
 2099              	 .loc 3 519 0
 2100 0038 7B68     	 ldr r3,[r7,#4]
 2101 003a 0322     	 movs r2,#3
 2102 003c 83F82920 	 strb r2,[r3,#41]
 2103              	.L79:
 520:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_Start:start PWM")
 521:../Dave/Generated/PWM/pwm.c ****   }
 522:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Start() api */
 2104              	 .loc 3 522 0
 2105 0040 0837     	 adds r7,r7,#8
 2106              	.LCFI180:
 2107              	 .cfi_def_cfa_offset 8
 2108 0042 BD46     	 mov sp,r7
 2109              	.LCFI181:
 2110              	 .cfi_def_cfa_register 13
 2111              	 
 2112 0044 80BD     	 pop {r7,pc}
 2113              	 .cfi_endproc
 2114              	.LFE302:
 2116 0046 00BF     	 .section .text.PWM_lCCU8_Stop,"ax",%progbits
 2117              	 .align 2
 2118              	 .global PWM_lCCU8_Stop
 2119              	 .thumb
 2120              	 .thumb_func
 2122              	PWM_lCCU8_Stop:
 2123              	.LFB303:
 523:../Dave/Generated/PWM/pwm.c **** 
 524:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 525:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU8 slice. */
 526:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Stop(PWM_t *const handle_ptr)
 527:../Dave/Generated/PWM/pwm.c **** {
 2124              	 .loc 3 527 0
 2125              	 .cfi_startproc
 2126              	 
 2127              	 
 2128 0000 80B5     	 push {r7,lr}
 2129              	.LCFI182:
 2130              	 .cfi_def_cfa_offset 8
 2131              	 .cfi_offset 7,-8
 2132              	 .cfi_offset 14,-4
 2133 0002 82B0     	 sub sp,sp,#8
 2134              	.LCFI183:
 2135              	 .cfi_def_cfa_offset 16
 2136 0004 00AF     	 add r7,sp,#0
 2137              	.LCFI184:
 2138              	 .cfi_def_cfa_register 7
 2139 0006 7860     	 str r0,[r7,#4]
 528:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_Stop:Invalid handle_ptr" , (handle_ptr != NULL))
 529:../Dave/Generated/PWM/pwm.c **** 
 530:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 2140              	 .loc 3 530 0
 2141 0008 7B68     	 ldr r3,[r7,#4]
 2142 000a 93F82930 	 ldrb r3,[r3,#41]
 2143 000e 022B     	 cmp r3,#2
 2144 0010 16D0     	 beq .L82
 531:../Dave/Generated/PWM/pwm.c ****   {
 532:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 2145              	 .loc 3 532 0
 2146 0012 7B68     	 ldr r3,[r7,#4]
 2147 0014 9B68     	 ldr r3,[r3,#8]
 2148 0016 1846     	 mov r0,r3
 2149 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 533:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 2150              	 .loc 3 533 0
 2151 001c 7B68     	 ldr r3,[r7,#4]
 2152 001e 9B68     	 ldr r3,[r3,#8]
 2153 0020 1846     	 mov r0,r3
 2154 0022 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearTimer
 534:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_DisableClock(handle_ptr->ccu8_kernel_ptr, handle_ptr->slice_number);
 2155              	 .loc 3 534 0
 2156 0026 7B68     	 ldr r3,[r7,#4]
 2157 0028 5A68     	 ldr r2,[r3,#4]
 2158 002a 7B68     	 ldr r3,[r7,#4]
 2159 002c 93F82E30 	 ldrb r3,[r3,#46]
 2160 0030 1046     	 mov r0,r2
 2161 0032 1946     	 mov r1,r3
 2162 0034 FFF7FEFF 	 bl XMC_CCU8_DisableClock
 535:../Dave/Generated/PWM/pwm.c **** 
 536:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_STOPPED;
 2163              	 .loc 3 536 0
 2164 0038 7B68     	 ldr r3,[r7,#4]
 2165 003a 0422     	 movs r2,#4
 2166 003c 83F82920 	 strb r2,[r3,#41]
 2167              	.L82:
 537:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_Stop:stop PWM")
 538:../Dave/Generated/PWM/pwm.c ****   }
 539:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Stop() api */
 2168              	 .loc 3 539 0
 2169 0040 0837     	 adds r7,r7,#8
 2170              	.LCFI185:
 2171              	 .cfi_def_cfa_offset 8
 2172 0042 BD46     	 mov sp,r7
 2173              	.LCFI186:
 2174              	 .cfi_def_cfa_register 13
 2175              	 
 2176 0044 80BD     	 pop {r7,pc}
 2177              	 .cfi_endproc
 2178              	.LFE303:
 2180 0046 00BF     	 .section .text.PWM_lCCU8_SetDutyCycle,"ax",%progbits
 2181              	 .align 2
 2182              	 .global PWM_lCCU8_SetDutyCycle
 2183              	 .thumb
 2184              	 .thumb_func
 2186              	PWM_lCCU8_SetDutyCycle:
 2187              	.LFB304:
 540:../Dave/Generated/PWM/pwm.c **** 
 541:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 542:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU8 slice. */
 543:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 544:../Dave/Generated/PWM/pwm.c **** {
 2188              	 .loc 3 544 0
 2189              	 .cfi_startproc
 2190              	 
 2191              	 
 2192 0000 80B5     	 push {r7,lr}
 2193              	.LCFI187:
 2194              	 .cfi_def_cfa_offset 8
 2195              	 .cfi_offset 7,-8
 2196              	 .cfi_offset 14,-4
 2197 0002 86B0     	 sub sp,sp,#24
 2198              	.LCFI188:
 2199              	 .cfi_def_cfa_offset 32
 2200 0004 00AF     	 add r7,sp,#0
 2201              	.LCFI189:
 2202              	 .cfi_def_cfa_register 7
 2203 0006 7860     	 str r0,[r7,#4]
 2204 0008 3960     	 str r1,[r7]
 545:../Dave/Generated/PWM/pwm.c ****   uint32_t period;
 546:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 547:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 548:../Dave/Generated/PWM/pwm.c **** 
 549:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 550:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 551:../Dave/Generated/PWM/pwm.c ****                                                           (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 552:../Dave/Generated/PWM/pwm.c **** 
 553:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 2205              	 .loc 3 553 0
 2206 000a 0123     	 movs r3,#1
 2207 000c FB75     	 strb r3,[r7,#23]
 554:../Dave/Generated/PWM/pwm.c ****   if (handle_ptr->state != PWM_STATUS_UNINITIALIZED)
 2208              	 .loc 3 554 0
 2209 000e 7B68     	 ldr r3,[r7,#4]
 2210 0010 93F82930 	 ldrb r3,[r3,#41]
 2211 0014 022B     	 cmp r3,#2
 2212 0016 2DD0     	 beq .L85
 555:../Dave/Generated/PWM/pwm.c ****   {
 556:../Dave/Generated/PWM/pwm.c ****     /* Duty cycle needs between 0 and 10000 */
 557:../Dave/Generated/PWM/pwm.c ****     if (duty_cycle <= PWM_MAX_DUTY_CYCLE)
 2213              	 .loc 3 557 0
 2214 0018 3B68     	 ldr r3,[r7]
 2215 001a 42F21072 	 movw r2,#10000
 2216 001e 9342     	 cmp r3,r2
 2217 0020 28D8     	 bhi .L85
 558:../Dave/Generated/PWM/pwm.c ****     {
 559:../Dave/Generated/PWM/pwm.c ****       period = (uint32_t)handle_ptr->period_value + 1U;
 2218              	 .loc 3 559 0
 2219 0022 7B68     	 ldr r3,[r7,#4]
 2220 0024 DB69     	 ldr r3,[r3,#28]
 2221 0026 0133     	 adds r3,r3,#1
 2222 0028 3B61     	 str r3,[r7,#16]
 560:../Dave/Generated/PWM/pwm.c **** 
 561:../Dave/Generated/PWM/pwm.c ****       /* Duty Cycle(symmetric) = (PR-CR1)+1 / period */
 562:../Dave/Generated/PWM/pwm.c ****       compare = ((period * ((uint32_t) PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PWM_DU
 2223              	 .loc 3 562 0
 2224 002a 3B68     	 ldr r3,[r7]
 2225 002c C3F51C53 	 rsb r3,r3,#9984
 2226 0030 1033     	 adds r3,r3,#16
 2227 0032 3A69     	 ldr r2,[r7,#16]
 2228 0034 02FB03F3 	 mul r3,r2,r3
 2229 0038 114A     	 ldr r2,.L87
 2230 003a A2FB0323 	 umull r2,r3,r2,r3
 2231 003e 5B0B     	 lsrs r3,r3,#13
 2232 0040 FB60     	 str r3,[r7,#12]
 563:../Dave/Generated/PWM/pwm.c **** 
 564:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 2233              	 .loc 3 564 0
 2234 0042 7B68     	 ldr r3,[r7,#4]
 2235 0044 FA68     	 ldr r2,[r7,#12]
 2236 0046 9A61     	 str r2,[r3,#24]
 565:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 2237              	 .loc 3 565 0
 2238 0048 7B68     	 ldr r3,[r7,#4]
 2239 004a 3A68     	 ldr r2,[r7]
 2240 004c 1A62     	 str r2,[r3,#32]
 566:../Dave/Generated/PWM/pwm.c **** 
 567:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 2241              	 .loc 3 567 0
 2242 004e 7B68     	 ldr r3,[r7,#4]
 2243 0050 9A68     	 ldr r2,[r3,#8]
 2244 0052 FB68     	 ldr r3,[r7,#12]
 2245 0054 9BB2     	 uxth r3,r3
 2246 0056 1046     	 mov r0,r2
 2247 0058 0021     	 movs r1,#0
 2248 005a 1A46     	 mov r2,r3
 2249 005c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 568:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 569:../Dave/Generated/PWM/pwm.c **** 
 570:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 2250              	 .loc 3 570 0
 2251 0060 7B68     	 ldr r3,[r7,#4]
 2252 0062 5A68     	 ldr r2,[r3,#4]
 2253 0064 7B68     	 ldr r3,[r7,#4]
 2254 0066 5B6A     	 ldr r3,[r3,#36]
 2255 0068 1046     	 mov r0,r2
 2256 006a 1946     	 mov r1,r3
 2257 006c FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 571:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 2258              	 .loc 3 571 0
 2259 0070 0023     	 movs r3,#0
 2260 0072 FB75     	 strb r3,[r7,#23]
 2261              	.L85:
 572:../Dave/Generated/PWM/pwm.c ****     }
 573:../Dave/Generated/PWM/pwm.c ****   }
 574:../Dave/Generated/PWM/pwm.c **** 
 575:../Dave/Generated/PWM/pwm.c ****   XMC_DEBUG("PWM_lCCU8_SetDutyCycle:dutycycle set")
 576:../Dave/Generated/PWM/pwm.c ****   return (status);
 2262              	 .loc 3 576 0
 2263 0074 FB7D     	 ldrb r3,[r7,#23]
 577:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetDutyCycle() api */
 2264              	 .loc 3 577 0
 2265 0076 1846     	 mov r0,r3
 2266 0078 1837     	 adds r7,r7,#24
 2267              	.LCFI190:
 2268              	 .cfi_def_cfa_offset 8
 2269 007a BD46     	 mov sp,r7
 2270              	.LCFI191:
 2271              	 .cfi_def_cfa_register 13
 2272              	 
 2273 007c 80BD     	 pop {r7,pc}
 2274              	.L88:
 2275 007e 00BF     	 .align 2
 2276              	.L87:
 2277 0080 5917B7D1 	 .word -776530087
 2278              	 .cfi_endproc
 2279              	.LFE304:
 2281              	 .section .text.PWM_lCCU8_SetFreq,"ax",%progbits
 2282              	 .align 2
 2283              	 .global PWM_lCCU8_SetFreq
 2284              	 .thumb
 2285              	 .thumb_func
 2287              	PWM_lCCU8_SetFreq:
 2288              	.LFB305:
 578:../Dave/Generated/PWM/pwm.c **** 
 579:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 580:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU8 slice. */
 581:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 582:../Dave/Generated/PWM/pwm.c **** {
 2289              	 .loc 3 582 0
 2290              	 .cfi_startproc
 2291              	 
 2292              	 
 2293 0000 80B5     	 push {r7,lr}
 2294              	.LCFI192:
 2295              	 .cfi_def_cfa_offset 8
 2296              	 .cfi_offset 7,-8
 2297              	 .cfi_offset 14,-4
 2298 0002 86B0     	 sub sp,sp,#24
 2299              	.LCFI193:
 2300              	 .cfi_def_cfa_offset 32
 2301 0004 00AF     	 add r7,sp,#0
 2302              	.LCFI194:
 2303              	 .cfi_def_cfa_register 7
 2304 0006 7860     	 str r0,[r7,#4]
 2305 0008 3960     	 str r1,[r7]
 583:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 584:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 585:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 586:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 587:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 588:../Dave/Generated/PWM/pwm.c **** 
 589:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreq:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 590:../Dave/Generated/PWM/pwm.c **** 
 591:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 2306              	 .loc 3 591 0
 2307 000a 7B68     	 ldr r3,[r7,#4]
 2308 000c 93F82930 	 ldrb r3,[r3,#41]
 2309 0010 FB75     	 strb r3,[r7,#23]
 592:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 2310              	 .loc 3 592 0
 2311 0012 0023     	 movs r3,#0
 2312 0014 BB75     	 strb r3,[r7,#22]
 593:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 2313              	 .loc 3 593 0
 2314 0016 0023     	 movs r3,#0
 2315 0018 3B61     	 str r3,[r7,#16]
 594:../Dave/Generated/PWM/pwm.c **** 
 595:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 596:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 2316              	 .loc 3 596 0
 2317 001a FB7D     	 ldrb r3,[r7,#23]
 2318 001c 022B     	 cmp r3,#2
 2319 001e 5CD0     	 beq .L90
 2320              	 .loc 3 596 0 is_stmt 0 discriminator 1
 2321 0020 3B68     	 ldr r3,[r7]
 2322 0022 002B     	 cmp r3,#0
 2323 0024 59D0     	 beq .L90
 597:../Dave/Generated/PWM/pwm.c ****   {
 598:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 2324              	 .loc 3 598 0 is_stmt 1
 2325 0026 0023     	 movs r3,#0
 2326 0028 FB75     	 strb r3,[r7,#23]
 599:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 600:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu8_handle->module_frequency;
 2327              	 .loc 3 600 0
 2328 002a 7B68     	 ldr r3,[r7,#4]
 2329 002c 1B68     	 ldr r3,[r3]
 2330 002e 1B68     	 ldr r3,[r3]
 2331 0030 FB60     	 str r3,[r7,#12]
 601:../Dave/Generated/PWM/pwm.c **** 
 602:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 603:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 2332              	 .loc 3 603 0
 2333 0032 0FE0     	 b .L91
 2334              	.L94:
 604:../Dave/Generated/PWM/pwm.c ****     {
 605:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 2335              	 .loc 3 605 0
 2336 0034 FA68     	 ldr r2,[r7,#12]
 2337 0036 3B68     	 ldr r3,[r7]
 2338 0038 B2FBF3F2 	 udiv r2,r2,r3
 2339 003c BB7D     	 ldrb r3,[r7,#22]
 2340 003e 22FA03F3 	 lsr r3,r2,r3
 2341 0042 3B61     	 str r3,[r7,#16]
 606:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 607:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT)
 2342              	 .loc 3 607 0
 2343 0044 3B69     	 ldr r3,[r7,#16]
 2344 0046 B3F5803F 	 cmp r3,#65536
 2345 004a 00D2     	 bcs .L92
 608:../Dave/Generated/PWM/pwm.c ****       {
 609:../Dave/Generated/PWM/pwm.c ****         break;
 2346              	 .loc 3 609 0
 2347 004c 05E0     	 b .L93
 2348              	.L92:
 610:../Dave/Generated/PWM/pwm.c ****       }
 611:../Dave/Generated/PWM/pwm.c **** 
 612:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 2349              	 .loc 3 612 0
 2350 004e BB7D     	 ldrb r3,[r7,#22]
 2351 0050 0133     	 adds r3,r3,#1
 2352 0052 BB75     	 strb r3,[r7,#22]
 2353              	.L91:
 603:../Dave/Generated/PWM/pwm.c ****     {
 2354              	 .loc 3 603 0
 2355 0054 BB7D     	 ldrb r3,[r7,#22]
 2356 0056 0F2B     	 cmp r3,#15
 2357 0058 ECD9     	 bls .L94
 2358              	.L93:
 613:../Dave/Generated/PWM/pwm.c ****     }
 614:../Dave/Generated/PWM/pwm.c **** 
 615:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 616:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || ((uint32_t)0 == period_value))
 2359              	 .loc 3 616 0
 2360 005a BB7D     	 ldrb r3,[r7,#22]
 2361 005c 0F2B     	 cmp r3,#15
 2362 005e 02D8     	 bhi .L95
 2363              	 .loc 3 616 0 is_stmt 0 discriminator 1
 2364 0060 3B69     	 ldr r3,[r7,#16]
 2365 0062 002B     	 cmp r3,#0
 2366 0064 02D1     	 bne .L96
 2367              	.L95:
 617:../Dave/Generated/PWM/pwm.c ****     {
 618:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreq:frequency could not be set")
 619:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 2368              	 .loc 3 619 0 is_stmt 1
 2369 0066 0123     	 movs r3,#1
 2370 0068 FB75     	 strb r3,[r7,#23]
 616:../Dave/Generated/PWM/pwm.c ****     {
 2371              	 .loc 3 616 0
 2372 006a 38E0     	 b .L98
 2373              	.L96:
 620:../Dave/Generated/PWM/pwm.c ****     }
 621:../Dave/Generated/PWM/pwm.c ****     else
 622:../Dave/Generated/PWM/pwm.c ****     {
 623:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values*/
 624:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * (PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 2374              	 .loc 3 624 0
 2375 006c 7B68     	 ldr r3,[r7,#4]
 2376 006e 1B6A     	 ldr r3,[r3,#32]
 2377 0070 C3F51C53 	 rsb r3,r3,#9984
 2378 0074 1033     	 adds r3,r3,#16
 2379 0076 3A69     	 ldr r2,[r7,#16]
 2380 0078 02FB03F3 	 mul r3,r2,r3
 2381 007c 1A4A     	 ldr r2,.L100
 2382 007e A2FB0323 	 umull r2,r3,r2,r3
 2383 0082 5B0B     	 lsrs r3,r3,#13
 2384 0084 BB60     	 str r3,[r7,#8]
 625:../Dave/Generated/PWM/pwm.c ****           		     / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
 626:../Dave/Generated/PWM/pwm.c **** 
 627:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetPrescaler(handle_ptr->ccu8_slice_ptr, prescaler);
 2385              	 .loc 3 627 0
 2386 0086 7B68     	 ldr r3,[r7,#4]
 2387 0088 9A68     	 ldr r2,[r3,#8]
 2388 008a BB7D     	 ldrb r3,[r7,#22]
 2389 008c 1046     	 mov r0,r2
 2390 008e 1946     	 mov r1,r3
 2391 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetPrescaler
 628:../Dave/Generated/PWM/pwm.c **** 
 629:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 630:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 2392              	 .loc 3 630 0
 2393 0094 3B69     	 ldr r3,[r7,#16]
 2394 0096 013B     	 subs r3,r3,#1
 2395 0098 3B61     	 str r3,[r7,#16]
 631:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period_value));
 2396              	 .loc 3 631 0
 2397 009a 7B68     	 ldr r3,[r7,#4]
 2398 009c 9A68     	 ldr r2,[r3,#8]
 2399 009e 3B69     	 ldr r3,[r7,#16]
 2400 00a0 9BB2     	 uxth r3,r3
 2401 00a2 1046     	 mov r0,r2
 2402 00a4 1946     	 mov r1,r3
 2403 00a6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 632:../Dave/Generated/PWM/pwm.c **** 
 633:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 2404              	 .loc 3 633 0
 2405 00aa 7B68     	 ldr r3,[r7,#4]
 2406 00ac 9A68     	 ldr r2,[r3,#8]
 2407 00ae BB68     	 ldr r3,[r7,#8]
 2408 00b0 9BB2     	 uxth r3,r3
 2409 00b2 1046     	 mov r0,r2
 2410 00b4 0021     	 movs r1,#0
 2411 00b6 1A46     	 mov r2,r3
 2412 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 634:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 635:../Dave/Generated/PWM/pwm.c **** 
 636:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 2413              	 .loc 3 636 0
 2414 00bc 7B68     	 ldr r3,[r7,#4]
 2415 00be 5A68     	 ldr r2,[r3,#4]
 2416 00c0 7B68     	 ldr r3,[r7,#4]
 2417 00c2 5B6A     	 ldr r3,[r3,#36]
 2418 00c4 1046     	 mov r0,r2
 2419 00c6 1946     	 mov r1,r3
 2420 00c8 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 637:../Dave/Generated/PWM/pwm.c **** 
 638:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 2421              	 .loc 3 638 0
 2422 00cc 7B68     	 ldr r3,[r7,#4]
 2423 00ce BA68     	 ldr r2,[r7,#8]
 2424 00d0 9A61     	 str r2,[r3,#24]
 639:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 2425              	 .loc 3 639 0
 2426 00d2 7B68     	 ldr r3,[r7,#4]
 2427 00d4 3A69     	 ldr r2,[r7,#16]
 2428 00d6 DA61     	 str r2,[r3,#28]
 616:../Dave/Generated/PWM/pwm.c ****     {
 2429              	 .loc 3 616 0
 2430 00d8 01E0     	 b .L98
 2431              	.L90:
 640:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreq:frequency set")
 641:../Dave/Generated/PWM/pwm.c **** 	}
 642:../Dave/Generated/PWM/pwm.c ****   }
 643:../Dave/Generated/PWM/pwm.c ****   else
 644:../Dave/Generated/PWM/pwm.c ****   {
 645:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 2432              	 .loc 3 645 0
 2433 00da 0123     	 movs r3,#1
 2434 00dc FB75     	 strb r3,[r7,#23]
 2435              	.L98:
 646:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_SetFreq:frequency could not be set")
 647:../Dave/Generated/PWM/pwm.c ****   }
 648:../Dave/Generated/PWM/pwm.c **** 
 649:../Dave/Generated/PWM/pwm.c ****   return status;
 2436              	 .loc 3 649 0
 2437 00de FB7D     	 ldrb r3,[r7,#23]
 650:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetFreq() api */
 2438              	 .loc 3 650 0
 2439 00e0 1846     	 mov r0,r3
 2440 00e2 1837     	 adds r7,r7,#24
 2441              	.LCFI195:
 2442              	 .cfi_def_cfa_offset 8
 2443 00e4 BD46     	 mov sp,r7
 2444              	.LCFI196:
 2445              	 .cfi_def_cfa_register 13
 2446              	 
 2447 00e6 80BD     	 pop {r7,pc}
 2448              	.L101:
 2449              	 .align 2
 2450              	.L100:
 2451 00e8 5917B7D1 	 .word -776530087
 2452              	 .cfi_endproc
 2453              	.LFE305:
 2455              	 .section .text.PWM_lCCU8_SetFreqAndDutyCycle,"ax",%progbits
 2456              	 .align 2
 2457              	 .global PWM_lCCU8_SetFreqAndDutyCycle
 2458              	 .thumb
 2459              	 .thumb_func
 2461              	PWM_lCCU8_SetFreqAndDutyCycle:
 2462              	.LFB306:
 651:../Dave/Generated/PWM/pwm.c **** 
 652:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 653:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU8 slice. */
 654:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 655:../Dave/Generated/PWM/pwm.c **** {
 2463              	 .loc 3 655 0
 2464              	 .cfi_startproc
 2465              	 
 2466              	 
 2467 0000 80B5     	 push {r7,lr}
 2468              	.LCFI197:
 2469              	 .cfi_def_cfa_offset 8
 2470              	 .cfi_offset 7,-8
 2471              	 .cfi_offset 14,-4
 2472 0002 88B0     	 sub sp,sp,#32
 2473              	.LCFI198:
 2474              	 .cfi_def_cfa_offset 40
 2475 0004 00AF     	 add r7,sp,#0
 2476              	.LCFI199:
 2477              	 .cfi_def_cfa_register 7
 2478 0006 F860     	 str r0,[r7,#12]
 2479 0008 B960     	 str r1,[r7,#8]
 2480 000a 7A60     	 str r2,[r7,#4]
 656:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 657:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 658:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 659:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 660:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 661:../Dave/Generated/PWM/pwm.c **** 
 662:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreqAndDutyCycle:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 663:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreqAndDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 664:../Dave/Generated/PWM/pwm.c ****   		                                                       (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 665:../Dave/Generated/PWM/pwm.c **** 
 666:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 2481              	 .loc 3 666 0
 2482 000c FB68     	 ldr r3,[r7,#12]
 2483 000e 93F82930 	 ldrb r3,[r3,#41]
 2484 0012 FB77     	 strb r3,[r7,#31]
 667:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 2485              	 .loc 3 667 0
 2486 0014 0023     	 movs r3,#0
 2487 0016 BB77     	 strb r3,[r7,#30]
 668:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 2488              	 .loc 3 668 0
 2489 0018 0023     	 movs r3,#0
 2490 001a BB61     	 str r3,[r7,#24]
 669:../Dave/Generated/PWM/pwm.c **** 
 670:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 671:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 2491              	 .loc 3 671 0
 2492 001c FB7F     	 ldrb r3,[r7,#31]
 2493 001e 022B     	 cmp r3,#2
 2494 0020 63D0     	 beq .L103
 2495              	 .loc 3 671 0 is_stmt 0 discriminator 1
 2496 0022 BB68     	 ldr r3,[r7,#8]
 2497 0024 002B     	 cmp r3,#0
 2498 0026 60D0     	 beq .L103
 672:../Dave/Generated/PWM/pwm.c ****   {
 673:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 2499              	 .loc 3 673 0 is_stmt 1
 2500 0028 0023     	 movs r3,#0
 2501 002a FB77     	 strb r3,[r7,#31]
 674:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 675:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu8_handle->module_frequency;
 2502              	 .loc 3 675 0
 2503 002c FB68     	 ldr r3,[r7,#12]
 2504 002e 1B68     	 ldr r3,[r3]
 2505 0030 1B68     	 ldr r3,[r3]
 2506 0032 7B61     	 str r3,[r7,#20]
 676:../Dave/Generated/PWM/pwm.c **** 
 677:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 678:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 2507              	 .loc 3 678 0
 2508 0034 0FE0     	 b .L104
 2509              	.L107:
 679:../Dave/Generated/PWM/pwm.c ****     {
 680:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 2510              	 .loc 3 680 0
 2511 0036 7A69     	 ldr r2,[r7,#20]
 2512 0038 BB68     	 ldr r3,[r7,#8]
 2513 003a B2FBF3F2 	 udiv r2,r2,r3
 2514 003e BB7F     	 ldrb r3,[r7,#30]
 2515 0040 22FA03F3 	 lsr r3,r2,r3
 2516 0044 BB61     	 str r3,[r7,#24]
 681:../Dave/Generated/PWM/pwm.c **** 	  /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 682:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT)
 2517              	 .loc 3 682 0
 2518 0046 BB69     	 ldr r3,[r7,#24]
 2519 0048 B3F5803F 	 cmp r3,#65536
 2520 004c 00D2     	 bcs .L105
 683:../Dave/Generated/PWM/pwm.c ****       {
 684:../Dave/Generated/PWM/pwm.c ****         break;
 2521              	 .loc 3 684 0
 2522 004e 05E0     	 b .L106
 2523              	.L105:
 685:../Dave/Generated/PWM/pwm.c ****       }
 686:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 2524              	 .loc 3 686 0
 2525 0050 BB7F     	 ldrb r3,[r7,#30]
 2526 0052 0133     	 adds r3,r3,#1
 2527 0054 BB77     	 strb r3,[r7,#30]
 2528              	.L104:
 678:../Dave/Generated/PWM/pwm.c ****     {
 2529              	 .loc 3 678 0
 2530 0056 BB7F     	 ldrb r3,[r7,#30]
 2531 0058 0F2B     	 cmp r3,#15
 2532 005a ECD9     	 bls .L107
 2533              	.L106:
 687:../Dave/Generated/PWM/pwm.c ****     }
 688:../Dave/Generated/PWM/pwm.c **** 
 689:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 690:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || (duty_cycle > PWM_MAX_DUTY_CYCLE) || ((uint32_t)0 == per
 2534              	 .loc 3 690 0
 2535 005c BB7F     	 ldrb r3,[r7,#30]
 2536 005e 0F2B     	 cmp r3,#15
 2537 0060 07D8     	 bhi .L108
 2538              	 .loc 3 690 0 is_stmt 0 discriminator 1
 2539 0062 7B68     	 ldr r3,[r7,#4]
 2540 0064 42F21072 	 movw r2,#10000
 2541 0068 9342     	 cmp r3,r2
 2542 006a 02D8     	 bhi .L108
 2543              	 .loc 3 690 0 discriminator 2
 2544 006c BB69     	 ldr r3,[r7,#24]
 2545 006e 002B     	 cmp r3,#0
 2546 0070 02D1     	 bne .L109
 2547              	.L108:
 691:../Dave/Generated/PWM/pwm.c ****     {
 692:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 693:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 2548              	 .loc 3 693 0 is_stmt 1
 2549 0072 0123     	 movs r3,#1
 2550 0074 FB77     	 strb r3,[r7,#31]
 690:../Dave/Generated/PWM/pwm.c ****     {
 2551              	 .loc 3 690 0
 2552 0076 3AE0     	 b .L111
 2553              	.L109:
 694:../Dave/Generated/PWM/pwm.c ****     }
 695:../Dave/Generated/PWM/pwm.c ****     else
 696:../Dave/Generated/PWM/pwm.c ****     {
 697:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 698:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PW
 2554              	 .loc 3 698 0
 2555 0078 7B68     	 ldr r3,[r7,#4]
 2556 007a C3F51C53 	 rsb r3,r3,#9984
 2557 007e 1033     	 adds r3,r3,#16
 2558 0080 BA69     	 ldr r2,[r7,#24]
 2559 0082 02FB03F3 	 mul r3,r2,r3
 2560 0086 1C4A     	 ldr r2,.L113
 2561 0088 A2FB0323 	 umull r2,r3,r2,r3
 2562 008c 5B0B     	 lsrs r3,r3,#13
 2563 008e 3B61     	 str r3,[r7,#16]
 699:../Dave/Generated/PWM/pwm.c **** 
 700:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetPrescaler(handle_ptr->ccu8_slice_ptr, prescaler);
 2564              	 .loc 3 700 0
 2565 0090 FB68     	 ldr r3,[r7,#12]
 2566 0092 9A68     	 ldr r2,[r3,#8]
 2567 0094 BB7F     	 ldrb r3,[r7,#30]
 2568 0096 1046     	 mov r0,r2
 2569 0098 1946     	 mov r1,r3
 2570 009a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetPrescaler
 701:../Dave/Generated/PWM/pwm.c **** 
 702:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 703:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 2571              	 .loc 3 703 0
 2572 009e BB69     	 ldr r3,[r7,#24]
 2573 00a0 013B     	 subs r3,r3,#1
 2574 00a2 BB61     	 str r3,[r7,#24]
 704:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period_value));
 2575              	 .loc 3 704 0
 2576 00a4 FB68     	 ldr r3,[r7,#12]
 2577 00a6 9A68     	 ldr r2,[r3,#8]
 2578 00a8 BB69     	 ldr r3,[r7,#24]
 2579 00aa 9BB2     	 uxth r3,r3
 2580 00ac 1046     	 mov r0,r2
 2581 00ae 1946     	 mov r1,r3
 2582 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 705:../Dave/Generated/PWM/pwm.c **** 
 706:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 2583              	 .loc 3 706 0
 2584 00b4 FB68     	 ldr r3,[r7,#12]
 2585 00b6 9A68     	 ldr r2,[r3,#8]
 2586 00b8 3B69     	 ldr r3,[r7,#16]
 2587 00ba 9BB2     	 uxth r3,r3
 2588 00bc 1046     	 mov r0,r2
 2589 00be 0021     	 movs r1,#0
 2590 00c0 1A46     	 mov r2,r3
 2591 00c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 707:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 708:../Dave/Generated/PWM/pwm.c **** 
 709:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 2592              	 .loc 3 709 0
 2593 00c6 FB68     	 ldr r3,[r7,#12]
 2594 00c8 5A68     	 ldr r2,[r3,#4]
 2595 00ca FB68     	 ldr r3,[r7,#12]
 2596 00cc 5B6A     	 ldr r3,[r3,#36]
 2597 00ce 1046     	 mov r0,r2
 2598 00d0 1946     	 mov r1,r3
 2599 00d2 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 710:../Dave/Generated/PWM/pwm.c **** 
 711:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 2600              	 .loc 3 711 0
 2601 00d6 FB68     	 ldr r3,[r7,#12]
 2602 00d8 3A69     	 ldr r2,[r7,#16]
 2603 00da 9A61     	 str r2,[r3,#24]
 712:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 2604              	 .loc 3 712 0
 2605 00dc FB68     	 ldr r3,[r7,#12]
 2606 00de BA69     	 ldr r2,[r7,#24]
 2607 00e0 DA61     	 str r2,[r3,#28]
 713:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 2608              	 .loc 3 713 0
 2609 00e2 FB68     	 ldr r3,[r7,#12]
 2610 00e4 7A68     	 ldr r2,[r7,#4]
 2611 00e6 1A62     	 str r2,[r3,#32]
 690:../Dave/Generated/PWM/pwm.c ****     {
 2612              	 .loc 3 690 0
 2613 00e8 01E0     	 b .L111
 2614              	.L103:
 714:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency and Duty cycle set")
 715:../Dave/Generated/PWM/pwm.c ****     }
 716:../Dave/Generated/PWM/pwm.c ****   }
 717:../Dave/Generated/PWM/pwm.c ****   else
 718:../Dave/Generated/PWM/pwm.c ****   {
 719:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 2615              	 .loc 3 719 0
 2616 00ea 0123     	 movs r3,#1
 2617 00ec FB77     	 strb r3,[r7,#31]
 2618              	.L111:
 720:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency and Duty cycle could not be set")
 721:../Dave/Generated/PWM/pwm.c ****   }
 722:../Dave/Generated/PWM/pwm.c **** 
 723:../Dave/Generated/PWM/pwm.c **** 
 724:../Dave/Generated/PWM/pwm.c ****   return status;
 2619              	 .loc 3 724 0
 2620 00ee FB7F     	 ldrb r3,[r7,#31]
 725:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetFreqAndDutyCycle() api */
 2621              	 .loc 3 725 0
 2622 00f0 1846     	 mov r0,r3
 2623 00f2 2037     	 adds r7,r7,#32
 2624              	.LCFI200:
 2625              	 .cfi_def_cfa_offset 8
 2626 00f4 BD46     	 mov sp,r7
 2627              	.LCFI201:
 2628              	 .cfi_def_cfa_register 13
 2629              	 
 2630 00f6 80BD     	 pop {r7,pc}
 2631              	.L114:
 2632              	 .align 2
 2633              	.L113:
 2634 00f8 5917B7D1 	 .word -776530087
 2635              	 .cfi_endproc
 2636              	.LFE306:
 2638              	 .section .text.PWM_GetAppVersion,"ax",%progbits
 2639              	 .align 2
 2640              	 .global PWM_GetAppVersion
 2641              	 .thumb
 2642              	 .thumb_func
 2644              	PWM_GetAppVersion:
 2645              	.LFB307:
 726:../Dave/Generated/PWM/pwm.c **** 
 727:../Dave/Generated/PWM/pwm.c **** #endif /* end of CCU8 function definitions */
 728:../Dave/Generated/PWM/pwm.c **** 
 729:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
 730:../Dave/Generated/PWM/pwm.c ****  * API IMPLEMENTATION
 731:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
 732:../Dave/Generated/PWM/pwm.c **** 
 733:../Dave/Generated/PWM/pwm.c **** /*This function returns the version of the PWM App*/
 734:../Dave/Generated/PWM/pwm.c **** DAVE_APP_VERSION_t PWM_GetAppVersion(void)
 735:../Dave/Generated/PWM/pwm.c **** {
 2646              	 .loc 3 735 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650              	 
 2651 0000 80B4     	 push {r7}
 2652              	.LCFI202:
 2653              	 .cfi_def_cfa_offset 4
 2654              	 .cfi_offset 7,-4
 2655 0002 83B0     	 sub sp,sp,#12
 2656              	.LCFI203:
 2657              	 .cfi_def_cfa_offset 16
 2658 0004 00AF     	 add r7,sp,#0
 2659              	.LCFI204:
 2660              	 .cfi_def_cfa_register 7
 736:../Dave/Generated/PWM/pwm.c ****   DAVE_APP_VERSION_t version;
 737:../Dave/Generated/PWM/pwm.c **** 
 738:../Dave/Generated/PWM/pwm.c ****   version.major = (uint8_t) PWM_MAJOR_VERSION;
 2661              	 .loc 3 738 0
 2662 0006 0423     	 movs r3,#4
 2663 0008 3B70     	 strb r3,[r7]
 739:../Dave/Generated/PWM/pwm.c ****   version.minor = (uint8_t) PWM_MINOR_VERSION;
 2664              	 .loc 3 739 0
 2665 000a 0123     	 movs r3,#1
 2666 000c 7B70     	 strb r3,[r7,#1]
 740:../Dave/Generated/PWM/pwm.c ****   version.patch = (uint8_t) PWM_PATCH_VERSION;
 2667              	 .loc 3 740 0
 2668 000e 0A23     	 movs r3,#10
 2669 0010 BB70     	 strb r3,[r7,#2]
 741:../Dave/Generated/PWM/pwm.c **** 
 742:../Dave/Generated/PWM/pwm.c ****   return version;
 2670              	 .loc 3 742 0
 2671 0012 3B1D     	 adds r3,r7,#4
 2672 0014 3A46     	 mov r2,r7
 2673 0016 1268     	 ldr r2,[r2]
 2674 0018 1146     	 mov r1,r2
 2675 001a 1980     	 strh r1,[r3]
 2676 001c 0233     	 adds r3,r3,#2
 2677 001e 120C     	 lsrs r2,r2,#16
 2678 0020 1A70     	 strb r2,[r3]
 2679 0022 0023     	 movs r3,#0
 2680 0024 3A79     	 ldrb r2,[r7,#4]
 2681 0026 62F30703 	 bfi r3,r2,#0,#8
 2682 002a 7A79     	 ldrb r2,[r7,#5]
 2683 002c 62F30F23 	 bfi r3,r2,#8,#8
 2684 0030 BA79     	 ldrb r2,[r7,#6]
 2685 0032 62F31743 	 bfi r3,r2,#16,#8
 743:../Dave/Generated/PWM/pwm.c **** }
 2686              	 .loc 3 743 0
 2687 0036 1846     	 mov r0,r3
 2688 0038 0C37     	 adds r7,r7,#12
 2689              	.LCFI205:
 2690              	 .cfi_def_cfa_offset 4
 2691 003a BD46     	 mov sp,r7
 2692              	.LCFI206:
 2693              	 .cfi_def_cfa_register 13
 2694              	 
 2695 003c 5DF8047B 	 ldr r7,[sp],#4
 2696              	.LCFI207:
 2697              	 .cfi_restore 7
 2698              	 .cfi_def_cfa_offset 0
 2699 0040 7047     	 bx lr
 2700              	 .cfi_endproc
 2701              	.LFE307:
 2703 0042 00BF     	 .section .text.PWM_Init,"ax",%progbits
 2704              	 .align 2
 2705              	 .global PWM_Init
 2706              	 .thumb
 2707              	 .thumb_func
 2709              	PWM_Init:
 2710              	.LFB308:
 744:../Dave/Generated/PWM/pwm.c **** 
 745:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 746:../Dave/Generated/PWM/pwm.c **** /* This function initializes the app */
 747:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_Init(PWM_t *const handle_ptr)
 748:../Dave/Generated/PWM/pwm.c **** {
 2711              	 .loc 3 748 0
 2712              	 .cfi_startproc
 2713              	 
 2714              	 
 2715 0000 80B5     	 push {r7,lr}
 2716              	.LCFI208:
 2717              	 .cfi_def_cfa_offset 8
 2718              	 .cfi_offset 7,-8
 2719              	 .cfi_offset 14,-4
 2720 0002 84B0     	 sub sp,sp,#16
 2721              	.LCFI209:
 2722              	 .cfi_def_cfa_offset 24
 2723 0004 00AF     	 add r7,sp,#0
 2724              	.LCFI210:
 2725              	 .cfi_def_cfa_register 7
 2726 0006 7860     	 str r0,[r7,#4]
 749:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 750:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 2727              	 .loc 3 750 0
 2728 0008 0123     	 movs r3,#1
 2729 000a FB73     	 strb r3,[r7,#15]
 751:../Dave/Generated/PWM/pwm.c **** 
 752:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Init:Invalid handle_ptr" , (handle_ptr != NULL))
 753:../Dave/Generated/PWM/pwm.c **** 
 754:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 755:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2730              	 .loc 3 755 0
 2731 000c 7B68     	 ldr r3,[r7,#4]
 2732 000e 93F82830 	 ldrb r3,[r3,#40]
 2733 0012 002B     	 cmp r3,#0
 2734 0014 04D1     	 bne .L118
 756:../Dave/Generated/PWM/pwm.c ****   {
 757:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_Init(handle_ptr);
 2735              	 .loc 3 757 0
 2736 0016 7868     	 ldr r0,[r7,#4]
 2737 0018 FFF7FEFF 	 bl PWM_lCCU4_Init
 2738 001c 0346     	 mov r3,r0
 2739 001e FB73     	 strb r3,[r7,#15]
 2740              	.L118:
 758:../Dave/Generated/PWM/pwm.c ****   }
 759:../Dave/Generated/PWM/pwm.c **** #endif
 760:../Dave/Generated/PWM/pwm.c **** 
 761:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 762:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 2741              	 .loc 3 762 0
 2742 0020 7B68     	 ldr r3,[r7,#4]
 2743 0022 93F82830 	 ldrb r3,[r3,#40]
 2744 0026 012B     	 cmp r3,#1
 2745 0028 04D1     	 bne .L119
 763:../Dave/Generated/PWM/pwm.c ****   {
 764:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_Init(handle_ptr);
 2746              	 .loc 3 764 0
 2747 002a 7868     	 ldr r0,[r7,#4]
 2748 002c FFF7FEFF 	 bl PWM_lCCU8_Init
 2749 0030 0346     	 mov r3,r0
 2750 0032 FB73     	 strb r3,[r7,#15]
 2751              	.L119:
 765:../Dave/Generated/PWM/pwm.c ****   }
 766:../Dave/Generated/PWM/pwm.c **** #endif
 767:../Dave/Generated/PWM/pwm.c **** 
 768:../Dave/Generated/PWM/pwm.c ****   return (status);
 2752              	 .loc 3 768 0
 2753 0034 FB7B     	 ldrb r3,[r7,#15]
 769:../Dave/Generated/PWM/pwm.c **** }
 2754              	 .loc 3 769 0
 2755 0036 1846     	 mov r0,r3
 2756 0038 1037     	 adds r7,r7,#16
 2757              	.LCFI211:
 2758              	 .cfi_def_cfa_offset 8
 2759 003a BD46     	 mov sp,r7
 2760              	.LCFI212:
 2761              	 .cfi_def_cfa_register 13
 2762              	 
 2763 003c 80BD     	 pop {r7,pc}
 2764              	 .cfi_endproc
 2765              	.LFE308:
 2767 003e 00BF     	 .section .text.PWM_Start,"ax",%progbits
 2768              	 .align 2
 2769              	 .global PWM_Start
 2770              	 .thumb
 2771              	 .thumb_func
 2773              	PWM_Start:
 2774              	.LFB309:
 770:../Dave/Generated/PWM/pwm.c **** 
 771:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 772:../Dave/Generated/PWM/pwm.c **** /* This function starts the PWM generation. This needs to be called even if external start is confi
 773:../Dave/Generated/PWM/pwm.c **** void PWM_Start(PWM_t *const handle_ptr)
 774:../Dave/Generated/PWM/pwm.c **** {
 2775              	 .loc 3 774 0
 2776              	 .cfi_startproc
 2777              	 
 2778              	 
 2779 0000 80B5     	 push {r7,lr}
 2780              	.LCFI213:
 2781              	 .cfi_def_cfa_offset 8
 2782              	 .cfi_offset 7,-8
 2783              	 .cfi_offset 14,-4
 2784 0002 82B0     	 sub sp,sp,#8
 2785              	.LCFI214:
 2786              	 .cfi_def_cfa_offset 16
 2787 0004 00AF     	 add r7,sp,#0
 2788              	.LCFI215:
 2789              	 .cfi_def_cfa_register 7
 2790 0006 7860     	 str r0,[r7,#4]
 775:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Start:Invalid handle_ptr" , (handle_ptr != NULL))
 776:../Dave/Generated/PWM/pwm.c **** 
 777:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 778:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2791              	 .loc 3 778 0
 2792 0008 7B68     	 ldr r3,[r7,#4]
 2793 000a 93F82830 	 ldrb r3,[r3,#40]
 2794 000e 002B     	 cmp r3,#0
 2795 0010 02D1     	 bne .L122
 779:../Dave/Generated/PWM/pwm.c ****   {
 780:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU4_Start(handle_ptr);
 2796              	 .loc 3 780 0
 2797 0012 7868     	 ldr r0,[r7,#4]
 2798 0014 FFF7FEFF 	 bl PWM_lCCU4_Start
 2799              	.L122:
 781:../Dave/Generated/PWM/pwm.c ****   }
 782:../Dave/Generated/PWM/pwm.c **** #endif
 783:../Dave/Generated/PWM/pwm.c **** 
 784:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 785:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 2800              	 .loc 3 785 0
 2801 0018 7B68     	 ldr r3,[r7,#4]
 2802 001a 93F82830 	 ldrb r3,[r3,#40]
 2803 001e 012B     	 cmp r3,#1
 2804 0020 02D1     	 bne .L121
 786:../Dave/Generated/PWM/pwm.c ****   {
 787:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU8_Start(handle_ptr);
 2805              	 .loc 3 787 0
 2806 0022 7868     	 ldr r0,[r7,#4]
 2807 0024 FFF7FEFF 	 bl PWM_lCCU8_Start
 2808              	.L121:
 788:../Dave/Generated/PWM/pwm.c ****   }
 789:../Dave/Generated/PWM/pwm.c **** #endif
 790:../Dave/Generated/PWM/pwm.c **** }
 2809              	 .loc 3 790 0
 2810 0028 0837     	 adds r7,r7,#8
 2811              	.LCFI216:
 2812              	 .cfi_def_cfa_offset 8
 2813 002a BD46     	 mov sp,r7
 2814              	.LCFI217:
 2815              	 .cfi_def_cfa_register 13
 2816              	 
 2817 002c 80BD     	 pop {r7,pc}
 2818              	 .cfi_endproc
 2819              	.LFE309:
 2821 002e 00BF     	 .section .text.PWM_Stop,"ax",%progbits
 2822              	 .align 2
 2823              	 .global PWM_Stop
 2824              	 .thumb
 2825              	 .thumb_func
 2827              	PWM_Stop:
 2828              	.LFB310:
 791:../Dave/Generated/PWM/pwm.c **** 
 792:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 793:../Dave/Generated/PWM/pwm.c **** /* This function stops the PWM generation. */
 794:../Dave/Generated/PWM/pwm.c **** void PWM_Stop(PWM_t *const handle_ptr)
 795:../Dave/Generated/PWM/pwm.c **** {
 2829              	 .loc 3 795 0
 2830              	 .cfi_startproc
 2831              	 
 2832              	 
 2833 0000 80B5     	 push {r7,lr}
 2834              	.LCFI218:
 2835              	 .cfi_def_cfa_offset 8
 2836              	 .cfi_offset 7,-8
 2837              	 .cfi_offset 14,-4
 2838 0002 82B0     	 sub sp,sp,#8
 2839              	.LCFI219:
 2840              	 .cfi_def_cfa_offset 16
 2841 0004 00AF     	 add r7,sp,#0
 2842              	.LCFI220:
 2843              	 .cfi_def_cfa_register 7
 2844 0006 7860     	 str r0,[r7,#4]
 796:../Dave/Generated/PWM/pwm.c **** 
 797:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Stop:Invalid handle_ptr" , (handle_ptr != NULL))
 798:../Dave/Generated/PWM/pwm.c **** 
 799:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 800:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2845              	 .loc 3 800 0
 2846 0008 7B68     	 ldr r3,[r7,#4]
 2847 000a 93F82830 	 ldrb r3,[r3,#40]
 2848 000e 002B     	 cmp r3,#0
 2849 0010 02D1     	 bne .L125
 801:../Dave/Generated/PWM/pwm.c ****   {
 802:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU4_Stop(handle_ptr);
 2850              	 .loc 3 802 0
 2851 0012 7868     	 ldr r0,[r7,#4]
 2852 0014 FFF7FEFF 	 bl PWM_lCCU4_Stop
 2853              	.L125:
 803:../Dave/Generated/PWM/pwm.c ****   }
 804:../Dave/Generated/PWM/pwm.c **** #endif
 805:../Dave/Generated/PWM/pwm.c **** 
 806:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 807:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 2854              	 .loc 3 807 0
 2855 0018 7B68     	 ldr r3,[r7,#4]
 2856 001a 93F82830 	 ldrb r3,[r3,#40]
 2857 001e 012B     	 cmp r3,#1
 2858 0020 02D1     	 bne .L124
 808:../Dave/Generated/PWM/pwm.c ****   {
 809:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU8_Stop(handle_ptr);
 2859              	 .loc 3 809 0
 2860 0022 7868     	 ldr r0,[r7,#4]
 2861 0024 FFF7FEFF 	 bl PWM_lCCU8_Stop
 2862              	.L124:
 810:../Dave/Generated/PWM/pwm.c ****   }
 811:../Dave/Generated/PWM/pwm.c **** #endif
 812:../Dave/Generated/PWM/pwm.c **** }
 2863              	 .loc 3 812 0
 2864 0028 0837     	 adds r7,r7,#8
 2865              	.LCFI221:
 2866              	 .cfi_def_cfa_offset 8
 2867 002a BD46     	 mov sp,r7
 2868              	.LCFI222:
 2869              	 .cfi_def_cfa_register 13
 2870              	 
 2871 002c 80BD     	 pop {r7,pc}
 2872              	 .cfi_endproc
 2873              	.LFE310:
 2875 002e 00BF     	 .section .text.PWM_SetDutyCycle,"ax",%progbits
 2876              	 .align 2
 2877              	 .global PWM_SetDutyCycle
 2878              	 .thumb
 2879              	 .thumb_func
 2881              	PWM_SetDutyCycle:
 2882              	.LFB311:
 813:../Dave/Generated/PWM/pwm.c **** 
 814:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 815:../Dave/Generated/PWM/pwm.c **** /*This function is used to set the duty cycle (uint32_t) of the PWM waveform  */
 816:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 817:../Dave/Generated/PWM/pwm.c **** {
 2883              	 .loc 3 817 0
 2884              	 .cfi_startproc
 2885              	 
 2886              	 
 2887 0000 80B5     	 push {r7,lr}
 2888              	.LCFI223:
 2889              	 .cfi_def_cfa_offset 8
 2890              	 .cfi_offset 7,-8
 2891              	 .cfi_offset 14,-4
 2892 0002 84B0     	 sub sp,sp,#16
 2893              	.LCFI224:
 2894              	 .cfi_def_cfa_offset 24
 2895 0004 00AF     	 add r7,sp,#0
 2896              	.LCFI225:
 2897              	 .cfi_def_cfa_register 7
 2898 0006 7860     	 str r0,[r7,#4]
 2899 0008 3960     	 str r1,[r7]
 818:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 819:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 2900              	 .loc 3 819 0
 2901 000a 0123     	 movs r3,#1
 2902 000c FB73     	 strb r3,[r7,#15]
 820:../Dave/Generated/PWM/pwm.c **** 
 821:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 822:../Dave/Generated/PWM/pwm.c **** 
 823:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 824:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2903              	 .loc 3 824 0
 2904 000e 7B68     	 ldr r3,[r7,#4]
 2905 0010 93F82830 	 ldrb r3,[r3,#40]
 2906 0014 002B     	 cmp r3,#0
 2907 0016 05D1     	 bne .L128
 825:../Dave/Generated/PWM/pwm.c ****   {
 826:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetDutyCycle(handle_ptr, duty_cycle);
 2908              	 .loc 3 826 0
 2909 0018 7868     	 ldr r0,[r7,#4]
 2910 001a 3968     	 ldr r1,[r7]
 2911 001c FFF7FEFF 	 bl PWM_lCCU4_SetDutyCycle
 2912 0020 0346     	 mov r3,r0
 2913 0022 FB73     	 strb r3,[r7,#15]
 2914              	.L128:
 827:../Dave/Generated/PWM/pwm.c ****   }
 828:../Dave/Generated/PWM/pwm.c **** #endif
 829:../Dave/Generated/PWM/pwm.c **** 
 830:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 831:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 2915              	 .loc 3 831 0
 2916 0024 7B68     	 ldr r3,[r7,#4]
 2917 0026 93F82830 	 ldrb r3,[r3,#40]
 2918 002a 012B     	 cmp r3,#1
 2919 002c 05D1     	 bne .L129
 832:../Dave/Generated/PWM/pwm.c ****   {
 833:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetDutyCycle(handle_ptr, duty_cycle);
 2920              	 .loc 3 833 0
 2921 002e 7868     	 ldr r0,[r7,#4]
 2922 0030 3968     	 ldr r1,[r7]
 2923 0032 FFF7FEFF 	 bl PWM_lCCU8_SetDutyCycle
 2924 0036 0346     	 mov r3,r0
 2925 0038 FB73     	 strb r3,[r7,#15]
 2926              	.L129:
 834:../Dave/Generated/PWM/pwm.c ****   }
 835:../Dave/Generated/PWM/pwm.c **** #endif
 836:../Dave/Generated/PWM/pwm.c ****   return (status);
 2927              	 .loc 3 836 0
 2928 003a FB7B     	 ldrb r3,[r7,#15]
 837:../Dave/Generated/PWM/pwm.c **** }
 2929              	 .loc 3 837 0
 2930 003c 1846     	 mov r0,r3
 2931 003e 1037     	 adds r7,r7,#16
 2932              	.LCFI226:
 2933              	 .cfi_def_cfa_offset 8
 2934 0040 BD46     	 mov sp,r7
 2935              	.LCFI227:
 2936              	 .cfi_def_cfa_register 13
 2937              	 
 2938 0042 80BD     	 pop {r7,pc}
 2939              	 .cfi_endproc
 2940              	.LFE311:
 2942              	 .section .text.PWM_SetFreq,"ax",%progbits
 2943              	 .align 2
 2944              	 .global PWM_SetFreq
 2945              	 .thumb
 2946              	 .thumb_func
 2948              	PWM_SetFreq:
 2949              	.LFB312:
 838:../Dave/Generated/PWM/pwm.c **** 
 839:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 840:../Dave/Generated/PWM/pwm.c **** /*This function changes the PWM frequency. Input parameter is the frequency value in Hz */
 841:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 842:../Dave/Generated/PWM/pwm.c **** {
 2950              	 .loc 3 842 0
 2951              	 .cfi_startproc
 2952              	 
 2953              	 
 2954 0000 80B5     	 push {r7,lr}
 2955              	.LCFI228:
 2956              	 .cfi_def_cfa_offset 8
 2957              	 .cfi_offset 7,-8
 2958              	 .cfi_offset 14,-4
 2959 0002 84B0     	 sub sp,sp,#16
 2960              	.LCFI229:
 2961              	 .cfi_def_cfa_offset 24
 2962 0004 00AF     	 add r7,sp,#0
 2963              	.LCFI230:
 2964              	 .cfi_def_cfa_register 7
 2965 0006 7860     	 str r0,[r7,#4]
 2966 0008 3960     	 str r1,[r7]
 843:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 844:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 2967              	 .loc 3 844 0
 2968 000a 0123     	 movs r3,#1
 2969 000c FB73     	 strb r3,[r7,#15]
 845:../Dave/Generated/PWM/pwm.c **** 
 846:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetFreq:Invalid handle_ptr" , (handle_ptr != NULL))
 847:../Dave/Generated/PWM/pwm.c **** 
 848:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 849:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2970              	 .loc 3 849 0
 2971 000e 7B68     	 ldr r3,[r7,#4]
 2972 0010 93F82830 	 ldrb r3,[r3,#40]
 2973 0014 002B     	 cmp r3,#0
 2974 0016 05D1     	 bne .L132
 850:../Dave/Generated/PWM/pwm.c ****   {
 851:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetFreq(handle_ptr, pwm_freq_hz);
 2975              	 .loc 3 851 0
 2976 0018 7868     	 ldr r0,[r7,#4]
 2977 001a 3968     	 ldr r1,[r7]
 2978 001c FFF7FEFF 	 bl PWM_lCCU4_SetFreq
 2979 0020 0346     	 mov r3,r0
 2980 0022 FB73     	 strb r3,[r7,#15]
 2981              	.L132:
 852:../Dave/Generated/PWM/pwm.c ****   }
 853:../Dave/Generated/PWM/pwm.c **** #endif
 854:../Dave/Generated/PWM/pwm.c **** 
 855:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 856:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 2982              	 .loc 3 856 0
 2983 0024 7B68     	 ldr r3,[r7,#4]
 2984 0026 93F82830 	 ldrb r3,[r3,#40]
 2985 002a 012B     	 cmp r3,#1
 2986 002c 05D1     	 bne .L133
 857:../Dave/Generated/PWM/pwm.c ****   {
 858:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetFreq(handle_ptr, pwm_freq_hz);
 2987              	 .loc 3 858 0
 2988 002e 7868     	 ldr r0,[r7,#4]
 2989 0030 3968     	 ldr r1,[r7]
 2990 0032 FFF7FEFF 	 bl PWM_lCCU8_SetFreq
 2991 0036 0346     	 mov r3,r0
 2992 0038 FB73     	 strb r3,[r7,#15]
 2993              	.L133:
 859:../Dave/Generated/PWM/pwm.c ****   }
 860:../Dave/Generated/PWM/pwm.c **** #endif
 861:../Dave/Generated/PWM/pwm.c ****   return status;
 2994              	 .loc 3 861 0
 2995 003a FB7B     	 ldrb r3,[r7,#15]
 862:../Dave/Generated/PWM/pwm.c **** }
 2996              	 .loc 3 862 0
 2997 003c 1846     	 mov r0,r3
 2998 003e 1037     	 adds r7,r7,#16
 2999              	.LCFI231:
 3000              	 .cfi_def_cfa_offset 8
 3001 0040 BD46     	 mov sp,r7
 3002              	.LCFI232:
 3003              	 .cfi_def_cfa_register 13
 3004              	 
 3005 0042 80BD     	 pop {r7,pc}
 3006              	 .cfi_endproc
 3007              	.LFE312:
 3009              	 .section .text.PWM_SetFreqAndDutyCycle,"ax",%progbits
 3010              	 .align 2
 3011              	 .global PWM_SetFreqAndDutyCycle
 3012              	 .thumb
 3013              	 .thumb_func
 3015              	PWM_SetFreqAndDutyCycle:
 3016              	.LFB313:
 863:../Dave/Generated/PWM/pwm.c **** 
 864:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 865:../Dave/Generated/PWM/pwm.c **** /*This function sets frequency and the duty cycle */
 866:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t duty_c
 867:../Dave/Generated/PWM/pwm.c **** {
 3017              	 .loc 3 867 0
 3018              	 .cfi_startproc
 3019              	 
 3020              	 
 3021 0000 80B5     	 push {r7,lr}
 3022              	.LCFI233:
 3023              	 .cfi_def_cfa_offset 8
 3024              	 .cfi_offset 7,-8
 3025              	 .cfi_offset 14,-4
 3026 0002 86B0     	 sub sp,sp,#24
 3027              	.LCFI234:
 3028              	 .cfi_def_cfa_offset 32
 3029 0004 00AF     	 add r7,sp,#0
 3030              	.LCFI235:
 3031              	 .cfi_def_cfa_register 7
 3032 0006 F860     	 str r0,[r7,#12]
 3033 0008 B960     	 str r1,[r7,#8]
 3034 000a 7A60     	 str r2,[r7,#4]
 868:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 869:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 3035              	 .loc 3 869 0
 3036 000c 0123     	 movs r3,#1
 3037 000e FB75     	 strb r3,[r7,#23]
 870:../Dave/Generated/PWM/pwm.c **** 
 871:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetFreqAndDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 872:../Dave/Generated/PWM/pwm.c **** 
 873:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 874:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3038              	 .loc 3 874 0
 3039 0010 FB68     	 ldr r3,[r7,#12]
 3040 0012 93F82830 	 ldrb r3,[r3,#40]
 3041 0016 002B     	 cmp r3,#0
 3042 0018 06D1     	 bne .L136
 875:../Dave/Generated/PWM/pwm.c ****   {
 876:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetFreqAndDutyCycle(handle_ptr, pwm_freq_hz, duty_cycle);
 3043              	 .loc 3 876 0
 3044 001a F868     	 ldr r0,[r7,#12]
 3045 001c B968     	 ldr r1,[r7,#8]
 3046 001e 7A68     	 ldr r2,[r7,#4]
 3047 0020 FFF7FEFF 	 bl PWM_lCCU4_SetFreqAndDutyCycle
 3048 0024 0346     	 mov r3,r0
 3049 0026 FB75     	 strb r3,[r7,#23]
 3050              	.L136:
 877:../Dave/Generated/PWM/pwm.c ****   }
 878:../Dave/Generated/PWM/pwm.c **** #endif
 879:../Dave/Generated/PWM/pwm.c **** 
 880:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 881:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3051              	 .loc 3 881 0
 3052 0028 FB68     	 ldr r3,[r7,#12]
 3053 002a 93F82830 	 ldrb r3,[r3,#40]
 3054 002e 012B     	 cmp r3,#1
 3055 0030 06D1     	 bne .L137
 882:../Dave/Generated/PWM/pwm.c ****   {
 883:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetFreqAndDutyCycle(handle_ptr, pwm_freq_hz, duty_cycle);
 3056              	 .loc 3 883 0
 3057 0032 F868     	 ldr r0,[r7,#12]
 3058 0034 B968     	 ldr r1,[r7,#8]
 3059 0036 7A68     	 ldr r2,[r7,#4]
 3060 0038 FFF7FEFF 	 bl PWM_lCCU8_SetFreqAndDutyCycle
 3061 003c 0346     	 mov r3,r0
 3062 003e FB75     	 strb r3,[r7,#23]
 3063              	.L137:
 884:../Dave/Generated/PWM/pwm.c ****   }
 885:../Dave/Generated/PWM/pwm.c **** #endif
 886:../Dave/Generated/PWM/pwm.c ****   return status;
 3064              	 .loc 3 886 0
 3065 0040 FB7D     	 ldrb r3,[r7,#23]
 887:../Dave/Generated/PWM/pwm.c **** }
 3066              	 .loc 3 887 0
 3067 0042 1846     	 mov r0,r3
 3068 0044 1837     	 adds r7,r7,#24
 3069              	.LCFI236:
 3070              	 .cfi_def_cfa_offset 8
 3071 0046 BD46     	 mov sp,r7
 3072              	.LCFI237:
 3073              	 .cfi_def_cfa_register 13
 3074              	 
 3075 0048 80BD     	 pop {r7,pc}
 3076              	 .cfi_endproc
 3077              	.LFE313:
 3079 004a 00BF     	 .section .text.PWM_GetTimerStatus,"ax",%progbits
 3080              	 .align 2
 3081              	 .global PWM_GetTimerStatus
 3082              	 .thumb
 3083              	 .thumb_func
 3085              	PWM_GetTimerStatus:
 3086              	.LFB314:
 888:../Dave/Generated/PWM/pwm.c **** 
 889:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 890:../Dave/Generated/PWM/pwm.c **** /*This function changes the PWM timer status_timer */
 891:../Dave/Generated/PWM/pwm.c **** bool PWM_GetTimerStatus(PWM_t *const handle_ptr)
 892:../Dave/Generated/PWM/pwm.c **** {
 3087              	 .loc 3 892 0
 3088              	 .cfi_startproc
 3089              	 
 3090              	 
 3091 0000 80B5     	 push {r7,lr}
 3092              	.LCFI238:
 3093              	 .cfi_def_cfa_offset 8
 3094              	 .cfi_offset 7,-8
 3095              	 .cfi_offset 14,-4
 3096 0002 84B0     	 sub sp,sp,#16
 3097              	.LCFI239:
 3098              	 .cfi_def_cfa_offset 24
 3099 0004 00AF     	 add r7,sp,#0
 3100              	.LCFI240:
 3101              	 .cfi_def_cfa_register 7
 3102 0006 7860     	 str r0,[r7,#4]
 893:../Dave/Generated/PWM/pwm.c ****   bool status_timer;
 894:../Dave/Generated/PWM/pwm.c ****   status_timer = (bool)false;
 3103              	 .loc 3 894 0
 3104 0008 0023     	 movs r3,#0
 3105 000a FB73     	 strb r3,[r7,#15]
 895:../Dave/Generated/PWM/pwm.c **** 
 896:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_GetTimerStatus:Invalid handle_ptr" , (handle_ptr != NULL))
 897:../Dave/Generated/PWM/pwm.c **** 
 898:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 899:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3106              	 .loc 3 899 0
 3107 000c 7B68     	 ldr r3,[r7,#4]
 3108 000e 93F82830 	 ldrb r3,[r3,#40]
 3109 0012 002B     	 cmp r3,#0
 3110 0014 06D1     	 bne .L140
 900:../Dave/Generated/PWM/pwm.c ****   {
 901:../Dave/Generated/PWM/pwm.c ****     status_timer = XMC_CCU4_SLICE_IsTimerRunning(handle_ptr->ccu4_slice_ptr);
 3111              	 .loc 3 901 0
 3112 0016 7B68     	 ldr r3,[r7,#4]
 3113 0018 9B68     	 ldr r3,[r3,#8]
 3114 001a 1846     	 mov r0,r3
 3115 001c FFF7FEFF 	 bl XMC_CCU4_SLICE_IsTimerRunning
 3116 0020 0346     	 mov r3,r0
 3117 0022 FB73     	 strb r3,[r7,#15]
 3118              	.L140:
 902:../Dave/Generated/PWM/pwm.c ****   }
 903:../Dave/Generated/PWM/pwm.c **** #endif
 904:../Dave/Generated/PWM/pwm.c **** 
 905:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 906:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3119              	 .loc 3 906 0
 3120 0024 7B68     	 ldr r3,[r7,#4]
 3121 0026 93F82830 	 ldrb r3,[r3,#40]
 3122 002a 012B     	 cmp r3,#1
 3123 002c 06D1     	 bne .L141
 907:../Dave/Generated/PWM/pwm.c ****   {
 908:../Dave/Generated/PWM/pwm.c ****     status_timer = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 3124              	 .loc 3 908 0
 3125 002e 7B68     	 ldr r3,[r7,#4]
 3126 0030 9B68     	 ldr r3,[r3,#8]
 3127 0032 1846     	 mov r0,r3
 3128 0034 FFF7FEFF 	 bl XMC_CCU8_SLICE_IsTimerRunning
 3129 0038 0346     	 mov r3,r0
 3130 003a FB73     	 strb r3,[r7,#15]
 3131              	.L141:
 909:../Dave/Generated/PWM/pwm.c ****   }
 910:../Dave/Generated/PWM/pwm.c **** #endif
 911:../Dave/Generated/PWM/pwm.c **** 
 912:../Dave/Generated/PWM/pwm.c ****   return (status_timer);
 3132              	 .loc 3 912 0
 3133 003c FB7B     	 ldrb r3,[r7,#15]
 913:../Dave/Generated/PWM/pwm.c **** }
 3134              	 .loc 3 913 0
 3135 003e 1846     	 mov r0,r3
 3136 0040 1037     	 adds r7,r7,#16
 3137              	.LCFI241:
 3138              	 .cfi_def_cfa_offset 8
 3139 0042 BD46     	 mov sp,r7
 3140              	.LCFI242:
 3141              	 .cfi_def_cfa_register 13
 3142              	 
 3143 0044 80BD     	 pop {r7,pc}
 3144              	 .cfi_endproc
 3145              	.LFE314:
 3147              	 .section .text.PWM_GetInterruptStatus,"ax",%progbits
 3148              	 .align 2
 3149              	 .global PWM_GetInterruptStatus
 3150              	 .thumb
 3151              	 .thumb_func
 3153              	PWM_GetInterruptStatus:
 3154              	.LFB315:
 914:../Dave/Generated/PWM/pwm.c **** 
 915:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 916:../Dave/Generated/PWM/pwm.c **** /*This function returns the interrupt status_timer */
 917:../Dave/Generated/PWM/pwm.c **** bool PWM_GetInterruptStatus(PWM_t *const handle_ptr, PWM_INTERRUPT_t pwm_interrupt)
 918:../Dave/Generated/PWM/pwm.c **** {
 3155              	 .loc 3 918 0
 3156              	 .cfi_startproc
 3157              	 
 3158              	 
 3159 0000 80B5     	 push {r7,lr}
 3160              	.LCFI243:
 3161              	 .cfi_def_cfa_offset 8
 3162              	 .cfi_offset 7,-8
 3163              	 .cfi_offset 14,-4
 3164 0002 84B0     	 sub sp,sp,#16
 3165              	.LCFI244:
 3166              	 .cfi_def_cfa_offset 24
 3167 0004 00AF     	 add r7,sp,#0
 3168              	.LCFI245:
 3169              	 .cfi_def_cfa_register 7
 3170 0006 7860     	 str r0,[r7,#4]
 3171 0008 0B46     	 mov r3,r1
 3172 000a FB70     	 strb r3,[r7,#3]
 919:../Dave/Generated/PWM/pwm.c ****   bool status;
 920:../Dave/Generated/PWM/pwm.c ****   status = (bool) false;
 3173              	 .loc 3 920 0
 3174 000c 0023     	 movs r3,#0
 3175 000e FB73     	 strb r3,[r7,#15]
 921:../Dave/Generated/PWM/pwm.c **** 
 922:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_GetInterruptStatus:Invalid handle_ptr" , (handle_ptr != NULL))
 923:../Dave/Generated/PWM/pwm.c **** 
 924:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 925:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3176              	 .loc 3 925 0
 3177 0010 7B68     	 ldr r3,[r7,#4]
 3178 0012 93F82830 	 ldrb r3,[r3,#40]
 3179 0016 002B     	 cmp r3,#0
 3180 0018 08D1     	 bne .L144
 926:../Dave/Generated/PWM/pwm.c ****   {
 927:../Dave/Generated/PWM/pwm.c ****     status = XMC_CCU4_SLICE_GetEvent(handle_ptr->ccu4_slice_ptr, (XMC_CCU4_SLICE_IRQ_ID_t)pwm_inter
 3181              	 .loc 3 927 0
 3182 001a 7B68     	 ldr r3,[r7,#4]
 3183 001c 9A68     	 ldr r2,[r3,#8]
 3184 001e FB78     	 ldrb r3,[r7,#3]
 3185 0020 1046     	 mov r0,r2
 3186 0022 1946     	 mov r1,r3
 3187 0024 FFF7FEFF 	 bl XMC_CCU4_SLICE_GetEvent
 3188 0028 0346     	 mov r3,r0
 3189 002a FB73     	 strb r3,[r7,#15]
 3190              	.L144:
 928:../Dave/Generated/PWM/pwm.c ****   }
 929:../Dave/Generated/PWM/pwm.c **** #endif
 930:../Dave/Generated/PWM/pwm.c **** 
 931:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 932:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3191              	 .loc 3 932 0
 3192 002c 7B68     	 ldr r3,[r7,#4]
 3193 002e 93F82830 	 ldrb r3,[r3,#40]
 3194 0032 012B     	 cmp r3,#1
 3195 0034 08D1     	 bne .L145
 933:../Dave/Generated/PWM/pwm.c ****   {
 934:../Dave/Generated/PWM/pwm.c ****     status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t)pwm_inter
 3196              	 .loc 3 934 0
 3197 0036 7B68     	 ldr r3,[r7,#4]
 3198 0038 9A68     	 ldr r2,[r3,#8]
 3199 003a FB78     	 ldrb r3,[r7,#3]
 3200 003c 1046     	 mov r0,r2
 3201 003e 1946     	 mov r1,r3
 3202 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_GetEvent
 3203 0044 0346     	 mov r3,r0
 3204 0046 FB73     	 strb r3,[r7,#15]
 3205              	.L145:
 935:../Dave/Generated/PWM/pwm.c ****   }
 936:../Dave/Generated/PWM/pwm.c **** #endif
 937:../Dave/Generated/PWM/pwm.c **** 
 938:../Dave/Generated/PWM/pwm.c ****   return status;
 3206              	 .loc 3 938 0
 3207 0048 FB7B     	 ldrb r3,[r7,#15]
 939:../Dave/Generated/PWM/pwm.c **** }
 3208              	 .loc 3 939 0
 3209 004a 1846     	 mov r0,r3
 3210 004c 1037     	 adds r7,r7,#16
 3211              	.LCFI246:
 3212              	 .cfi_def_cfa_offset 8
 3213 004e BD46     	 mov sp,r7
 3214              	.LCFI247:
 3215              	 .cfi_def_cfa_register 13
 3216              	 
 3217 0050 80BD     	 pop {r7,pc}
 3218              	 .cfi_endproc
 3219              	.LFE315:
 3221 0052 00BF     	 .section .text.PWM_ClearEvent,"ax",%progbits
 3222              	 .align 2
 3223              	 .global PWM_ClearEvent
 3224              	 .thumb
 3225              	 .thumb_func
 3227              	PWM_ClearEvent:
 3228              	.LFB316:
 940:../Dave/Generated/PWM/pwm.c **** 
 941:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 942:../Dave/Generated/PWM/pwm.c **** /*This function Acknowledges the corresponding interrupt */
 943:../Dave/Generated/PWM/pwm.c **** void PWM_ClearEvent(PWM_t *const handle_ptr, PWM_INTERRUPT_t pwm_interrupt)
 944:../Dave/Generated/PWM/pwm.c **** {
 3229              	 .loc 3 944 0
 3230              	 .cfi_startproc
 3231              	 
 3232              	 
 3233 0000 80B5     	 push {r7,lr}
 3234              	.LCFI248:
 3235              	 .cfi_def_cfa_offset 8
 3236              	 .cfi_offset 7,-8
 3237              	 .cfi_offset 14,-4
 3238 0002 82B0     	 sub sp,sp,#8
 3239              	.LCFI249:
 3240              	 .cfi_def_cfa_offset 16
 3241 0004 00AF     	 add r7,sp,#0
 3242              	.LCFI250:
 3243              	 .cfi_def_cfa_register 7
 3244 0006 7860     	 str r0,[r7,#4]
 3245 0008 0B46     	 mov r3,r1
 3246 000a FB70     	 strb r3,[r7,#3]
 945:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_ClearEvent:Invalid handle_ptr" , (handle_ptr != NULL))
 946:../Dave/Generated/PWM/pwm.c **** 
 947:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 948:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3247              	 .loc 3 948 0
 3248 000c 7B68     	 ldr r3,[r7,#4]
 3249 000e 93F82830 	 ldrb r3,[r3,#40]
 3250 0012 002B     	 cmp r3,#0
 3251 0014 06D1     	 bne .L148
 949:../Dave/Generated/PWM/pwm.c ****   {
 950:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_ClearEvent(handle_ptr->ccu4_slice_ptr, (XMC_CCU4_SLICE_IRQ_ID_t) pwm_interrupt);
 3252              	 .loc 3 950 0
 3253 0016 7B68     	 ldr r3,[r7,#4]
 3254 0018 9A68     	 ldr r2,[r3,#8]
 3255 001a FB78     	 ldrb r3,[r7,#3]
 3256 001c 1046     	 mov r0,r2
 3257 001e 1946     	 mov r1,r3
 3258 0020 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearEvent
 3259              	.L148:
 951:../Dave/Generated/PWM/pwm.c ****   }
 952:../Dave/Generated/PWM/pwm.c **** #endif
 953:../Dave/Generated/PWM/pwm.c **** 
 954:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 955:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3260              	 .loc 3 955 0
 3261 0024 7B68     	 ldr r3,[r7,#4]
 3262 0026 93F82830 	 ldrb r3,[r3,#40]
 3263 002a 012B     	 cmp r3,#1
 3264 002c 06D1     	 bne .L147
 956:../Dave/Generated/PWM/pwm.c ****   {
 957:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t) pwm_interrupt);
 3265              	 .loc 3 957 0
 3266 002e 7B68     	 ldr r3,[r7,#4]
 3267 0030 9A68     	 ldr r2,[r3,#8]
 3268 0032 FB78     	 ldrb r3,[r7,#3]
 3269 0034 1046     	 mov r0,r2
 3270 0036 1946     	 mov r1,r3
 3271 0038 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 3272              	.L147:
 958:../Dave/Generated/PWM/pwm.c ****   }
 959:../Dave/Generated/PWM/pwm.c **** #endif
 960:../Dave/Generated/PWM/pwm.c **** }
 3273              	 .loc 3 960 0
 3274 003c 0837     	 adds r7,r7,#8
 3275              	.LCFI251:
 3276              	 .cfi_def_cfa_offset 8
 3277 003e BD46     	 mov sp,r7
 3278              	.LCFI252:
 3279              	 .cfi_def_cfa_register 13
 3280              	 
 3281 0040 80BD     	 pop {r7,pc}
 3282              	 .cfi_endproc
 3283              	.LFE316:
 3285 0042 00BF     	 .section .text.PWM_SetPassiveLevel,"ax",%progbits
 3286              	 .align 2
 3287              	 .global PWM_SetPassiveLevel
 3288              	 .thumb
 3289              	 .thumb_func
 3291              	PWM_SetPassiveLevel:
 3292              	.LFB317:
 961:../Dave/Generated/PWM/pwm.c **** 
 962:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 963:../Dave/Generated/PWM/pwm.c **** /*This function sets the passive level of the PWM*/
 964:../Dave/Generated/PWM/pwm.c **** void PWM_SetPassiveLevel(PWM_t *const handle_ptr, PWM_OUTPUT_PASSIVE_LEVEL_t pwm_output_passive_lev
 965:../Dave/Generated/PWM/pwm.c **** {
 3293              	 .loc 3 965 0
 3294              	 .cfi_startproc
 3295              	 
 3296              	 
 3297 0000 80B5     	 push {r7,lr}
 3298              	.LCFI253:
 3299              	 .cfi_def_cfa_offset 8
 3300              	 .cfi_offset 7,-8
 3301              	 .cfi_offset 14,-4
 3302 0002 82B0     	 sub sp,sp,#8
 3303              	.LCFI254:
 3304              	 .cfi_def_cfa_offset 16
 3305 0004 00AF     	 add r7,sp,#0
 3306              	.LCFI255:
 3307              	 .cfi_def_cfa_register 7
 3308 0006 7860     	 str r0,[r7,#4]
 3309 0008 0B46     	 mov r3,r1
 3310 000a FB70     	 strb r3,[r7,#3]
 966:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPassiveLevel:Invalid handle_ptr" , (handle_ptr != NULL))
 967:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPassiveLevel:Invalid pwm_output_passive_level " ,
 968:../Dave/Generated/PWM/pwm.c ****               (pwm_output_passive_level < PWM_OUTPUT_PASSIVE_LEVEL_MAX));
 969:../Dave/Generated/PWM/pwm.c **** 
 970:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 971:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3311              	 .loc 3 971 0
 3312 000c 7B68     	 ldr r3,[r7,#4]
 3313 000e 93F82830 	 ldrb r3,[r3,#40]
 3314 0012 002B     	 cmp r3,#0
 3315 0014 0ED1     	 bne .L151
 972:../Dave/Generated/PWM/pwm.c ****   {
 973:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetPassiveLevel(handle_ptr->ccu4_slice_ptr,
 3316              	 .loc 3 973 0
 3317 0016 7B68     	 ldr r3,[r7,#4]
 3318 0018 9A68     	 ldr r2,[r3,#8]
 3319 001a FB78     	 ldrb r3,[r7,#3]
 3320 001c 1046     	 mov r0,r2
 3321 001e 1946     	 mov r1,r3
 3322 0020 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPassiveLevel
 974:../Dave/Generated/PWM/pwm.c ****   		                         (XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t)pwm_output_passive_level);
 975:../Dave/Generated/PWM/pwm.c **** 
 976:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 3323              	 .loc 3 976 0
 3324 0024 7B68     	 ldr r3,[r7,#4]
 3325 0026 5A68     	 ldr r2,[r3,#4]
 3326 0028 7B68     	 ldr r3,[r7,#4]
 3327 002a 5B6A     	 ldr r3,[r3,#36]
 3328 002c 1046     	 mov r0,r2
 3329 002e 1946     	 mov r1,r3
 3330 0030 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 3331              	.L151:
 977:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_SetPassiveLevel:CCU4 slice, passive level changed")
 978:../Dave/Generated/PWM/pwm.c ****   }
 979:../Dave/Generated/PWM/pwm.c **** #endif
 980:../Dave/Generated/PWM/pwm.c **** 
 981:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 982:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3332              	 .loc 3 982 0
 3333 0034 7B68     	 ldr r3,[r7,#4]
 3334 0036 93F82830 	 ldrb r3,[r3,#40]
 3335 003a 012B     	 cmp r3,#1
 3336 003c 0FD1     	 bne .L150
 983:../Dave/Generated/PWM/pwm.c ****   {
 984:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetPassiveLevel(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_OUTPUT_0,
 3337              	 .loc 3 984 0
 3338 003e 7B68     	 ldr r3,[r7,#4]
 3339 0040 9A68     	 ldr r2,[r3,#8]
 3340 0042 FB78     	 ldrb r3,[r7,#3]
 3341 0044 1046     	 mov r0,r2
 3342 0046 0121     	 movs r1,#1
 3343 0048 1A46     	 mov r2,r3
 3344 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetPassiveLevel
 985:../Dave/Generated/PWM/pwm.c ****     		                        (XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t)pwm_output_passive_level);
 986:../Dave/Generated/PWM/pwm.c **** 
 987:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 3345              	 .loc 3 987 0
 3346 004e 7B68     	 ldr r3,[r7,#4]
 3347 0050 5A68     	 ldr r2,[r3,#4]
 3348 0052 7B68     	 ldr r3,[r7,#4]
 3349 0054 5B6A     	 ldr r3,[r3,#36]
 3350 0056 1046     	 mov r0,r2
 3351 0058 1946     	 mov r1,r3
 3352 005a FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 3353              	.L150:
 988:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_SetPassiveLevel:CCU8 slice, passive level changed")
 989:../Dave/Generated/PWM/pwm.c ****   }
 990:../Dave/Generated/PWM/pwm.c **** #endif
 991:../Dave/Generated/PWM/pwm.c **** }
 3354              	 .loc 3 991 0
 3355 005e 0837     	 adds r7,r7,#8
 3356              	.LCFI256:
 3357              	 .cfi_def_cfa_offset 8
 3358 0060 BD46     	 mov sp,r7
 3359              	.LCFI257:
 3360              	 .cfi_def_cfa_register 13
 3361              	 
 3362 0062 80BD     	 pop {r7,pc}
 3363              	 .cfi_endproc
 3364              	.LFE317:
 3366              	 .section .text.PWM_SetPeriodMatchValue,"ax",%progbits
 3367              	 .align 2
 3368              	 .global PWM_SetPeriodMatchValue
 3369              	 .thumb
 3370              	 .thumb_func
 3372              	PWM_SetPeriodMatchValue:
 3373              	.LFB318:
 992:../Dave/Generated/PWM/pwm.c **** 
 993:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 994:../Dave/Generated/PWM/pwm.c **** /*Configures the period register */
 995:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetPeriodMatchValue(PWM_t *const handle_ptr, uint32_t period_match_value)
 996:../Dave/Generated/PWM/pwm.c **** {
 3374              	 .loc 3 996 0
 3375              	 .cfi_startproc
 3376              	 
 3377              	 
 3378 0000 80B5     	 push {r7,lr}
 3379              	.LCFI258:
 3380              	 .cfi_def_cfa_offset 8
 3381              	 .cfi_offset 7,-8
 3382              	 .cfi_offset 14,-4
 3383 0002 84B0     	 sub sp,sp,#16
 3384              	.LCFI259:
 3385              	 .cfi_def_cfa_offset 24
 3386 0004 00AF     	 add r7,sp,#0
 3387              	.LCFI260:
 3388              	 .cfi_def_cfa_register 7
 3389 0006 7860     	 str r0,[r7,#4]
 3390 0008 3960     	 str r1,[r7]
 997:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 998:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 999:../Dave/Generated/PWM/pwm.c **** 
1000:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPeriodMatchValue:Invalid handle_ptr" , (handle_ptr != NULL))
1001:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPeriodMatchValue:Invalid period_match_value" , (period_match_value <= PWM_MAX_
1002:../Dave/Generated/PWM/pwm.c **** 
1003:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 3391              	 .loc 3 1003 0
 3392 000a 7B68     	 ldr r3,[r7,#4]
 3393 000c 93F82930 	 ldrb r3,[r3,#41]
 3394 0010 FB73     	 strb r3,[r7,#15]
1004:../Dave/Generated/PWM/pwm.c **** 
1005:../Dave/Generated/PWM/pwm.c ****   if ( (status != PWM_STATUS_UNINITIALIZED) && (PWM_MAX_PERIOD_VALUE >= period_match_value))
 3395              	 .loc 3 1005 0
 3396 0012 FB7B     	 ldrb r3,[r7,#15]
 3397 0014 022B     	 cmp r3,#2
 3398 0016 54D0     	 beq .L154
 3399              	 .loc 3 1005 0 is_stmt 0 discriminator 1
 3400 0018 3B68     	 ldr r3,[r7]
 3401 001a B3F5803F 	 cmp r3,#65536
 3402 001e 50D2     	 bcs .L154
1006:../Dave/Generated/PWM/pwm.c ****   {
1007:../Dave/Generated/PWM/pwm.c ****     compare = (period_match_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 3403              	 .loc 3 1007 0 is_stmt 1
 3404 0020 7B68     	 ldr r3,[r7,#4]
 3405 0022 1B6A     	 ldr r3,[r3,#32]
 3406 0024 C3F51C53 	 rsb r3,r3,#9984
 3407 0028 1033     	 adds r3,r3,#16
 3408 002a 3A68     	 ldr r2,[r7]
 3409 002c 02FB03F3 	 mul r3,r2,r3
 3410 0030 274A     	 ldr r2,.L159
 3411 0032 A2FB0323 	 umull r2,r3,r2,r3
 3412 0036 5B0B     	 lsrs r3,r3,#13
 3413 0038 BB60     	 str r3,[r7,#8]
1008:../Dave/Generated/PWM/pwm.c **** 		                           / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
1009:../Dave/Generated/PWM/pwm.c **** 
1010:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
1011:../Dave/Generated/PWM/pwm.c ****     if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 3414              	 .loc 3 1011 0
 3415 003a 7B68     	 ldr r3,[r7,#4]
 3416 003c 93F82830 	 ldrb r3,[r3,#40]
 3417 0040 002B     	 cmp r3,#0
 3418 0042 17D1     	 bne .L155
1012:../Dave/Generated/PWM/pwm.c ****     {
1013:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)period_match_value);
 3419              	 .loc 3 1013 0
 3420 0044 7B68     	 ldr r3,[r7,#4]
 3421 0046 9A68     	 ldr r2,[r3,#8]
 3422 0048 3B68     	 ldr r3,[r7]
 3423 004a 9BB2     	 uxth r3,r3
 3424 004c 1046     	 mov r0,r2
 3425 004e 1946     	 mov r1,r3
 3426 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
1014:../Dave/Generated/PWM/pwm.c **** 
1015:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare );
 3427              	 .loc 3 1015 0
 3428 0054 7B68     	 ldr r3,[r7,#4]
 3429 0056 9A68     	 ldr r2,[r3,#8]
 3430 0058 BB68     	 ldr r3,[r7,#8]
 3431 005a 9BB2     	 uxth r3,r3
 3432 005c 1046     	 mov r0,r2
 3433 005e 1946     	 mov r1,r3
 3434 0060 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
1016:../Dave/Generated/PWM/pwm.c **** 
1017:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 3435              	 .loc 3 1017 0
 3436 0064 7B68     	 ldr r3,[r7,#4]
 3437 0066 5A68     	 ldr r2,[r3,#4]
 3438 0068 7B68     	 ldr r3,[r7,#4]
 3439 006a 5B6A     	 ldr r3,[r3,#36]
 3440 006c 1046     	 mov r0,r2
 3441 006e 1946     	 mov r1,r3
 3442 0070 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 3443              	.L155:
1018:../Dave/Generated/PWM/pwm.c ****     }
1019:../Dave/Generated/PWM/pwm.c **** #endif
1020:../Dave/Generated/PWM/pwm.c **** 
1021:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
1022:../Dave/Generated/PWM/pwm.c ****     if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 3444              	 .loc 3 1022 0
 3445 0074 7B68     	 ldr r3,[r7,#4]
 3446 0076 93F82830 	 ldrb r3,[r3,#40]
 3447 007a 012B     	 cmp r3,#1
 3448 007c 18D1     	 bne .L156
1023:../Dave/Generated/PWM/pwm.c ****     {
1024:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)period_match_value);
 3449              	 .loc 3 1024 0
 3450 007e 7B68     	 ldr r3,[r7,#4]
 3451 0080 9A68     	 ldr r2,[r3,#8]
 3452 0082 3B68     	 ldr r3,[r7]
 3453 0084 9BB2     	 uxth r3,r3
 3454 0086 1046     	 mov r0,r2
 3455 0088 1946     	 mov r1,r3
 3456 008a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1025:../Dave/Generated/PWM/pwm.c **** 
1026:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 3457              	 .loc 3 1026 0
 3458 008e 7B68     	 ldr r3,[r7,#4]
 3459 0090 9A68     	 ldr r2,[r3,#8]
 3460 0092 BB68     	 ldr r3,[r7,#8]
 3461 0094 9BB2     	 uxth r3,r3
 3462 0096 1046     	 mov r0,r2
 3463 0098 0021     	 movs r1,#0
 3464 009a 1A46     	 mov r2,r3
 3465 009c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1027:../Dave/Generated/PWM/pwm.c ****           		                              (uint16_t)compare);
1028:../Dave/Generated/PWM/pwm.c **** 
1029:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 3466              	 .loc 3 1029 0
 3467 00a0 7B68     	 ldr r3,[r7,#4]
 3468 00a2 5A68     	 ldr r2,[r3,#4]
 3469 00a4 7B68     	 ldr r3,[r7,#4]
 3470 00a6 5B6A     	 ldr r3,[r3,#36]
 3471 00a8 1046     	 mov r0,r2
 3472 00aa 1946     	 mov r1,r3
 3473 00ac FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 3474              	.L156:
1030:../Dave/Generated/PWM/pwm.c ****     }
1031:../Dave/Generated/PWM/pwm.c **** #endif
1032:../Dave/Generated/PWM/pwm.c ****     handle_ptr->period_value =  period_match_value;
 3475              	 .loc 3 1032 0
 3476 00b0 7B68     	 ldr r3,[r7,#4]
 3477 00b2 3A68     	 ldr r2,[r7]
 3478 00b4 DA61     	 str r2,[r3,#28]
1033:../Dave/Generated/PWM/pwm.c ****     handle_ptr->compare_value =  compare;
 3479              	 .loc 3 1033 0
 3480 00b6 7B68     	 ldr r3,[r7,#4]
 3481 00b8 BA68     	 ldr r2,[r7,#8]
 3482 00ba 9A61     	 str r2,[r3,#24]
1034:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 3483              	 .loc 3 1034 0
 3484 00bc 0023     	 movs r3,#0
 3485 00be FB73     	 strb r3,[r7,#15]
 3486 00c0 01E0     	 b .L157
 3487              	.L154:
1035:../Dave/Generated/PWM/pwm.c ****   }
1036:../Dave/Generated/PWM/pwm.c ****   else
1037:../Dave/Generated/PWM/pwm.c ****   {
1038:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 3488              	 .loc 3 1038 0
 3489 00c2 0123     	 movs r3,#1
 3490 00c4 FB73     	 strb r3,[r7,#15]
 3491              	.L157:
1039:../Dave/Generated/PWM/pwm.c ****   }
1040:../Dave/Generated/PWM/pwm.c **** 
1041:../Dave/Generated/PWM/pwm.c ****   return (status);
 3492              	 .loc 3 1041 0
 3493 00c6 FB7B     	 ldrb r3,[r7,#15]
1042:../Dave/Generated/PWM/pwm.c **** }
 3494              	 .loc 3 1042 0
 3495 00c8 1846     	 mov r0,r3
 3496 00ca 1037     	 adds r7,r7,#16
 3497              	.LCFI261:
 3498              	 .cfi_def_cfa_offset 8
 3499 00cc BD46     	 mov sp,r7
 3500              	.LCFI262:
 3501              	 .cfi_def_cfa_register 13
 3502              	 
 3503 00ce 80BD     	 pop {r7,pc}
 3504              	.L160:
 3505              	 .align 2
 3506              	.L159:
 3507 00d0 5917B7D1 	 .word -776530087
 3508              	 .cfi_endproc
 3509              	.LFE318:
 3511              	 .text
 3512              	.Letext0:
 3513              	 .file 4 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3514              	 .file 5 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3515              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 3516              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_gpio.h"
 3517              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc4_gpio.h"
 3518              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc4_scu.h"
 3519              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DAVE_Common.h"
 3520              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 3521              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 3522              	 .file 13 "../Dave/Generated/PWM/pwm.h"
 3523              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Include/cmsis_gcc.h"
 3524              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Include/core_cm4.h"
 3525              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm.c
    {standard input}:20     .text.XMC_CCU4_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU4_EnableClock:00000000 XMC_CCU4_EnableClock
    {standard input}:68     .text.XMC_CCU4_DisableClock:00000000 $t
    {standard input}:72     .text.XMC_CCU4_DisableClock:00000000 XMC_CCU4_DisableClock
    {standard input}:115    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 $t
    {standard input}:119    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 XMC_CCU4_SLICE_IsTimerRunning
    {standard input}:164    .text.XMC_CCU4_SLICE_StartTimer:00000000 $t
    {standard input}:168    .text.XMC_CCU4_SLICE_StartTimer:00000000 XMC_CCU4_SLICE_StartTimer
    {standard input}:207    .text.XMC_CCU4_SLICE_StopTimer:00000000 $t
    {standard input}:211    .text.XMC_CCU4_SLICE_StopTimer:00000000 XMC_CCU4_SLICE_StopTimer
    {standard input}:250    .text.XMC_CCU4_SLICE_ClearTimer:00000000 $t
    {standard input}:254    .text.XMC_CCU4_SLICE_ClearTimer:00000000 XMC_CCU4_SLICE_ClearTimer
    {standard input}:293    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:297    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:338    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:342    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 XMC_CCU4_SLICE_SetTimerCompareMatch
    {standard input}:383    .text.XMC_CCU4_EnableShadowTransfer:00000000 $t
    {standard input}:387    .text.XMC_CCU4_EnableShadowTransfer:00000000 XMC_CCU4_EnableShadowTransfer
    {standard input}:427    .text.XMC_CCU4_SLICE_EnableEvent:00000000 $t
    {standard input}:431    .text.XMC_CCU4_SLICE_EnableEvent:00000000 XMC_CCU4_SLICE_EnableEvent
    {standard input}:477    .text.XMC_CCU4_SLICE_ClearEvent:00000000 $t
    {standard input}:481    .text.XMC_CCU4_SLICE_ClearEvent:00000000 XMC_CCU4_SLICE_ClearEvent
    {standard input}:524    .text.XMC_CCU4_SLICE_GetEvent:00000000 $t
    {standard input}:528    .text.XMC_CCU4_SLICE_GetEvent:00000000 XMC_CCU4_SLICE_GetEvent
    {standard input}:577    .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:581    .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:625    .text.XMC_CCU8_DisableClock:00000000 $t
    {standard input}:629    .text.XMC_CCU8_DisableClock:00000000 XMC_CCU8_DisableClock
    {standard input}:672    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 $t
    {standard input}:676    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 XMC_CCU8_SLICE_IsTimerRunning
    {standard input}:721    .text.XMC_CCU8_SLICE_StartTimer:00000000 $t
    {standard input}:725    .text.XMC_CCU8_SLICE_StartTimer:00000000 XMC_CCU8_SLICE_StartTimer
    {standard input}:764    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:768    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:807    .text.XMC_CCU8_SLICE_ClearTimer:00000000 $t
    {standard input}:811    .text.XMC_CCU8_SLICE_ClearTimer:00000000 XMC_CCU8_SLICE_ClearTimer
    {standard input}:850    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:854    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:894    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:898    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:944    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:948    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:991    .text.XMC_CCU8_SLICE_GetEvent:00000000 $t
    {standard input}:995    .text.XMC_CCU8_SLICE_GetEvent:00000000 XMC_CCU8_SLICE_GetEvent
    {standard input}:1044   .text.PWM_lCCU4_Init:00000000 $t
    {standard input}:1049   .text.PWM_lCCU4_Init:00000000 PWM_lCCU4_Init
    {standard input}:1183   .text.PWM_lCCU4_ConfigInterrupts:00000000 PWM_lCCU4_ConfigInterrupts
    {standard input}:2773   .text.PWM_Start:00000000 PWM_Start
    {standard input}:1178   .text.PWM_lCCU4_ConfigInterrupts:00000000 $t
    {standard input}:1256   .text.PWM_lCCU4_Start:00000000 $t
    {standard input}:1261   .text.PWM_lCCU4_Start:00000000 PWM_lCCU4_Start
    {standard input}:1321   .text.PWM_lCCU4_Stop:00000000 $t
    {standard input}:1326   .text.PWM_lCCU4_Stop:00000000 PWM_lCCU4_Stop
    {standard input}:1385   .text.PWM_lCCU4_SetDutyCycle:00000000 $t
    {standard input}:1390   .text.PWM_lCCU4_SetDutyCycle:00000000 PWM_lCCU4_SetDutyCycle
    {standard input}:1480   .text.PWM_lCCU4_SetDutyCycle:0000007c $d
    {standard input}:1485   .text.PWM_lCCU4_SetFreq:00000000 $t
    {standard input}:1490   .text.PWM_lCCU4_SetFreq:00000000 PWM_lCCU4_SetFreq
    {standard input}:1653   .text.PWM_lCCU4_SetFreq:000000e8 $d
    {standard input}:1658   .text.PWM_lCCU4_SetFreqAndDutyCycle:00000000 $t
    {standard input}:1663   .text.PWM_lCCU4_SetFreqAndDutyCycle:00000000 PWM_lCCU4_SetFreqAndDutyCycle
    {standard input}:1835   .text.PWM_lCCU4_SetFreqAndDutyCycle:000000f8 $d
    {standard input}:1840   .text.PWM_lCCU8_Init:00000000 $t
    {standard input}:1845   .text.PWM_lCCU8_Init:00000000 PWM_lCCU8_Init
    {standard input}:1979   .text.PWM_lCCU8_ConfigInterrupts:00000000 PWM_lCCU8_ConfigInterrupts
    {standard input}:1974   .text.PWM_lCCU8_ConfigInterrupts:00000000 $t
    {standard input}:2052   .text.PWM_lCCU8_Start:00000000 $t
    {standard input}:2057   .text.PWM_lCCU8_Start:00000000 PWM_lCCU8_Start
    {standard input}:2117   .text.PWM_lCCU8_Stop:00000000 $t
    {standard input}:2122   .text.PWM_lCCU8_Stop:00000000 PWM_lCCU8_Stop
    {standard input}:2181   .text.PWM_lCCU8_SetDutyCycle:00000000 $t
    {standard input}:2186   .text.PWM_lCCU8_SetDutyCycle:00000000 PWM_lCCU8_SetDutyCycle
    {standard input}:2277   .text.PWM_lCCU8_SetDutyCycle:00000080 $d
    {standard input}:2282   .text.PWM_lCCU8_SetFreq:00000000 $t
    {standard input}:2287   .text.PWM_lCCU8_SetFreq:00000000 PWM_lCCU8_SetFreq
    {standard input}:2451   .text.PWM_lCCU8_SetFreq:000000e8 $d
    {standard input}:2456   .text.PWM_lCCU8_SetFreqAndDutyCycle:00000000 $t
    {standard input}:2461   .text.PWM_lCCU8_SetFreqAndDutyCycle:00000000 PWM_lCCU8_SetFreqAndDutyCycle
    {standard input}:2634   .text.PWM_lCCU8_SetFreqAndDutyCycle:000000f8 $d
    {standard input}:2639   .text.PWM_GetAppVersion:00000000 $t
    {standard input}:2644   .text.PWM_GetAppVersion:00000000 PWM_GetAppVersion
    {standard input}:2704   .text.PWM_Init:00000000 $t
    {standard input}:2709   .text.PWM_Init:00000000 PWM_Init
    {standard input}:2768   .text.PWM_Start:00000000 $t
    {standard input}:2822   .text.PWM_Stop:00000000 $t
    {standard input}:2827   .text.PWM_Stop:00000000 PWM_Stop
    {standard input}:2876   .text.PWM_SetDutyCycle:00000000 $t
    {standard input}:2881   .text.PWM_SetDutyCycle:00000000 PWM_SetDutyCycle
    {standard input}:2943   .text.PWM_SetFreq:00000000 $t
    {standard input}:2948   .text.PWM_SetFreq:00000000 PWM_SetFreq
    {standard input}:3010   .text.PWM_SetFreqAndDutyCycle:00000000 $t
    {standard input}:3015   .text.PWM_SetFreqAndDutyCycle:00000000 PWM_SetFreqAndDutyCycle
    {standard input}:3080   .text.PWM_GetTimerStatus:00000000 $t
    {standard input}:3085   .text.PWM_GetTimerStatus:00000000 PWM_GetTimerStatus
    {standard input}:3148   .text.PWM_GetInterruptStatus:00000000 $t
    {standard input}:3153   .text.PWM_GetInterruptStatus:00000000 PWM_GetInterruptStatus
    {standard input}:3222   .text.PWM_ClearEvent:00000000 $t
    {standard input}:3227   .text.PWM_ClearEvent:00000000 PWM_ClearEvent
    {standard input}:3286   .text.PWM_SetPassiveLevel:00000000 $t
    {standard input}:3291   .text.PWM_SetPassiveLevel:00000000 PWM_SetPassiveLevel
    {standard input}:3367   .text.PWM_SetPeriodMatchValue:00000000 $t
    {standard input}:3372   .text.PWM_SetPeriodMatchValue:00000000 PWM_SetPeriodMatchValue
    {standard input}:3507   .text.PWM_SetPeriodMatchValue:000000d0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_GPIO_Init
XMC_CCU4_SLICE_SetInterruptNode
XMC_CCU4_SLICE_SetPrescaler
GLOBAL_CCU8_Init
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_SetTimerCompareMatch
XMC_CCU8_SLICE_SetInterruptNode
XMC_CCU8_SLICE_SetPrescaler
XMC_CCU4_SLICE_SetPassiveLevel
XMC_CCU8_SLICE_SetPassiveLevel
