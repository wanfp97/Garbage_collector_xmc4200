   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB139:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE139:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB140:
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE140:
 114 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_GetInput:
 120              	.LFB142:
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 334 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 139              	 .loc 1 337 0
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 5A6A     	 ldr r2,[r3,#36]
 142 0010 FB78     	 ldrb r3,[r7,#3]
 143 0012 22FA03F3 	 lsr r3,r2,r3
 144 0016 03F00103 	 and r3,r3,#1
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 338 0
 146 001a 1846     	 mov r0,r3
 147 001c 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 001e BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0020 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0024 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE142:
 162 0026 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	DIGITAL_IO_SetOutputHigh:
 168              	.LFB147:
 169              	 .file 2 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 170              	 .loc 2 269 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174 0000 80B5     	 push {r7,lr}
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 8
 177              	 .cfi_offset 7,-8
 178              	 .cfi_offset 14,-4
 179 0002 82B0     	 sub sp,sp,#8
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 186              	 .loc 2 271 0
 187 0008 7B68     	 ldr r3,[r7,#4]
 188 000a 1A68     	 ldr r2,[r3]
 189 000c 7B68     	 ldr r3,[r7,#4]
 190 000e 1B7C     	 ldrb r3,[r3,#16]
 191 0010 1046     	 mov r0,r2
 192 0012 1946     	 mov r1,r3
 193 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 194              	 .loc 2 272 0
 195 0018 0837     	 adds r7,r7,#8
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 8
 198 001a BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 001c 80BD     	 pop {r7,pc}
 203              	 .cfi_endproc
 204              	.LFE147:
 206 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	DIGITAL_IO_SetOutputLow:
 212              	.LFB148:
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 213              	 .loc 2 316 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217 0000 80B5     	 push {r7,lr}
 218              	.LCFI23:
 219              	 .cfi_def_cfa_offset 8
 220              	 .cfi_offset 7,-8
 221              	 .cfi_offset 14,-4
 222 0002 82B0     	 sub sp,sp,#8
 223              	.LCFI24:
 224              	 .cfi_def_cfa_offset 16
 225 0004 00AF     	 add r7,sp,#0
 226              	.LCFI25:
 227              	 .cfi_def_cfa_register 7
 228 0006 7860     	 str r0,[r7,#4]
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 229              	 .loc 2 318 0
 230 0008 7B68     	 ldr r3,[r7,#4]
 231 000a 1A68     	 ldr r2,[r3]
 232 000c 7B68     	 ldr r3,[r7,#4]
 233 000e 1B7C     	 ldrb r3,[r3,#16]
 234 0010 1046     	 mov r0,r2
 235 0012 1946     	 mov r1,r3
 236 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 237              	 .loc 2 319 0
 238 0018 0837     	 adds r7,r7,#8
 239              	.LCFI26:
 240              	 .cfi_def_cfa_offset 8
 241 001a BD46     	 mov sp,r7
 242              	.LCFI27:
 243              	 .cfi_def_cfa_register 13
 244              	 
 245 001c 80BD     	 pop {r7,pc}
 246              	 .cfi_endproc
 247              	.LFE148:
 249 001e 00BF     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 250              	 .align 2
 251              	 .thumb
 252              	 .thumb_func
 254              	PIN_INTERRUPT_GetPinValue:
 255              	.LFB303:
 256              	 .file 3 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2016-03-02
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.2 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016, Infineon Technologies AG
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_scu.h>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_gpio.h>
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <xmc_eru.h>
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include <DAVE_Common.h>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_MINOR_VERSION >= 1U) && \
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       (XMC_LIB_PATCH_VERSION >= 6U)))
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // More code here
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include <DAVE.h>
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include <DAVE.h>
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if(DAVE_STATUS_SUCCESS == status)
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    // user code
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    while(1)
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {}
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if(status == DAVE_STATUS_SUCCESS)
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if(pin_status == 1)
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 257              	 .loc 3 349 0
 258              	 .cfi_startproc
 259              	 
 260              	 
 261 0000 80B5     	 push {r7,lr}
 262              	.LCFI28:
 263              	 .cfi_def_cfa_offset 8
 264              	 .cfi_offset 7,-8
 265              	 .cfi_offset 14,-4
 266 0002 82B0     	 sub sp,sp,#8
 267              	.LCFI29:
 268              	 .cfi_def_cfa_offset 16
 269 0004 00AF     	 add r7,sp,#0
 270              	.LCFI30:
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 273              	 .loc 3 351 0
 274 0008 7B68     	 ldr r3,[r7,#4]
 275 000a 5A68     	 ldr r2,[r3,#4]
 276 000c 7B68     	 ldr r3,[r7,#4]
 277 000e 93F82130 	 ldrb r3,[r3,#33]
 278 0012 1046     	 mov r0,r2
 279 0014 1946     	 mov r1,r3
 280 0016 FFF7FEFF 	 bl XMC_GPIO_GetInput
 281 001a 0346     	 mov r3,r0
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 282              	 .loc 3 352 0
 283 001c 1846     	 mov r0,r3
 284 001e 0837     	 adds r7,r7,#8
 285              	.LCFI31:
 286              	 .cfi_def_cfa_offset 8
 287 0020 BD46     	 mov sp,r7
 288              	.LCFI32:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 0022 80BD     	 pop {r7,pc}
 292              	 .cfi_endproc
 293              	.LFE303:
 295              	 .section .text.XMC_SPI_CH_SetBitOrderLsbFirst,"ax",%progbits
 296              	 .align 2
 297              	 .thumb
 298              	 .thumb_func
 300              	XMC_SPI_CH_SetBitOrderLsbFirst:
 301              	.LFB373:
 302              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2019-05-07
   4:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  41:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *   
  42:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  44:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and 
  45:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  52:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  53:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  56:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  57:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  60:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  61:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  62:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  64:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  65:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  66:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  67:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  68:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  69:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  70:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  71:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  73:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  74:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  75:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  76:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  77:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  78:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  79:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond 
  81:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
  82:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
  83:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
  84:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  85:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  86:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
  87:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  88:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
  89:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
  91:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
  93:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
  94:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
  95:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
  96:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
  98:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
  99:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 100:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 101:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module. 
 102:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 103:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 104:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 105:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 106:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 107:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 109:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 110:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 111:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 112:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 113:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 114:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 115:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 116:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 117:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 118:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 119:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 120:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 121:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 122:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 123:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 124:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 125:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 126:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 127:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 128:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 129:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 131:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 132:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 133:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 134:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 135:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 136:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 137:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 138:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 139:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 140:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 141:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 142:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 143:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 144:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 145:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 146:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 147:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 148:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 149:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 152:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 153:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 154:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 155:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 157:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 158:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 159:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 160:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 161:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 162:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 163:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 164:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 166:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 167:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 168:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 169:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 170:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 171:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 172:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 173:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 174:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 175:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 176:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 178:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 179:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 181:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 182:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 183:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 184:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 185:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 187:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 188:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 189:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 190:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 196:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 197:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 198:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 199:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 200:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 201:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 202:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 203:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 206:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 207:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 211:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 212:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 213:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 214:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 215:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 217:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 218:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 220:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 222:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 223:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 225:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 227:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 229:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 230:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 231:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 232:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 233:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 235:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 236:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 237:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 238:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 240:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 241:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 243:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 244:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 245:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 246:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 247:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 248:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 249:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 250:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 251:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 252:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 253:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 254:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 255:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 258:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 260:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */ 
 262:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 265:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 266:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 267:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 268:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 269:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 270:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 271:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 272:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 273:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 274:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */ 
 275:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */ 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL= 6UL,                 /**< SPI half duplex mode with dual data lines */ 
 277:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD= 7UL                  /**< SPI half duplex mode with quad data lines */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 281:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 282:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 283:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 284:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 285:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 286:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 288:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 289:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 290:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 292:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 293:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 294:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 295:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 296:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 297:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 298:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** */
 299:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 300:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 301:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 302:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 303:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 304:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 305:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 306:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 307:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 309:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 310:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 311:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 312:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 313:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 314:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 315:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 316:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 318:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 319:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 320:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 321:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 322:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 323:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 325:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 326:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 327:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 328:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 330:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 332:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 333:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 335:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 336:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 337:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 339:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 340:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 341:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 342:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 343:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 344:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 345:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 346:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 347:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 348:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 349:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 350:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 351:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 352:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 353:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 354:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 355:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 356:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 357:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 358:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 359:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 360:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 361:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 362:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 363:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 364:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 365:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 366:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 367:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 368:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 369:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 370:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 371:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config);
 372:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 373:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 374:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 375:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 376:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 377:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 378:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 379:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 380:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 381:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 382:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 383:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 384:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 385:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 386:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 387:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 388:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 390:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** }
 391:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 392:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 393:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 394:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 395:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 396:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 397:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 398:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 399:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 400:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 401:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 402:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 403:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 404:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 405:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 406:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 408:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 409:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 410:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 411:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 412:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 413:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 414:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 415:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 416:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 417:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 418:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 419:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 420:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 421:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 422:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 424:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 425:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 426:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 427:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 428:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 429:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 430:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 431:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 432:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 433:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 434:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 435:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 436:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 437:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 438:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 439:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 440:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 441:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 442:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 443:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 444:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 445:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 446:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 448:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 449:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 450:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 451:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 452:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 453:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 454:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 455:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 456:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 457:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 458:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 459:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 460:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 461:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 462:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 464:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 465:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 466:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 467:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 468:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 469:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 471:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 472:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 473:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 475:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 476:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 477:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 478:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 479:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 480:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 483:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 484:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 485:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 486:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 487:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 488:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 489:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 490:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 491:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 492:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****                   (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 493:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** }
 494:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 495:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 496:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 497:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 498:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 499:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 500:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 502:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 503:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 504:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 505:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 506:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 507:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 508:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 509:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 510:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 511:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 512:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 513:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 514:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 515:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 516:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 517:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 518:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 519:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.      
 520:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 521:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 522:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 523:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 524:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 525:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 526:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 527:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 528:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 529:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 530:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 531:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 532:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 533:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 534:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 535:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** }
 536:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 537:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 538:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 539:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 540:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 541:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 542:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 543:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 544:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 545:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 546:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 548:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 549:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 550:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 551:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** 
 552:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** /**
 553:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 554:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 555:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 556:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 557:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 558:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 559:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 560:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 561:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  *
 562:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 563:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 564:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****  */
 565:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 566:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** {
 303              	 .loc 4 566 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI33:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 83B0     	 sub sp,sp,#12
 313              	.LCFI34:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI35:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 567:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 319              	 .loc 4 567 0
 320 0008 7B68     	 ldr r3,[r7,#4]
 321 000a 5B6B     	 ldr r3,[r3,#52]
 322 000c 23F00102 	 bic r2,r3,#1
 323 0010 7B68     	 ldr r3,[r7,#4]
 324 0012 5A63     	 str r2,[r3,#52]
 568:C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc\xmc_spi.h **** }
 325              	 .loc 4 568 0
 326 0014 0C37     	 adds r7,r7,#12
 327              	.LCFI36:
 328              	 .cfi_def_cfa_offset 4
 329 0016 BD46     	 mov sp,r7
 330              	.LCFI37:
 331              	 .cfi_def_cfa_register 13
 332              	 
 333 0018 5DF8047B 	 ldr r7,[sp],#4
 334              	.LCFI38:
 335              	 .cfi_restore 7
 336              	 .cfi_def_cfa_offset 0
 337 001c 7047     	 bx lr
 338              	 .cfi_endproc
 339              	.LFE373:
 341              	 .comm direction_status,2,2
 342              	 .comm clamp_status,2,2
 343              	 .comm pin_status,4,4
 344              	 .global green_led
 345 001e 00BF     	 .section .rodata.green_led,"a",%progbits
 346              	 .align 1
 349              	green_led:
 350 0000 FF00     	 .short 255
 351              	 .global red_led
 352              	 .section .rodata.red_led,"a",%progbits
 353              	 .align 1
 356              	red_led:
 357 0000 0000     	 .space 2
 358              	 .global xDelay
 359              	 .section .rodata.xDelay,"a",%progbits
 360              	 .align 2
 363              	xDelay:
 364 0000 14000000 	 .word 20
 365              	 .section .rodata.TLE94112EL_0,"a",%progbits
 366              	 .align 2
 369              	TLE94112EL_0:
 370 0000 00000000 	 .word tle94112el_enable
 371 0004 00000000 	 .word tle94112el_disable
 372 0008 00000000 	 .word tle94112el_spi_transfer
 373              	 .global FORWARD_Handle
 374              	 .section .bss.FORWARD_Handle,"aw",%nobits
 375              	 .align 2
 378              	FORWARD_Handle:
 379 0000 00000000 	 .space 4
 380              	 .global BACKWARD_Handle
 381              	 .section .bss.BACKWARD_Handle,"aw",%nobits
 382              	 .align 2
 385              	BACKWARD_Handle:
 386 0000 00000000 	 .space 4
 387              	 .global LEFT_Handle
 388              	 .section .bss.LEFT_Handle,"aw",%nobits
 389              	 .align 2
 392              	LEFT_Handle:
 393 0000 00000000 	 .space 4
 394              	 .global RIGHT_Handle
 395              	 .section .bss.RIGHT_Handle,"aw",%nobits
 396              	 .align 2
 399              	RIGHT_Handle:
 400 0000 00000000 	 .space 4
 401              	 .global UP_Handle
 402              	 .section .bss.UP_Handle,"aw",%nobits
 403              	 .align 2
 406              	UP_Handle:
 407 0000 00000000 	 .space 4
 408              	 .global DOWN_Handle
 409              	 .section .bss.DOWN_Handle,"aw",%nobits
 410              	 .align 2
 413              	DOWN_Handle:
 414 0000 00000000 	 .space 4
 415              	 .global OPEN_Handle
 416              	 .section .bss.OPEN_Handle,"aw",%nobits
 417              	 .align 2
 420              	OPEN_Handle:
 421 0000 00000000 	 .space 4
 422              	 .global CLOSE_Handle
 423              	 .section .bss.CLOSE_Handle,"aw",%nobits
 424              	 .align 2
 427              	CLOSE_Handle:
 428 0000 00000000 	 .space 4
 429              	 .global HOLD_Handle
 430              	 .section .bss.HOLD_Handle,"aw",%nobits
 431              	 .align 2
 434              	HOLD_Handle:
 435 0000 00000000 	 .space 4
 436              	 .global ROTATE_Handle
 437              	 .section .bss.ROTATE_Handle,"aw",%nobits
 438              	 .align 2
 441              	ROTATE_Handle:
 442 0000 00000000 	 .space 4
 443              	 .global DIRECTION_Handle
 444              	 .section .bss.DIRECTION_Handle,"aw",%nobits
 445              	 .align 2
 448              	DIRECTION_Handle:
 449 0000 00000000 	 .space 4
 450              	 .global CLAMP_Handle
 451              	 .section .bss.CLAMP_Handle,"aw",%nobits
 452              	 .align 2
 455              	CLAMP_Handle:
 456 0000 00000000 	 .space 4
 457              	 .comm FORWARD_interruptSemaphore,4,4
 458              	 .comm BACKWARD_interruptSemaphore,4,4
 459              	 .comm LEFT_interruptSemaphore,4,4
 460              	 .comm RIGHT_interruptSemaphore,4,4
 461              	 .comm UP_interruptSemaphore,4,4
 462              	 .comm DOWN_interruptSemaphore,4,4
 463              	 .comm OPEN_interruptSemaphore,4,4
 464              	 .comm CLOSE_interruptSemaphore,4,4
 465              	 .comm HOLD_interruptSemaphore,4,4
 466              	 .comm ROTATE_interruptSemaphore,4,4
 467              	 .comm DIRECTION_interruptSemaphore,4,4
 468              	 .comm CLAMP_interruptSemaphore,4,4
 469              	 .section .text.FORWARD_Task,"ax",%progbits
 470              	 .align 2
 471              	 .global FORWARD_Task
 472              	 .thumb
 473              	 .thumb_func
 475              	FORWARD_Task:
 476              	.LFB430:
 477              	 .file 5 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2020 Sep 02 12:52:04
   5:../main.c     ****  *  Author: FORGE-15R
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** #include "ext_lib/base.h"
  13:../main.c     **** 
  14:../main.c     **** /**
  15:../main.c     **** 
  16:../main.c     ****  * @brief main() - Application entry point
  17:../main.c     ****  *
  18:../main.c     ****  * <b>Details of function</b><br>
  19:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  20:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  21:../main.c     ****  * code.
  22:../main.c     ****  */
  23:../main.c     **** 
  24:../main.c     **** volatile uint16_t direction_status;
  25:../main.c     **** volatile uint16_t clamp_status;
  26:../main.c     **** volatile uint32_t pin_status;
  27:../main.c     **** const uint16_t green_led = 0b11111111;
  28:../main.c     **** const uint16_t red_led = 0b00000000;
  29:../main.c     **** const TickType_t xDelay = 20/portTICK_PERIOD_MS;
  30:../main.c     **** 
  31:../main.c     **** 
  32:../main.c     **** 
  33:../main.c     **** static void tle94112el_enable(void);
  34:../main.c     **** static void tle94112el_disable(void);
  35:../main.c     **** static int32_t tle94112el_spi_transfer(uint8_t *tx_data, uint8_t *rx_data);
  36:../main.c     **** 
  37:../main.c     **** static const TLE94112EL_t TLE94112EL_0 =
  38:../main.c     **** 
  39:../main.c     ****   {
  40:../main.c     **** 
  41:../main.c     ****     .enable = tle94112el_enable,
  42:../main.c     **** 
  43:../main.c     ****     .disable = tle94112el_disable,
  44:../main.c     **** 
  45:../main.c     ****     .spi_transfer = tle94112el_spi_transfer
  46:../main.c     **** 
  47:../main.c     ****   };
  48:../main.c     **** 
  49:../main.c     **** TaskHandle_t FORWARD_Handle = NULL;
  50:../main.c     **** TaskHandle_t BACKWARD_Handle = NULL;
  51:../main.c     **** TaskHandle_t LEFT_Handle = NULL;
  52:../main.c     **** TaskHandle_t RIGHT_Handle = NULL;
  53:../main.c     **** TaskHandle_t UP_Handle = NULL;
  54:../main.c     **** TaskHandle_t DOWN_Handle = NULL;
  55:../main.c     **** TaskHandle_t OPEN_Handle = NULL;
  56:../main.c     **** TaskHandle_t CLOSE_Handle = NULL;
  57:../main.c     **** TaskHandle_t HOLD_Handle = NULL;
  58:../main.c     **** TaskHandle_t ROTATE_Handle = NULL;
  59:../main.c     **** TaskHandle_t DIRECTION_Handle = NULL;
  60:../main.c     **** TaskHandle_t CLAMP_Handle = NULL;
  61:../main.c     **** 
  62:../main.c     **** SemaphoreHandle_t FORWARD_interruptSemaphore;
  63:../main.c     **** SemaphoreHandle_t BACKWARD_interruptSemaphore;
  64:../main.c     **** SemaphoreHandle_t LEFT_interruptSemaphore;
  65:../main.c     **** SemaphoreHandle_t RIGHT_interruptSemaphore;
  66:../main.c     **** SemaphoreHandle_t UP_interruptSemaphore;
  67:../main.c     **** SemaphoreHandle_t DOWN_interruptSemaphore;
  68:../main.c     **** SemaphoreHandle_t OPEN_interruptSemaphore;
  69:../main.c     **** SemaphoreHandle_t CLOSE_interruptSemaphore;
  70:../main.c     **** SemaphoreHandle_t HOLD_interruptSemaphore;
  71:../main.c     **** SemaphoreHandle_t ROTATE_interruptSemaphore;
  72:../main.c     **** SemaphoreHandle_t DIRECTION_interruptSemaphore;
  73:../main.c     **** SemaphoreHandle_t CLAMP_interruptSemaphore;
  74:../main.c     **** 
  75:../main.c     **** 
  76:../main.c     **** void FORWARD_Task(void *p){
 478              	 .loc 5 76 0
 479              	 .cfi_startproc
 480              	 
 481              	 
 482 0000 80B5     	 push {r7,lr}
 483              	.LCFI39:
 484              	 .cfi_def_cfa_offset 8
 485              	 .cfi_offset 7,-8
 486              	 .cfi_offset 14,-4
 487 0002 82B0     	 sub sp,sp,#8
 488              	.LCFI40:
 489              	 .cfi_def_cfa_offset 16
 490 0004 00AF     	 add r7,sp,#0
 491              	.LCFI41:
 492              	 .cfi_def_cfa_register 7
 493 0006 7860     	 str r0,[r7,#4]
 494              	.L13:
  77:../main.c     **** 
  78:../main.c     **** 	while(1){
  79:../main.c     **** 
  80:../main.c     **** 		if (xSemaphoreTake(FORWARD_interruptSemaphore, portMAX_DELAY) == pdPASS){
 495              	 .loc 5 80 0
 496 0008 334B     	 ldr r3,.L14
 497 000a 1B68     	 ldr r3,[r3]
 498 000c 1846     	 mov r0,r3
 499 000e 4FF0FF31 	 mov r1,#-1
 500 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 501 0016 0346     	 mov r3,r0
 502 0018 012B     	 cmp r3,#1
 503 001a 5CD1     	 bne .L11
  81:../main.c     **** 
  82:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 504              	 .loc 5 82 0
 505 001c 2F48     	 ldr r0,.L14+4
 506 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 507 0022 0246     	 mov r2,r0
 508 0024 2E4B     	 ldr r3,.L14+8
 509 0026 1A60     	 str r2,[r3]
  83:../main.c     **** 			if(pin_status==1){
 510              	 .loc 5 83 0
 511 0028 2D4B     	 ldr r3,.L14+8
 512 002a 1B68     	 ldr r3,[r3]
 513 002c 012B     	 cmp r3,#1
 514 002e 29D1     	 bne .L12
  84:../main.c     **** 				//FORWARD
  85:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x99);
 515              	 .loc 5 85 0
 516 0030 2C48     	 ldr r0,.L14+12
 517 0032 0121     	 movs r1,#1
 518 0034 9922     	 movs r2,#153
 519 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  86:../main.c     **** 				  vTaskDelay( xDelay );
 520              	 .loc 5 86 0
 521 003a 1423     	 movs r3,#20
 522 003c 1846     	 mov r0,r3
 523 003e FFF7FEFF 	 bl vTaskDelay
  87:../main.c     **** 
  88:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x99);
 524              	 .loc 5 88 0
 525 0042 2848     	 ldr r0,.L14+12
 526 0044 0221     	 movs r1,#2
 527 0046 9922     	 movs r2,#153
 528 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  89:../main.c     **** 					  vTaskDelay( xDelay );
 529              	 .loc 5 89 0
 530 004c 1423     	 movs r3,#20
 531 004e 1846     	 mov r0,r3
 532 0050 FFF7FEFF 	 bl vTaskDelay
  90:../main.c     **** 
  91:../main.c     **** 					  TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x99);
 533              	 .loc 5 91 0
 534 0054 2348     	 ldr r0,.L14+12
 535 0056 0321     	 movs r1,#3
 536 0058 9922     	 movs r2,#153
 537 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
  92:../main.c     **** 				  vTaskDelay( xDelay );
 538              	 .loc 5 92 0
 539 005e 1423     	 movs r3,#20
 540 0060 1846     	 mov r0,r3
 541 0062 FFF7FEFF 	 bl vTaskDelay
  93:../main.c     **** 
  94:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_HIGH);
 542              	 .loc 5 94 0
 543 0066 2048     	 ldr r0,.L14+16
 544 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
  95:../main.c     **** 					  vTaskDelay( xDelay );
 545              	 .loc 5 95 0
 546 006c 1423     	 movs r3,#20
 547 006e 1846     	 mov r0,r3
 548 0070 FFF7FEFF 	 bl vTaskDelay
  96:../main.c     **** 
  97:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 549              	 .loc 5 97 0
 550 0074 1D48     	 ldr r0,.L14+20
 551 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
  98:../main.c     **** 					  vTaskDelay( xDelay );
 552              	 .loc 5 98 0
 553 007a 1423     	 movs r3,#20
 554 007c 1846     	 mov r0,r3
 555 007e FFF7FEFF 	 bl vTaskDelay
 556 0082 28E0     	 b .L11
 557              	.L12:
  99:../main.c     **** 
 100:../main.c     **** 			}
 101:../main.c     **** 
 102:../main.c     **** 			else{
 103:../main.c     **** 				//stop
 104:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 558              	 .loc 5 104 0
 559 0084 1748     	 ldr r0,.L14+12
 560 0086 0121     	 movs r1,#1
 561 0088 0022     	 movs r2,#0
 562 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 105:../main.c     **** 
 106:../main.c     **** 				  vTaskDelay( xDelay );
 563              	 .loc 5 106 0
 564 008e 1423     	 movs r3,#20
 565 0090 1846     	 mov r0,r3
 566 0092 FFF7FEFF 	 bl vTaskDelay
 107:../main.c     **** 
 108:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 567              	 .loc 5 108 0
 568 0096 1348     	 ldr r0,.L14+12
 569 0098 0221     	 movs r1,#2
 570 009a 0022     	 movs r2,#0
 571 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 109:../main.c     **** 					  vTaskDelay( xDelay );
 572              	 .loc 5 109 0
 573 00a0 1423     	 movs r3,#20
 574 00a2 1846     	 mov r0,r3
 575 00a4 FFF7FEFF 	 bl vTaskDelay
 110:../main.c     **** 
 111:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 576              	 .loc 5 111 0
 577 00a8 0E48     	 ldr r0,.L14+12
 578 00aa 0321     	 movs r1,#3
 579 00ac 0022     	 movs r2,#0
 580 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 112:../main.c     **** 				  vTaskDelay( xDelay );
 581              	 .loc 5 112 0
 582 00b2 1423     	 movs r3,#20
 583 00b4 1846     	 mov r0,r3
 584 00b6 FFF7FEFF 	 bl vTaskDelay
 113:../main.c     **** 
 114:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 585              	 .loc 5 114 0
 586 00ba 0B48     	 ldr r0,.L14+16
 587 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 115:../main.c     **** 					  vTaskDelay( xDelay );
 588              	 .loc 5 115 0
 589 00c0 1423     	 movs r3,#20
 590 00c2 1846     	 mov r0,r3
 591 00c4 FFF7FEFF 	 bl vTaskDelay
 116:../main.c     **** 
 117:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 592              	 .loc 5 117 0
 593 00c8 0848     	 ldr r0,.L14+20
 594 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 118:../main.c     **** 					  vTaskDelay( xDelay );
 595              	 .loc 5 118 0
 596 00ce 1423     	 movs r3,#20
 597 00d0 1846     	 mov r0,r3
 598 00d2 FFF7FEFF 	 bl vTaskDelay
 599              	.L11:
 119:../main.c     **** 			}
 120:../main.c     **** 		}
 121:../main.c     **** 	}
 600              	 .loc 5 121 0
 601 00d6 97E7     	 b .L13
 602              	.L15:
 603              	 .align 2
 604              	.L14:
 605 00d8 00000000 	 .word FORWARD_interruptSemaphore
 606 00dc 00000000 	 .word DIRECTION_INTERRUPT
 607 00e0 00000000 	 .word pin_status
 608 00e4 00000000 	 .word TLE94112EL_0
 609 00e8 00000000 	 .word MOTOR_HIGH
 610 00ec 00000000 	 .word MOTOR_LOW
 611              	 .cfi_endproc
 612              	.LFE430:
 614              	 .section .text.BACKWARD_Task,"ax",%progbits
 615              	 .align 2
 616              	 .global BACKWARD_Task
 617              	 .thumb
 618              	 .thumb_func
 620              	BACKWARD_Task:
 621              	.LFB431:
 122:../main.c     **** }
 123:../main.c     **** 
 124:../main.c     **** void BACKWARD_Task(void *p){
 622              	 .loc 5 124 0
 623              	 .cfi_startproc
 624              	 
 625              	 
 626 0000 80B5     	 push {r7,lr}
 627              	.LCFI42:
 628              	 .cfi_def_cfa_offset 8
 629              	 .cfi_offset 7,-8
 630              	 .cfi_offset 14,-4
 631 0002 82B0     	 sub sp,sp,#8
 632              	.LCFI43:
 633              	 .cfi_def_cfa_offset 16
 634 0004 00AF     	 add r7,sp,#0
 635              	.LCFI44:
 636              	 .cfi_def_cfa_register 7
 637 0006 7860     	 str r0,[r7,#4]
 638              	.L19:
 125:../main.c     **** 
 126:../main.c     **** 	while(1){
 127:../main.c     **** 
 128:../main.c     **** 		if (xSemaphoreTake(BACKWARD_interruptSemaphore, portMAX_DELAY) == pdPASS){
 639              	 .loc 5 128 0
 640 0008 334B     	 ldr r3,.L20
 641 000a 1B68     	 ldr r3,[r3]
 642 000c 1846     	 mov r0,r3
 643 000e 4FF0FF31 	 mov r1,#-1
 644 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 645 0016 0346     	 mov r3,r0
 646 0018 012B     	 cmp r3,#1
 647 001a 5CD1     	 bne .L17
 129:../main.c     **** 
 130:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 648              	 .loc 5 130 0
 649 001c 2F48     	 ldr r0,.L20+4
 650 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 651 0022 0246     	 mov r2,r0
 652 0024 2E4B     	 ldr r3,.L20+8
 653 0026 1A60     	 str r2,[r3]
 131:../main.c     **** 			if(pin_status==1){
 654              	 .loc 5 131 0
 655 0028 2D4B     	 ldr r3,.L20+8
 656 002a 1B68     	 ldr r3,[r3]
 657 002c 012B     	 cmp r3,#1
 658 002e 29D1     	 bne .L18
 132:../main.c     **** 				//BACKWARD
 133:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x66);
 659              	 .loc 5 133 0
 660 0030 2C48     	 ldr r0,.L20+12
 661 0032 0121     	 movs r1,#1
 662 0034 6622     	 movs r2,#102
 663 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 134:../main.c     **** 
 135:../main.c     **** 				  vTaskDelay( xDelay );
 664              	 .loc 5 135 0
 665 003a 1423     	 movs r3,#20
 666 003c 1846     	 mov r0,r3
 667 003e FFF7FEFF 	 bl vTaskDelay
 136:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x66);
 668              	 .loc 5 136 0
 669 0042 2848     	 ldr r0,.L20+12
 670 0044 0221     	 movs r1,#2
 671 0046 6622     	 movs r2,#102
 672 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 137:../main.c     **** 					  vTaskDelay( xDelay );
 673              	 .loc 5 137 0
 674 004c 1423     	 movs r3,#20
 675 004e 1846     	 mov r0,r3
 676 0050 FFF7FEFF 	 bl vTaskDelay
 138:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x66);
 677              	 .loc 5 138 0
 678 0054 2348     	 ldr r0,.L20+12
 679 0056 0321     	 movs r1,#3
 680 0058 6622     	 movs r2,#102
 681 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 139:../main.c     **** 				  vTaskDelay( xDelay );
 682              	 .loc 5 139 0
 683 005e 1423     	 movs r3,#20
 684 0060 1846     	 mov r0,r3
 685 0062 FFF7FEFF 	 bl vTaskDelay
 140:../main.c     **** 
 141:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 686              	 .loc 5 141 0
 687 0066 2048     	 ldr r0,.L20+16
 688 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 142:../main.c     **** 					  vTaskDelay( xDelay );
 689              	 .loc 5 142 0
 690 006c 1423     	 movs r3,#20
 691 006e 1846     	 mov r0,r3
 692 0070 FFF7FEFF 	 bl vTaskDelay
 143:../main.c     **** 
 144:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_LOW);
 693              	 .loc 5 144 0
 694 0074 1D48     	 ldr r0,.L20+20
 695 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 145:../main.c     **** 					  vTaskDelay( xDelay );
 696              	 .loc 5 145 0
 697 007a 1423     	 movs r3,#20
 698 007c 1846     	 mov r0,r3
 699 007e FFF7FEFF 	 bl vTaskDelay
 700 0082 28E0     	 b .L17
 701              	.L18:
 146:../main.c     **** 			}
 147:../main.c     **** 
 148:../main.c     **** 			else{
 149:../main.c     **** 				//stop
 150:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 702              	 .loc 5 150 0
 703 0084 1748     	 ldr r0,.L20+12
 704 0086 0121     	 movs r1,#1
 705 0088 0022     	 movs r2,#0
 706 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 151:../main.c     **** 
 152:../main.c     **** 				  vTaskDelay( xDelay );
 707              	 .loc 5 152 0
 708 008e 1423     	 movs r3,#20
 709 0090 1846     	 mov r0,r3
 710 0092 FFF7FEFF 	 bl vTaskDelay
 153:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 711              	 .loc 5 153 0
 712 0096 1348     	 ldr r0,.L20+12
 713 0098 0221     	 movs r1,#2
 714 009a 0022     	 movs r2,#0
 715 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 154:../main.c     **** 					  vTaskDelay( xDelay );
 716              	 .loc 5 154 0
 717 00a0 1423     	 movs r3,#20
 718 00a2 1846     	 mov r0,r3
 719 00a4 FFF7FEFF 	 bl vTaskDelay
 155:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 720              	 .loc 5 155 0
 721 00a8 0E48     	 ldr r0,.L20+12
 722 00aa 0321     	 movs r1,#3
 723 00ac 0022     	 movs r2,#0
 724 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 156:../main.c     **** 				  vTaskDelay( xDelay );
 725              	 .loc 5 156 0
 726 00b2 1423     	 movs r3,#20
 727 00b4 1846     	 mov r0,r3
 728 00b6 FFF7FEFF 	 bl vTaskDelay
 157:../main.c     **** 
 158:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 729              	 .loc 5 158 0
 730 00ba 0B48     	 ldr r0,.L20+16
 731 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 159:../main.c     **** 					  vTaskDelay( xDelay );
 732              	 .loc 5 159 0
 733 00c0 1423     	 movs r3,#20
 734 00c2 1846     	 mov r0,r3
 735 00c4 FFF7FEFF 	 bl vTaskDelay
 160:../main.c     **** 
 161:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 736              	 .loc 5 161 0
 737 00c8 0848     	 ldr r0,.L20+20
 738 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 162:../main.c     **** 					  vTaskDelay( xDelay );
 739              	 .loc 5 162 0
 740 00ce 1423     	 movs r3,#20
 741 00d0 1846     	 mov r0,r3
 742 00d2 FFF7FEFF 	 bl vTaskDelay
 743              	.L17:
 163:../main.c     **** 
 164:../main.c     **** 			}
 165:../main.c     **** 		}
 166:../main.c     **** 	}
 744              	 .loc 5 166 0
 745 00d6 97E7     	 b .L19
 746              	.L21:
 747              	 .align 2
 748              	.L20:
 749 00d8 00000000 	 .word BACKWARD_interruptSemaphore
 750 00dc 00000000 	 .word DIRECTION_INTERRUPT
 751 00e0 00000000 	 .word pin_status
 752 00e4 00000000 	 .word TLE94112EL_0
 753 00e8 00000000 	 .word MOTOR_HIGH
 754 00ec 00000000 	 .word MOTOR_LOW
 755              	 .cfi_endproc
 756              	.LFE431:
 758              	 .section .text.LEFT_Task,"ax",%progbits
 759              	 .align 2
 760              	 .global LEFT_Task
 761              	 .thumb
 762              	 .thumb_func
 764              	LEFT_Task:
 765              	.LFB432:
 167:../main.c     **** }
 168:../main.c     **** 
 169:../main.c     **** void LEFT_Task(void *p){
 766              	 .loc 5 169 0
 767              	 .cfi_startproc
 768              	 
 769              	 
 770 0000 80B5     	 push {r7,lr}
 771              	.LCFI45:
 772              	 .cfi_def_cfa_offset 8
 773              	 .cfi_offset 7,-8
 774              	 .cfi_offset 14,-4
 775 0002 82B0     	 sub sp,sp,#8
 776              	.LCFI46:
 777              	 .cfi_def_cfa_offset 16
 778 0004 00AF     	 add r7,sp,#0
 779              	.LCFI47:
 780              	 .cfi_def_cfa_register 7
 781 0006 7860     	 str r0,[r7,#4]
 782              	.L25:
 170:../main.c     **** 
 171:../main.c     **** 	while(1){
 172:../main.c     **** 
 173:../main.c     **** 		if (xSemaphoreTake(LEFT_interruptSemaphore, portMAX_DELAY) == pdPASS){
 783              	 .loc 5 173 0
 784 0008 334B     	 ldr r3,.L26
 785 000a 1B68     	 ldr r3,[r3]
 786 000c 1846     	 mov r0,r3
 787 000e 4FF0FF31 	 mov r1,#-1
 788 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 789 0016 0346     	 mov r3,r0
 790 0018 012B     	 cmp r3,#1
 791 001a 5CD1     	 bne .L23
 174:../main.c     **** 
 175:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 792              	 .loc 5 175 0
 793 001c 2F48     	 ldr r0,.L26+4
 794 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 795 0022 0246     	 mov r2,r0
 796 0024 2E4B     	 ldr r3,.L26+8
 797 0026 1A60     	 str r2,[r3]
 176:../main.c     **** 			if(pin_status==1){
 798              	 .loc 5 176 0
 799 0028 2D4B     	 ldr r3,.L26+8
 800 002a 1B68     	 ldr r3,[r3]
 801 002c 012B     	 cmp r3,#1
 802 002e 29D1     	 bne .L24
 177:../main.c     **** 				//LEFT
 178:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x66);
 803              	 .loc 5 178 0
 804 0030 2C48     	 ldr r0,.L26+12
 805 0032 0121     	 movs r1,#1
 806 0034 6622     	 movs r2,#102
 807 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 179:../main.c     **** 
 180:../main.c     **** 				  vTaskDelay( xDelay );
 808              	 .loc 5 180 0
 809 003a 1423     	 movs r3,#20
 810 003c 1846     	 mov r0,r3
 811 003e FFF7FEFF 	 bl vTaskDelay
 181:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x99);
 812              	 .loc 5 181 0
 813 0042 2848     	 ldr r0,.L26+12
 814 0044 0221     	 movs r1,#2
 815 0046 9922     	 movs r2,#153
 816 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 182:../main.c     **** 					  vTaskDelay( xDelay );
 817              	 .loc 5 182 0
 818 004c 1423     	 movs r3,#20
 819 004e 1846     	 mov r0,r3
 820 0050 FFF7FEFF 	 bl vTaskDelay
 183:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x99);
 821              	 .loc 5 183 0
 822 0054 2348     	 ldr r0,.L26+12
 823 0056 0321     	 movs r1,#3
 824 0058 9922     	 movs r2,#153
 825 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 184:../main.c     **** 				  vTaskDelay( xDelay );
 826              	 .loc 5 184 0
 827 005e 1423     	 movs r3,#20
 828 0060 1846     	 mov r0,r3
 829 0062 FFF7FEFF 	 bl vTaskDelay
 185:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 830              	 .loc 5 185 0
 831 0066 2048     	 ldr r0,.L26+16
 832 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 186:../main.c     **** 					  vTaskDelay( xDelay );
 833              	 .loc 5 186 0
 834 006c 1423     	 movs r3,#20
 835 006e 1846     	 mov r0,r3
 836 0070 FFF7FEFF 	 bl vTaskDelay
 187:../main.c     **** 
 188:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_LOW);
 837              	 .loc 5 188 0
 838 0074 1D48     	 ldr r0,.L26+20
 839 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 189:../main.c     **** 					  vTaskDelay( xDelay );
 840              	 .loc 5 189 0
 841 007a 1423     	 movs r3,#20
 842 007c 1846     	 mov r0,r3
 843 007e FFF7FEFF 	 bl vTaskDelay
 844 0082 28E0     	 b .L23
 845              	.L24:
 190:../main.c     **** 			}
 191:../main.c     **** 
 192:../main.c     **** 			else{
 193:../main.c     **** 				//stop
 194:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 846              	 .loc 5 194 0
 847 0084 1748     	 ldr r0,.L26+12
 848 0086 0121     	 movs r1,#1
 849 0088 0022     	 movs r2,#0
 850 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 195:../main.c     **** 
 196:../main.c     **** 				  vTaskDelay( xDelay );
 851              	 .loc 5 196 0
 852 008e 1423     	 movs r3,#20
 853 0090 1846     	 mov r0,r3
 854 0092 FFF7FEFF 	 bl vTaskDelay
 197:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 855              	 .loc 5 197 0
 856 0096 1348     	 ldr r0,.L26+12
 857 0098 0221     	 movs r1,#2
 858 009a 0022     	 movs r2,#0
 859 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 198:../main.c     **** 					  vTaskDelay( xDelay );
 860              	 .loc 5 198 0
 861 00a0 1423     	 movs r3,#20
 862 00a2 1846     	 mov r0,r3
 863 00a4 FFF7FEFF 	 bl vTaskDelay
 199:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 864              	 .loc 5 199 0
 865 00a8 0E48     	 ldr r0,.L26+12
 866 00aa 0321     	 movs r1,#3
 867 00ac 0022     	 movs r2,#0
 868 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 200:../main.c     **** 				  vTaskDelay( xDelay );
 869              	 .loc 5 200 0
 870 00b2 1423     	 movs r3,#20
 871 00b4 1846     	 mov r0,r3
 872 00b6 FFF7FEFF 	 bl vTaskDelay
 201:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 873              	 .loc 5 201 0
 874 00ba 0B48     	 ldr r0,.L26+16
 875 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 202:../main.c     **** 					  vTaskDelay( xDelay );
 876              	 .loc 5 202 0
 877 00c0 1423     	 movs r3,#20
 878 00c2 1846     	 mov r0,r3
 879 00c4 FFF7FEFF 	 bl vTaskDelay
 203:../main.c     **** 
 204:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 880              	 .loc 5 204 0
 881 00c8 0848     	 ldr r0,.L26+20
 882 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 205:../main.c     **** 					  vTaskDelay( xDelay );
 883              	 .loc 5 205 0
 884 00ce 1423     	 movs r3,#20
 885 00d0 1846     	 mov r0,r3
 886 00d2 FFF7FEFF 	 bl vTaskDelay
 887              	.L23:
 206:../main.c     **** 			}
 207:../main.c     **** 		}
 208:../main.c     **** 	}
 888              	 .loc 5 208 0
 889 00d6 97E7     	 b .L25
 890              	.L27:
 891              	 .align 2
 892              	.L26:
 893 00d8 00000000 	 .word LEFT_interruptSemaphore
 894 00dc 00000000 	 .word DIRECTION_INTERRUPT
 895 00e0 00000000 	 .word pin_status
 896 00e4 00000000 	 .word TLE94112EL_0
 897 00e8 00000000 	 .word MOTOR_HIGH
 898 00ec 00000000 	 .word MOTOR_LOW
 899              	 .cfi_endproc
 900              	.LFE432:
 902              	 .section .text.RIGHT_Task,"ax",%progbits
 903              	 .align 2
 904              	 .global RIGHT_Task
 905              	 .thumb
 906              	 .thumb_func
 908              	RIGHT_Task:
 909              	.LFB433:
 209:../main.c     **** }
 210:../main.c     **** 
 211:../main.c     **** void RIGHT_Task(void *p){
 910              	 .loc 5 211 0
 911              	 .cfi_startproc
 912              	 
 913              	 
 914 0000 80B5     	 push {r7,lr}
 915              	.LCFI48:
 916              	 .cfi_def_cfa_offset 8
 917              	 .cfi_offset 7,-8
 918              	 .cfi_offset 14,-4
 919 0002 82B0     	 sub sp,sp,#8
 920              	.LCFI49:
 921              	 .cfi_def_cfa_offset 16
 922 0004 00AF     	 add r7,sp,#0
 923              	.LCFI50:
 924              	 .cfi_def_cfa_register 7
 925 0006 7860     	 str r0,[r7,#4]
 926              	.L31:
 212:../main.c     **** 
 213:../main.c     **** 	while(1){
 214:../main.c     **** 
 215:../main.c     **** 		if (xSemaphoreTake(RIGHT_interruptSemaphore, portMAX_DELAY) == pdPASS){
 927              	 .loc 5 215 0
 928 0008 334B     	 ldr r3,.L32
 929 000a 1B68     	 ldr r3,[r3]
 930 000c 1846     	 mov r0,r3
 931 000e 4FF0FF31 	 mov r1,#-1
 932 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 933 0016 0346     	 mov r3,r0
 934 0018 012B     	 cmp r3,#1
 935 001a 5CD1     	 bne .L29
 216:../main.c     **** 
 217:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&DIRECTION_INTERRUPT);
 936              	 .loc 5 217 0
 937 001c 2F48     	 ldr r0,.L32+4
 938 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 939 0022 0246     	 mov r2,r0
 940 0024 2E4B     	 ldr r3,.L32+8
 941 0026 1A60     	 str r2,[r3]
 218:../main.c     **** 			if(pin_status==1){
 942              	 .loc 5 218 0
 943 0028 2D4B     	 ldr r3,.L32+8
 944 002a 1B68     	 ldr r3,[r3]
 945 002c 012B     	 cmp r3,#1
 946 002e 29D1     	 bne .L30
 219:../main.c     **** 				//RIGHT
 220:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x99);
 947              	 .loc 5 220 0
 948 0030 2C48     	 ldr r0,.L32+12
 949 0032 0121     	 movs r1,#1
 950 0034 9922     	 movs r2,#153
 951 0036 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 221:../main.c     **** 
 222:../main.c     **** 				  vTaskDelay( xDelay );
 952              	 .loc 5 222 0
 953 003a 1423     	 movs r3,#20
 954 003c 1846     	 mov r0,r3
 955 003e FFF7FEFF 	 bl vTaskDelay
 223:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x66);
 956              	 .loc 5 223 0
 957 0042 2848     	 ldr r0,.L32+12
 958 0044 0221     	 movs r1,#2
 959 0046 6622     	 movs r2,#102
 960 0048 FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 224:../main.c     **** 					  vTaskDelay( xDelay );
 961              	 .loc 5 224 0
 962 004c 1423     	 movs r3,#20
 963 004e 1846     	 mov r0,r3
 964 0050 FFF7FEFF 	 bl vTaskDelay
 225:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x66);
 965              	 .loc 5 225 0
 966 0054 2348     	 ldr r0,.L32+12
 967 0056 0321     	 movs r1,#3
 968 0058 6622     	 movs r2,#102
 969 005a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 226:../main.c     **** 				  vTaskDelay( xDelay );
 970              	 .loc 5 226 0
 971 005e 1423     	 movs r3,#20
 972 0060 1846     	 mov r0,r3
 973 0062 FFF7FEFF 	 bl vTaskDelay
 227:../main.c     **** 					 DIGITAL_IO_SetOutputHigh(&MOTOR_HIGH);
 974              	 .loc 5 227 0
 975 0066 2048     	 ldr r0,.L32+16
 976 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 228:../main.c     **** 					  vTaskDelay( xDelay );
 977              	 .loc 5 228 0
 978 006c 1423     	 movs r3,#20
 979 006e 1846     	 mov r0,r3
 980 0070 FFF7FEFF 	 bl vTaskDelay
 229:../main.c     **** 
 230:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 981              	 .loc 5 230 0
 982 0074 1D48     	 ldr r0,.L32+20
 983 0076 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 231:../main.c     **** 					  vTaskDelay( xDelay );
 984              	 .loc 5 231 0
 985 007a 1423     	 movs r3,#20
 986 007c 1846     	 mov r0,r3
 987 007e FFF7FEFF 	 bl vTaskDelay
 988 0082 28E0     	 b .L29
 989              	.L30:
 232:../main.c     **** 			}
 233:../main.c     **** 
 234:../main.c     **** 			else{
 235:../main.c     **** 				//stop
 236:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x01, 0x00);
 990              	 .loc 5 236 0
 991 0084 1748     	 ldr r0,.L32+12
 992 0086 0121     	 movs r1,#1
 993 0088 0022     	 movs r2,#0
 994 008a FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 237:../main.c     **** 
 238:../main.c     **** 				  vTaskDelay( xDelay );
 995              	 .loc 5 238 0
 996 008e 1423     	 movs r3,#20
 997 0090 1846     	 mov r0,r3
 998 0092 FFF7FEFF 	 bl vTaskDelay
 239:../main.c     **** 					TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x02, 0x00);
 999              	 .loc 5 239 0
 1000 0096 1348     	 ldr r0,.L32+12
 1001 0098 0221     	 movs r1,#2
 1002 009a 0022     	 movs r2,#0
 1003 009c FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 240:../main.c     **** 					  vTaskDelay( xDelay );
 1004              	 .loc 5 240 0
 1005 00a0 1423     	 movs r3,#20
 1006 00a2 1846     	 mov r0,r3
 1007 00a4 FFF7FEFF 	 bl vTaskDelay
 241:../main.c     **** 				TLE94112EL_SetHBRegdata(&TLE94112EL_0, 0x03, 0x00);
 1008              	 .loc 5 241 0
 1009 00a8 0E48     	 ldr r0,.L32+12
 1010 00aa 0321     	 movs r1,#3
 1011 00ac 0022     	 movs r2,#0
 1012 00ae FFF7FEFF 	 bl TLE94112EL_SetHBRegdata
 242:../main.c     **** 				  vTaskDelay( xDelay );
 1013              	 .loc 5 242 0
 1014 00b2 1423     	 movs r3,#20
 1015 00b4 1846     	 mov r0,r3
 1016 00b6 FFF7FEFF 	 bl vTaskDelay
 243:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_HIGH);
 1017              	 .loc 5 243 0
 1018 00ba 0B48     	 ldr r0,.L32+16
 1019 00bc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 244:../main.c     **** 					  vTaskDelay( xDelay );
 1020              	 .loc 5 244 0
 1021 00c0 1423     	 movs r3,#20
 1022 00c2 1846     	 mov r0,r3
 1023 00c4 FFF7FEFF 	 bl vTaskDelay
 245:../main.c     **** 
 246:../main.c     **** 					 DIGITAL_IO_SetOutputLow(&MOTOR_LOW);
 1024              	 .loc 5 246 0
 1025 00c8 0848     	 ldr r0,.L32+20
 1026 00ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 247:../main.c     **** 					  vTaskDelay( xDelay );
 1027              	 .loc 5 247 0
 1028 00ce 1423     	 movs r3,#20
 1029 00d0 1846     	 mov r0,r3
 1030 00d2 FFF7FEFF 	 bl vTaskDelay
 1031              	.L29:
 248:../main.c     **** 			}
 249:../main.c     **** 		}
 250:../main.c     **** 	}
 1032              	 .loc 5 250 0
 1033 00d6 97E7     	 b .L31
 1034              	.L33:
 1035              	 .align 2
 1036              	.L32:
 1037 00d8 00000000 	 .word RIGHT_interruptSemaphore
 1038 00dc 00000000 	 .word DIRECTION_INTERRUPT
 1039 00e0 00000000 	 .word pin_status
 1040 00e4 00000000 	 .word TLE94112EL_0
 1041 00e8 00000000 	 .word MOTOR_HIGH
 1042 00ec 00000000 	 .word MOTOR_LOW
 1043              	 .cfi_endproc
 1044              	.LFE433:
 1046              	 .section .text.UP_Task,"ax",%progbits
 1047              	 .align 2
 1048              	 .global UP_Task
 1049              	 .thumb
 1050              	 .thumb_func
 1052              	UP_Task:
 1053              	.LFB434:
 251:../main.c     **** }
 252:../main.c     **** 
 253:../main.c     **** void UP_Task(void *p){
 1054              	 .loc 5 253 0
 1055              	 .cfi_startproc
 1056              	 
 1057              	 
 1058 0000 80B5     	 push {r7,lr}
 1059              	.LCFI51:
 1060              	 .cfi_def_cfa_offset 8
 1061              	 .cfi_offset 7,-8
 1062              	 .cfi_offset 14,-4
 1063 0002 82B0     	 sub sp,sp,#8
 1064              	.LCFI52:
 1065              	 .cfi_def_cfa_offset 16
 1066 0004 00AF     	 add r7,sp,#0
 1067              	.LCFI53:
 1068              	 .cfi_def_cfa_register 7
 1069 0006 7860     	 str r0,[r7,#4]
 1070              	.L36:
 254:../main.c     **** 
 255:../main.c     **** 	while(1){
 256:../main.c     **** 
 257:../main.c     **** 		if (xSemaphoreTake(UP_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1071              	 .loc 5 257 0
 1072 0008 1E4B     	 ldr r3,.L37
 1073 000a 1B68     	 ldr r3,[r3]
 1074 000c 1846     	 mov r0,r3
 1075 000e 4FF0FF31 	 mov r1,#-1
 1076 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1077 0016 0346     	 mov r3,r0
 1078 0018 012B     	 cmp r3,#1
 1079 001a 31D1     	 bne .L35
 258:../main.c     **** 
 259:../main.c     **** 	 	  	// sets the duty to 3%.
 260:../main.c     **** 	    	// LIFT UP
 261:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,800);
 1080              	 .loc 5 261 0
 1081 001c 1A48     	 ldr r0,.L37+4
 1082 001e 4FF44871 	 mov r1,#800
 1083 0022 FFF7FEFF 	 bl PWM_SetDutyCycle
 262:../main.c     **** 			vTaskDelay( xDelay );
 1084              	 .loc 5 262 0
 1085 0026 1423     	 movs r3,#20
 1086 0028 1846     	 mov r0,r3
 1087 002a FFF7FEFF 	 bl vTaskDelay
 263:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,700);
 1088              	 .loc 5 263 0
 1089 002e 1648     	 ldr r0,.L37+4
 1090 0030 4FF42F71 	 mov r1,#700
 1091 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 264:../main.c     **** 			vTaskDelay( xDelay );
 1092              	 .loc 5 264 0
 1093 0038 1423     	 movs r3,#20
 1094 003a 1846     	 mov r0,r3
 1095 003c FFF7FEFF 	 bl vTaskDelay
 265:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,600);
 1096              	 .loc 5 265 0
 1097 0040 1148     	 ldr r0,.L37+4
 1098 0042 4FF41671 	 mov r1,#600
 1099 0046 FFF7FEFF 	 bl PWM_SetDutyCycle
 266:../main.c     **** 			vTaskDelay( xDelay );
 1100              	 .loc 5 266 0
 1101 004a 1423     	 movs r3,#20
 1102 004c 1846     	 mov r0,r3
 1103 004e FFF7FEFF 	 bl vTaskDelay
 267:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,500);
 1104              	 .loc 5 267 0
 1105 0052 0D48     	 ldr r0,.L37+4
 1106 0054 4FF4FA71 	 mov r1,#500
 1107 0058 FFF7FEFF 	 bl PWM_SetDutyCycle
 268:../main.c     **** 			vTaskDelay( xDelay );
 1108              	 .loc 5 268 0
 1109 005c 1423     	 movs r3,#20
 1110 005e 1846     	 mov r0,r3
 1111 0060 FFF7FEFF 	 bl vTaskDelay
 269:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,400);
 1112              	 .loc 5 269 0
 1113 0064 0848     	 ldr r0,.L37+4
 1114 0066 4FF4C871 	 mov r1,#400
 1115 006a FFF7FEFF 	 bl PWM_SetDutyCycle
 270:../main.c     **** 			vTaskDelay( xDelay );
 1116              	 .loc 5 270 0
 1117 006e 1423     	 movs r3,#20
 1118 0070 1846     	 mov r0,r3
 1119 0072 FFF7FEFF 	 bl vTaskDelay
 271:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,300);
 1120              	 .loc 5 271 0
 1121 0076 0448     	 ldr r0,.L37+4
 1122 0078 4FF49671 	 mov r1,#300
 1123 007c FFF7FEFF 	 bl PWM_SetDutyCycle
 1124              	.L35:
 272:../main.c     **** 
 273:../main.c     **** 		}
 274:../main.c     **** 	}
 1125              	 .loc 5 274 0
 1126 0080 C2E7     	 b .L36
 1127              	.L38:
 1128 0082 00BF     	 .align 2
 1129              	.L37:
 1130 0084 00000000 	 .word UP_interruptSemaphore
 1131 0088 00000000 	 .word PWM_LIFT
 1132              	 .cfi_endproc
 1133              	.LFE434:
 1135              	 .section .text.DOWN_Task,"ax",%progbits
 1136              	 .align 2
 1137              	 .global DOWN_Task
 1138              	 .thumb
 1139              	 .thumb_func
 1141              	DOWN_Task:
 1142              	.LFB435:
 275:../main.c     **** }
 276:../main.c     **** 
 277:../main.c     **** void DOWN_Task(void *p){
 1143              	 .loc 5 277 0
 1144              	 .cfi_startproc
 1145              	 
 1146              	 
 1147 0000 80B5     	 push {r7,lr}
 1148              	.LCFI54:
 1149              	 .cfi_def_cfa_offset 8
 1150              	 .cfi_offset 7,-8
 1151              	 .cfi_offset 14,-4
 1152 0002 82B0     	 sub sp,sp,#8
 1153              	.LCFI55:
 1154              	 .cfi_def_cfa_offset 16
 1155 0004 00AF     	 add r7,sp,#0
 1156              	.LCFI56:
 1157              	 .cfi_def_cfa_register 7
 1158 0006 7860     	 str r0,[r7,#4]
 1159              	.L41:
 278:../main.c     **** 
 279:../main.c     **** 	while(1){
 280:../main.c     **** 
 281:../main.c     **** 		if (xSemaphoreTake(DOWN_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1160              	 .loc 5 281 0
 1161 0008 1E4B     	 ldr r3,.L42
 1162 000a 1B68     	 ldr r3,[r3]
 1163 000c 1846     	 mov r0,r3
 1164 000e 4FF0FF31 	 mov r1,#-1
 1165 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1166 0016 0346     	 mov r3,r0
 1167 0018 012B     	 cmp r3,#1
 1168 001a 31D1     	 bne .L40
 282:../main.c     **** 
 283:../main.c     **** 	 	  	// sets the duty to 9 %.
 284:../main.c     **** 	    	// LIFT DOWN
 285:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,400);
 1169              	 .loc 5 285 0
 1170 001c 1A48     	 ldr r0,.L42+4
 1171 001e 4FF4C871 	 mov r1,#400
 1172 0022 FFF7FEFF 	 bl PWM_SetDutyCycle
 286:../main.c     **** 			vTaskDelay( xDelay );
 1173              	 .loc 5 286 0
 1174 0026 1423     	 movs r3,#20
 1175 0028 1846     	 mov r0,r3
 1176 002a FFF7FEFF 	 bl vTaskDelay
 287:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,500);
 1177              	 .loc 5 287 0
 1178 002e 1648     	 ldr r0,.L42+4
 1179 0030 4FF4FA71 	 mov r1,#500
 1180 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 288:../main.c     **** 			vTaskDelay( xDelay );
 1181              	 .loc 5 288 0
 1182 0038 1423     	 movs r3,#20
 1183 003a 1846     	 mov r0,r3
 1184 003c FFF7FEFF 	 bl vTaskDelay
 289:../main.c     **** 			PWM_SetDutyCycle(&PWM_LIFT,600);
 1185              	 .loc 5 289 0
 1186 0040 1148     	 ldr r0,.L42+4
 1187 0042 4FF41671 	 mov r1,#600
 1188 0046 FFF7FEFF 	 bl PWM_SetDutyCycle
 290:../main.c     **** 			vTaskDelay( xDelay );
 1189              	 .loc 5 290 0
 1190 004a 1423     	 movs r3,#20
 1191 004c 1846     	 mov r0,r3
 1192 004e FFF7FEFF 	 bl vTaskDelay
 291:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,700);
 1193              	 .loc 5 291 0
 1194 0052 0D48     	 ldr r0,.L42+4
 1195 0054 4FF42F71 	 mov r1,#700
 1196 0058 FFF7FEFF 	 bl PWM_SetDutyCycle
 292:../main.c     **** 	    	vTaskDelay( xDelay );
 1197              	 .loc 5 292 0
 1198 005c 1423     	 movs r3,#20
 1199 005e 1846     	 mov r0,r3
 1200 0060 FFF7FEFF 	 bl vTaskDelay
 293:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,800);
 1201              	 .loc 5 293 0
 1202 0064 0848     	 ldr r0,.L42+4
 1203 0066 4FF44871 	 mov r1,#800
 1204 006a FFF7FEFF 	 bl PWM_SetDutyCycle
 294:../main.c     **** 	    	vTaskDelay( xDelay );
 1205              	 .loc 5 294 0
 1206 006e 1423     	 movs r3,#20
 1207 0070 1846     	 mov r0,r3
 1208 0072 FFF7FEFF 	 bl vTaskDelay
 295:../main.c     **** 	    	PWM_SetDutyCycle(&PWM_LIFT,900);
 1209              	 .loc 5 295 0
 1210 0076 0448     	 ldr r0,.L42+4
 1211 0078 4FF46171 	 mov r1,#900
 1212 007c FFF7FEFF 	 bl PWM_SetDutyCycle
 1213              	.L40:
 296:../main.c     **** 
 297:../main.c     **** 		}
 298:../main.c     **** 	}
 1214              	 .loc 5 298 0
 1215 0080 C2E7     	 b .L41
 1216              	.L43:
 1217 0082 00BF     	 .align 2
 1218              	.L42:
 1219 0084 00000000 	 .word DOWN_interruptSemaphore
 1220 0088 00000000 	 .word PWM_LIFT
 1221              	 .cfi_endproc
 1222              	.LFE435:
 1224              	 .section .text.OPEN_Task,"ax",%progbits
 1225              	 .align 2
 1226              	 .global OPEN_Task
 1227              	 .thumb
 1228              	 .thumb_func
 1230              	OPEN_Task:
 1231              	.LFB436:
 299:../main.c     **** }
 300:../main.c     **** 
 301:../main.c     **** void OPEN_Task(void *p){
 1232              	 .loc 5 301 0
 1233              	 .cfi_startproc
 1234              	 
 1235              	 
 1236 0000 80B5     	 push {r7,lr}
 1237              	.LCFI57:
 1238              	 .cfi_def_cfa_offset 8
 1239              	 .cfi_offset 7,-8
 1240              	 .cfi_offset 14,-4
 1241 0002 82B0     	 sub sp,sp,#8
 1242              	.LCFI58:
 1243              	 .cfi_def_cfa_offset 16
 1244 0004 00AF     	 add r7,sp,#0
 1245              	.LCFI59:
 1246              	 .cfi_def_cfa_register 7
 1247 0006 7860     	 str r0,[r7,#4]
 1248              	.L48:
 302:../main.c     **** 
 303:../main.c     **** 	while(1){
 304:../main.c     **** 
 305:../main.c     **** 		if (xSemaphoreTake(OPEN_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1249              	 .loc 5 305 0
 1250 0008 104B     	 ldr r3,.L49
 1251 000a 1B68     	 ldr r3,[r3]
 1252 000c 1846     	 mov r0,r3
 1253 000e 4FF0FF31 	 mov r1,#-1
 1254 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1255 0016 0346     	 mov r3,r0
 1256 0018 012B     	 cmp r3,#1
 1257 001a 15D1     	 bne .L45
 306:../main.c     **** 
 307:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&CLAMP_INTERRUPT);
 1258              	 .loc 5 307 0
 1259 001c 0C48     	 ldr r0,.L49+4
 1260 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1261 0022 0246     	 mov r2,r0
 1262 0024 0B4B     	 ldr r3,.L49+8
 1263 0026 1A60     	 str r2,[r3]
 308:../main.c     **** 		     if(pin_status == 1)
 1264              	 .loc 5 308 0
 1265 0028 0A4B     	 ldr r3,.L49+8
 1266 002a 1B68     	 ldr r3,[r3]
 1267 002c 012B     	 cmp r3,#1
 1268 002e 04D1     	 bne .L46
 309:../main.c     **** 		     {
 310:../main.c     **** 		 	  	// sets the duty to 2%.
 311:../main.c     **** 		    	// clamp open
 312:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,200);
 1269              	 .loc 5 312 0
 1270 0030 0948     	 ldr r0,.L49+12
 1271 0032 C821     	 movs r1,#200
 1272 0034 FFF7FEFF 	 bl PWM_SetDutyCycle
 1273 0038 03E0     	 b .L47
 1274              	.L46:
 313:../main.c     **** 		     }
 314:../main.c     **** 
 315:../main.c     **** 		     else
 316:../main.c     **** 		     {
 317:../main.c     **** 		    	 // sets the channel duty to 0%.
 318:../main.c     **** 		    	 // clamp maintain
 319:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,0);
 1275              	 .loc 5 319 0
 1276 003a 0748     	 ldr r0,.L49+12
 1277 003c 0021     	 movs r1,#0
 1278 003e FFF7FEFF 	 bl PWM_SetDutyCycle
 1279              	.L47:
 320:../main.c     **** 		     }
 321:../main.c     **** 
 322:../main.c     **** 		 	pin_status = 0;
 1280              	 .loc 5 322 0
 1281 0042 044B     	 ldr r3,.L49+8
 1282 0044 0022     	 movs r2,#0
 1283 0046 1A60     	 str r2,[r3]
 1284              	.L45:
 323:../main.c     **** 
 324:../main.c     **** 		}
 325:../main.c     **** 	}
 1285              	 .loc 5 325 0
 1286 0048 DEE7     	 b .L48
 1287              	.L50:
 1288 004a 00BF     	 .align 2
 1289              	.L49:
 1290 004c 00000000 	 .word OPEN_interruptSemaphore
 1291 0050 00000000 	 .word CLAMP_INTERRUPT
 1292 0054 00000000 	 .word pin_status
 1293 0058 00000000 	 .word PWM_CLAMP
 1294              	 .cfi_endproc
 1295              	.LFE436:
 1297              	 .section .text.CLOSE_Task,"ax",%progbits
 1298              	 .align 2
 1299              	 .global CLOSE_Task
 1300              	 .thumb
 1301              	 .thumb_func
 1303              	CLOSE_Task:
 1304              	.LFB437:
 326:../main.c     **** }
 327:../main.c     **** 
 328:../main.c     **** void CLOSE_Task(void *p){
 1305              	 .loc 5 328 0
 1306              	 .cfi_startproc
 1307              	 
 1308              	 
 1309 0000 80B5     	 push {r7,lr}
 1310              	.LCFI60:
 1311              	 .cfi_def_cfa_offset 8
 1312              	 .cfi_offset 7,-8
 1313              	 .cfi_offset 14,-4
 1314 0002 82B0     	 sub sp,sp,#8
 1315              	.LCFI61:
 1316              	 .cfi_def_cfa_offset 16
 1317 0004 00AF     	 add r7,sp,#0
 1318              	.LCFI62:
 1319              	 .cfi_def_cfa_register 7
 1320 0006 7860     	 str r0,[r7,#4]
 1321              	.L54:
 329:../main.c     **** 
 330:../main.c     **** 	while(1){
 331:../main.c     **** 
 332:../main.c     **** 		if (xSemaphoreTake(CLOSE_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1322              	 .loc 5 332 0
 1323 0008 0E4B     	 ldr r3,.L55
 1324 000a 1B68     	 ldr r3,[r3]
 1325 000c 1846     	 mov r0,r3
 1326 000e 4FF0FF31 	 mov r1,#-1
 1327 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1328 0016 0346     	 mov r3,r0
 1329 0018 012B     	 cmp r3,#1
 1330 001a 11D1     	 bne .L52
 333:../main.c     **** 
 334:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&CLAMP_INTERRUPT);
 1331              	 .loc 5 334 0
 1332 001c 0A48     	 ldr r0,.L55+4
 1333 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1334 0022 0246     	 mov r2,r0
 1335 0024 094B     	 ldr r3,.L55+8
 1336 0026 1A60     	 str r2,[r3]
 335:../main.c     **** 		     if(pin_status == 1)
 1337              	 .loc 5 335 0
 1338 0028 084B     	 ldr r3,.L55+8
 1339 002a 1B68     	 ldr r3,[r3]
 1340 002c 012B     	 cmp r3,#1
 1341 002e 04D1     	 bne .L53
 336:../main.c     **** 		     {
 337:../main.c     **** 		 	  	// sets the duty to 9%.
 338:../main.c     **** 		    	// clamp CLOSE
 339:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,900);
 1342              	 .loc 5 339 0
 1343 0030 0748     	 ldr r0,.L55+12
 1344 0032 4FF46171 	 mov r1,#900
 1345 0036 FFF7FEFF 	 bl PWM_SetDutyCycle
 1346              	.L53:
 340:../main.c     **** 		     }
 341:../main.c     **** 
 342:../main.c     **** //		     else
 343:../main.c     **** //		     {
 344:../main.c     **** //		    	 // sets the channel duty to 9%.
 345:../main.c     **** //		    	 // clamp maintain
 346:../main.c     **** //		    	 PWM_SetDutyCycle(&PWM_CLAMP,900);
 347:../main.c     **** //		     }
 348:../main.c     **** 
 349:../main.c     **** 		 	pin_status = 0;
 1347              	 .loc 5 349 0
 1348 003a 044B     	 ldr r3,.L55+8
 1349 003c 0022     	 movs r2,#0
 1350 003e 1A60     	 str r2,[r3]
 1351              	.L52:
 350:../main.c     **** 
 351:../main.c     **** 		}
 352:../main.c     **** 	}
 1352              	 .loc 5 352 0
 1353 0040 E2E7     	 b .L54
 1354              	.L56:
 1355 0042 00BF     	 .align 2
 1356              	.L55:
 1357 0044 00000000 	 .word CLOSE_interruptSemaphore
 1358 0048 00000000 	 .word CLAMP_INTERRUPT
 1359 004c 00000000 	 .word pin_status
 1360 0050 00000000 	 .word PWM_CLAMP
 1361              	 .cfi_endproc
 1362              	.LFE437:
 1364              	 .section .text.HOLD_Task,"ax",%progbits
 1365              	 .align 2
 1366              	 .global HOLD_Task
 1367              	 .thumb
 1368              	 .thumb_func
 1370              	HOLD_Task:
 1371              	.LFB438:
 353:../main.c     **** }
 354:../main.c     **** 
 355:../main.c     **** void HOLD_Task(void *p){
 1372              	 .loc 5 355 0
 1373              	 .cfi_startproc
 1374              	 
 1375              	 
 1376 0000 80B5     	 push {r7,lr}
 1377              	.LCFI63:
 1378              	 .cfi_def_cfa_offset 8
 1379              	 .cfi_offset 7,-8
 1380              	 .cfi_offset 14,-4
 1381 0002 82B0     	 sub sp,sp,#8
 1382              	.LCFI64:
 1383              	 .cfi_def_cfa_offset 16
 1384 0004 00AF     	 add r7,sp,#0
 1385              	.LCFI65:
 1386              	 .cfi_def_cfa_register 7
 1387 0006 7860     	 str r0,[r7,#4]
 1388              	.L60:
 356:../main.c     **** 
 357:../main.c     **** 	while(1){
 358:../main.c     **** 
 359:../main.c     **** 		if (xSemaphoreTake(HOLD_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1389              	 .loc 5 359 0
 1390 0008 0E4B     	 ldr r3,.L61
 1391 000a 1B68     	 ldr r3,[r3]
 1392 000c 1846     	 mov r0,r3
 1393 000e 4FF0FF31 	 mov r1,#-1
 1394 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1395 0016 0346     	 mov r3,r0
 1396 0018 012B     	 cmp r3,#1
 1397 001a 11D1     	 bne .L58
 360:../main.c     **** 
 361:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&HOLD_INTERRUPT);
 1398              	 .loc 5 361 0
 1399 001c 0A48     	 ldr r0,.L61+4
 1400 001e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1401 0022 0246     	 mov r2,r0
 1402 0024 094B     	 ldr r3,.L61+8
 1403 0026 1A60     	 str r2,[r3]
 362:../main.c     **** 		     if(pin_status == 1)
 1404              	 .loc 5 362 0
 1405 0028 084B     	 ldr r3,.L61+8
 1406 002a 1B68     	 ldr r3,[r3]
 1407 002c 012B     	 cmp r3,#1
 1408 002e 04D1     	 bne .L59
 363:../main.c     **** 		     {
 364:../main.c     **** 		    	 // sets the channel duty to 8%.
 365:../main.c     **** 		    	 // clamp maintain
 366:../main.c     **** 		    	 PWM_SetDutyCycle(&PWM_CLAMP,800);
 1409              	 .loc 5 366 0
 1410 0030 0748     	 ldr r0,.L61+12
 1411 0032 4FF44871 	 mov r1,#800
 1412 0036 FFF7FEFF 	 bl PWM_SetDutyCycle
 1413              	.L59:
 367:../main.c     **** 		     }
 368:../main.c     **** 
 369:../main.c     **** 		 	pin_status = 0;
 1414              	 .loc 5 369 0
 1415 003a 044B     	 ldr r3,.L61+8
 1416 003c 0022     	 movs r2,#0
 1417 003e 1A60     	 str r2,[r3]
 1418              	.L58:
 370:../main.c     **** 
 371:../main.c     **** 		}
 372:../main.c     **** 	}
 1419              	 .loc 5 372 0
 1420 0040 E2E7     	 b .L60
 1421              	.L62:
 1422 0042 00BF     	 .align 2
 1423              	.L61:
 1424 0044 00000000 	 .word HOLD_interruptSemaphore
 1425 0048 00000000 	 .word HOLD_INTERRUPT
 1426 004c 00000000 	 .word pin_status
 1427 0050 00000000 	 .word PWM_CLAMP
 1428              	 .cfi_endproc
 1429              	.LFE438:
 1431              	 .section .text.ROTATE_Task,"ax",%progbits
 1432              	 .align 2
 1433              	 .global ROTATE_Task
 1434              	 .thumb
 1435              	 .thumb_func
 1437              	ROTATE_Task:
 1438              	.LFB439:
 373:../main.c     **** }
 374:../main.c     **** 
 375:../main.c     **** void ROTATE_Task(void *p){
 1439              	 .loc 5 375 0
 1440              	 .cfi_startproc
 1441              	 
 1442              	 
 1443 0000 80B5     	 push {r7,lr}
 1444              	.LCFI66:
 1445              	 .cfi_def_cfa_offset 8
 1446              	 .cfi_offset 7,-8
 1447              	 .cfi_offset 14,-4
 1448 0002 82B0     	 sub sp,sp,#8
 1449              	.LCFI67:
 1450              	 .cfi_def_cfa_offset 16
 1451 0004 00AF     	 add r7,sp,#0
 1452              	.LCFI68:
 1453              	 .cfi_def_cfa_register 7
 1454 0006 7860     	 str r0,[r7,#4]
 1455              	.L66:
 376:../main.c     **** 
 377:../main.c     **** 	while(1){
 378:../main.c     **** 
 379:../main.c     **** 		if (xSemaphoreTake(ROTATE_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1456              	 .loc 5 379 0
 1457 0008 464B     	 ldr r3,.L67
 1458 000a 1B68     	 ldr r3,[r3]
 1459 000c 1846     	 mov r0,r3
 1460 000e 4FF0FF31 	 mov r1,#-1
 1461 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1462 0016 0346     	 mov r3,r0
 1463 0018 012B     	 cmp r3,#1
 1464 001a 40F08180 	 bne .L64
 380:../main.c     **** 
 381:../main.c     **** 			pin_status = PIN_INTERRUPT_GetPinValue(&ROTATE_INTERRUPT);
 1465              	 .loc 5 381 0
 1466 001e 4248     	 ldr r0,.L67+4
 1467 0020 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 1468 0024 0246     	 mov r2,r0
 1469 0026 414B     	 ldr r3,.L67+8
 1470 0028 1A60     	 str r2,[r3]
 382:../main.c     **** 		     if(pin_status == 1)
 1471              	 .loc 5 382 0
 1472 002a 404B     	 ldr r3,.L67+8
 1473 002c 1B68     	 ldr r3,[r3]
 1474 002e 012B     	 cmp r3,#1
 1475 0030 3FD1     	 bne .L65
 383:../main.c     **** 		     {
 384:../main.c     **** 				 BUS_IO_Write(&LED_BUS_IO, green_led);	//LED INDICATOR
 1476              	 .loc 5 384 0
 1477 0032 FF23     	 movs r3,#255
 1478 0034 3E48     	 ldr r0,.L67+12
 1479 0036 1946     	 mov r1,r3
 1480 0038 FFF7FEFF 	 bl BUS_IO_Write
 385:../main.c     **** 				// sets the duty to 3%.
 386:../main.c     **** 				// Metal
 387:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,800);
 1481              	 .loc 5 387 0
 1482 003c 3D48     	 ldr r0,.L67+16
 1483 003e 4FF44871 	 mov r1,#800
 1484 0042 FFF7FEFF 	 bl PWM_SetDutyCycle
 388:../main.c     **** 				vTaskDelay( xDelay );
 1485              	 .loc 5 388 0
 1486 0046 1423     	 movs r3,#20
 1487 0048 1846     	 mov r0,r3
 1488 004a FFF7FEFF 	 bl vTaskDelay
 389:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,700);
 1489              	 .loc 5 389 0
 1490 004e 3948     	 ldr r0,.L67+16
 1491 0050 4FF42F71 	 mov r1,#700
 1492 0054 FFF7FEFF 	 bl PWM_SetDutyCycle
 390:../main.c     **** 				vTaskDelay( xDelay );
 1493              	 .loc 5 390 0
 1494 0058 1423     	 movs r3,#20
 1495 005a 1846     	 mov r0,r3
 1496 005c FFF7FEFF 	 bl vTaskDelay
 391:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,600);
 1497              	 .loc 5 391 0
 1498 0060 3448     	 ldr r0,.L67+16
 1499 0062 4FF41671 	 mov r1,#600
 1500 0066 FFF7FEFF 	 bl PWM_SetDutyCycle
 392:../main.c     **** 				vTaskDelay( xDelay );
 1501              	 .loc 5 392 0
 1502 006a 1423     	 movs r3,#20
 1503 006c 1846     	 mov r0,r3
 1504 006e FFF7FEFF 	 bl vTaskDelay
 393:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,500);
 1505              	 .loc 5 393 0
 1506 0072 3048     	 ldr r0,.L67+16
 1507 0074 4FF4FA71 	 mov r1,#500
 1508 0078 FFF7FEFF 	 bl PWM_SetDutyCycle
 394:../main.c     **** 				vTaskDelay( xDelay );
 1509              	 .loc 5 394 0
 1510 007c 1423     	 movs r3,#20
 1511 007e 1846     	 mov r0,r3
 1512 0080 FFF7FEFF 	 bl vTaskDelay
 395:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,400);
 1513              	 .loc 5 395 0
 1514 0084 2B48     	 ldr r0,.L67+16
 1515 0086 4FF4C871 	 mov r1,#400
 1516 008a FFF7FEFF 	 bl PWM_SetDutyCycle
 396:../main.c     **** 				vTaskDelay( xDelay );
 1517              	 .loc 5 396 0
 1518 008e 1423     	 movs r3,#20
 1519 0090 1846     	 mov r0,r3
 1520 0092 FFF7FEFF 	 bl vTaskDelay
 397:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,300);
 1521              	 .loc 5 397 0
 1522 0096 2748     	 ldr r0,.L67+16
 1523 0098 4FF49671 	 mov r1,#300
 1524 009c FFF7FEFF 	 bl PWM_SetDutyCycle
 398:../main.c     **** 				vTaskDelay( xDelay );
 1525              	 .loc 5 398 0
 1526 00a0 1423     	 movs r3,#20
 1527 00a2 1846     	 mov r0,r3
 1528 00a4 FFF7FEFF 	 bl vTaskDelay
 399:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,200);
 1529              	 .loc 5 399 0
 1530 00a8 2248     	 ldr r0,.L67+16
 1531 00aa C821     	 movs r1,#200
 1532 00ac FFF7FEFF 	 bl PWM_SetDutyCycle
 1533 00b0 36E0     	 b .L64
 1534              	.L65:
 400:../main.c     **** 
 401:../main.c     **** 		     }
 402:../main.c     **** 
 403:../main.c     **** 		     else
 404:../main.c     **** 		     {
 405:../main.c     **** 		    	 BUS_IO_Write(&LED_BUS_IO, red_led);	//LED INDICATOR
 1535              	 .loc 5 405 0
 1536 00b2 0023     	 movs r3,#0
 1537 00b4 1E48     	 ldr r0,.L67+12
 1538 00b6 1946     	 mov r1,r3
 1539 00b8 FFF7FEFF 	 bl BUS_IO_Write
 406:../main.c     **** 				// sets the duty to 10 %.
 407:../main.c     **** 				// NON-metal
 408:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,400);
 1540              	 .loc 5 408 0
 1541 00bc 1D48     	 ldr r0,.L67+16
 1542 00be 4FF4C871 	 mov r1,#400
 1543 00c2 FFF7FEFF 	 bl PWM_SetDutyCycle
 409:../main.c     **** 				vTaskDelay( xDelay );
 1544              	 .loc 5 409 0
 1545 00c6 1423     	 movs r3,#20
 1546 00c8 1846     	 mov r0,r3
 1547 00ca FFF7FEFF 	 bl vTaskDelay
 410:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,500);
 1548              	 .loc 5 410 0
 1549 00ce 1948     	 ldr r0,.L67+16
 1550 00d0 4FF4FA71 	 mov r1,#500
 1551 00d4 FFF7FEFF 	 bl PWM_SetDutyCycle
 411:../main.c     **** 				vTaskDelay( xDelay );
 1552              	 .loc 5 411 0
 1553 00d8 1423     	 movs r3,#20
 1554 00da 1846     	 mov r0,r3
 1555 00dc FFF7FEFF 	 bl vTaskDelay
 412:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,600);
 1556              	 .loc 5 412 0
 1557 00e0 1448     	 ldr r0,.L67+16
 1558 00e2 4FF41671 	 mov r1,#600
 1559 00e6 FFF7FEFF 	 bl PWM_SetDutyCycle
 413:../main.c     **** 				vTaskDelay( xDelay );
 1560              	 .loc 5 413 0
 1561 00ea 1423     	 movs r3,#20
 1562 00ec 1846     	 mov r0,r3
 1563 00ee FFF7FEFF 	 bl vTaskDelay
 414:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,700);
 1564              	 .loc 5 414 0
 1565 00f2 1048     	 ldr r0,.L67+16
 1566 00f4 4FF42F71 	 mov r1,#700
 1567 00f8 FFF7FEFF 	 bl PWM_SetDutyCycle
 415:../main.c     **** 				vTaskDelay( xDelay );
 1568              	 .loc 5 415 0
 1569 00fc 1423     	 movs r3,#20
 1570 00fe 1846     	 mov r0,r3
 1571 0100 FFF7FEFF 	 bl vTaskDelay
 416:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,800);
 1572              	 .loc 5 416 0
 1573 0104 0B48     	 ldr r0,.L67+16
 1574 0106 4FF44871 	 mov r1,#800
 1575 010a FFF7FEFF 	 bl PWM_SetDutyCycle
 417:../main.c     **** 				vTaskDelay( xDelay );
 1576              	 .loc 5 417 0
 1577 010e 1423     	 movs r3,#20
 1578 0110 1846     	 mov r0,r3
 1579 0112 FFF7FEFF 	 bl vTaskDelay
 418:../main.c     **** 				PWM_SetDutyCycle(&PWM_ROTATE,900);
 1580              	 .loc 5 418 0
 1581 0116 0748     	 ldr r0,.L67+16
 1582 0118 4FF46171 	 mov r1,#900
 1583 011c FFF7FEFF 	 bl PWM_SetDutyCycle
 1584              	.L64:
 419:../main.c     **** 
 420:../main.c     **** 		     }
 421:../main.c     **** 		}
 422:../main.c     **** 	}
 1585              	 .loc 5 422 0
 1586 0120 72E7     	 b .L66
 1587              	.L68:
 1588 0122 00BF     	 .align 2
 1589              	.L67:
 1590 0124 00000000 	 .word ROTATE_interruptSemaphore
 1591 0128 00000000 	 .word ROTATE_INTERRUPT
 1592 012c 00000000 	 .word pin_status
 1593 0130 00000000 	 .word LED_BUS_IO
 1594 0134 00000000 	 .word PWM_ROTATE
 1595              	 .cfi_endproc
 1596              	.LFE439:
 1598              	 .section .text.DIRECTION_Task,"ax",%progbits
 1599              	 .align 2
 1600              	 .global DIRECTION_Task
 1601              	 .thumb
 1602              	 .thumb_func
 1604              	DIRECTION_Task:
 1605              	.LFB440:
 423:../main.c     **** }
 424:../main.c     **** 
 425:../main.c     **** void DIRECTION_Task(void *p){
 1606              	 .loc 5 425 0
 1607              	 .cfi_startproc
 1608              	 
 1609              	 
 1610 0000 80B5     	 push {r7,lr}
 1611              	.LCFI69:
 1612              	 .cfi_def_cfa_offset 8
 1613              	 .cfi_offset 7,-8
 1614              	 .cfi_offset 14,-4
 1615 0002 82B0     	 sub sp,sp,#8
 1616              	.LCFI70:
 1617              	 .cfi_def_cfa_offset 16
 1618 0004 00AF     	 add r7,sp,#0
 1619              	.LCFI71:
 1620              	 .cfi_def_cfa_register 7
 1621 0006 7860     	 str r0,[r7,#4]
 1622              	.L76:
 426:../main.c     **** 
 427:../main.c     **** 	while(1){
 428:../main.c     **** 
 429:../main.c     **** 		if (xSemaphoreTake(DIRECTION_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1623              	 .loc 5 429 0
 1624 0008 1F4B     	 ldr r3,.L77
 1625 000a 1B68     	 ldr r3,[r3]
 1626 000c 1846     	 mov r0,r3
 1627 000e 4FF0FF31 	 mov r1,#-1
 1628 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1629 0016 0346     	 mov r3,r0
 1630 0018 012B     	 cmp r3,#1
 1631 001a 33D1     	 bne .L70
 430:../main.c     **** 
 431:../main.c     **** 			direction_status = BUS_IO_Read(&DIRECTION_BUS_IO);
 1632              	 .loc 5 431 0
 1633 001c 1B48     	 ldr r0,.L77+4
 1634 001e FFF7FEFF 	 bl BUS_IO_Read
 1635 0022 0346     	 mov r3,r0
 1636 0024 1A46     	 mov r2,r3
 1637 0026 1A4B     	 ldr r3,.L77+8
 1638 0028 1A80     	 strh r2,[r3]
 432:../main.c     **** 
 433:../main.c     **** 			switch(direction_status){
 1639              	 .loc 5 433 0
 1640 002a 194B     	 ldr r3,.L77+8
 1641 002c 1B88     	 ldrh r3,[r3]
 1642 002e 9BB2     	 uxth r3,r3
 1643 0030 032B     	 cmp r3,#3
 1644 0032 E9D8     	 bhi .L76
 1645 0034 01A2     	 adr r2,.L72
 1646 0036 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1647 003a 00BF     	 .p2align 2
 1648              	.L72:
 1649 003c 4D000000 	 .word .L71+1
 1650 0040 5B000000 	 .word .L73+1
 1651 0044 69000000 	 .word .L74+1
 1652 0048 77000000 	 .word .L75+1
 1653              	 .p2align 1
 1654              	.L71:
 434:../main.c     **** 
 435:../main.c     **** 			case 0:
 436:../main.c     **** 				xSemaphoreGiveFromISR(FORWARD_interruptSemaphore, NULL);
 1655              	 .loc 5 436 0
 1656 004c 114B     	 ldr r3,.L77+12
 1657 004e 1B68     	 ldr r3,[r3]
 1658 0050 1846     	 mov r0,r3
 1659 0052 0021     	 movs r1,#0
 1660 0054 FFF7FEFF 	 bl xQueueGiveFromISR
 437:../main.c     **** 				break;
 1661              	 .loc 5 437 0
 1662 0058 14E0     	 b .L70
 1663              	.L73:
 438:../main.c     **** 
 439:../main.c     **** 			case 1:
 440:../main.c     **** 				xSemaphoreGiveFromISR(BACKWARD_interruptSemaphore, NULL);
 1664              	 .loc 5 440 0
 1665 005a 0F4B     	 ldr r3,.L77+16
 1666 005c 1B68     	 ldr r3,[r3]
 1667 005e 1846     	 mov r0,r3
 1668 0060 0021     	 movs r1,#0
 1669 0062 FFF7FEFF 	 bl xQueueGiveFromISR
 441:../main.c     **** 				break;
 1670              	 .loc 5 441 0
 1671 0066 0DE0     	 b .L70
 1672              	.L74:
 442:../main.c     **** 
 443:../main.c     **** 			case 2:
 444:../main.c     **** 				xSemaphoreGiveFromISR(LEFT_interruptSemaphore, NULL);
 1673              	 .loc 5 444 0
 1674 0068 0C4B     	 ldr r3,.L77+20
 1675 006a 1B68     	 ldr r3,[r3]
 1676 006c 1846     	 mov r0,r3
 1677 006e 0021     	 movs r1,#0
 1678 0070 FFF7FEFF 	 bl xQueueGiveFromISR
 445:../main.c     **** 				break;
 1679              	 .loc 5 445 0
 1680 0074 06E0     	 b .L70
 1681              	.L75:
 446:../main.c     **** 
 447:../main.c     **** 			case 3:
 448:../main.c     **** 				xSemaphoreGiveFromISR(RIGHT_interruptSemaphore, NULL);
 1682              	 .loc 5 448 0
 1683 0076 0A4B     	 ldr r3,.L77+24
 1684 0078 1B68     	 ldr r3,[r3]
 1685 007a 1846     	 mov r0,r3
 1686 007c 0021     	 movs r1,#0
 1687 007e FFF7FEFF 	 bl xQueueGiveFromISR
 449:../main.c     **** 				break;
 1688              	 .loc 5 449 0
 1689 0082 00BF     	 nop
 1690              	.L70:
 450:../main.c     **** 
 451:../main.c     **** 			}
 452:../main.c     **** 		}
 453:../main.c     **** 	}
 1691              	 .loc 5 453 0
 1692 0084 C0E7     	 b .L76
 1693              	.L78:
 1694 0086 00BF     	 .align 2
 1695              	.L77:
 1696 0088 00000000 	 .word DIRECTION_interruptSemaphore
 1697 008c 00000000 	 .word DIRECTION_BUS_IO
 1698 0090 00000000 	 .word direction_status
 1699 0094 00000000 	 .word FORWARD_interruptSemaphore
 1700 0098 00000000 	 .word BACKWARD_interruptSemaphore
 1701 009c 00000000 	 .word LEFT_interruptSemaphore
 1702 00a0 00000000 	 .word RIGHT_interruptSemaphore
 1703              	 .cfi_endproc
 1704              	.LFE440:
 1706              	 .section .text.CLAMP_Task,"ax",%progbits
 1707              	 .align 2
 1708              	 .global CLAMP_Task
 1709              	 .thumb
 1710              	 .thumb_func
 1712              	CLAMP_Task:
 1713              	.LFB441:
 454:../main.c     **** }
 455:../main.c     **** 
 456:../main.c     **** void CLAMP_Task(void *p){
 1714              	 .loc 5 456 0
 1715              	 .cfi_startproc
 1716              	 
 1717              	 
 1718 0000 80B5     	 push {r7,lr}
 1719              	.LCFI72:
 1720              	 .cfi_def_cfa_offset 8
 1721              	 .cfi_offset 7,-8
 1722              	 .cfi_offset 14,-4
 1723 0002 82B0     	 sub sp,sp,#8
 1724              	.LCFI73:
 1725              	 .cfi_def_cfa_offset 16
 1726 0004 00AF     	 add r7,sp,#0
 1727              	.LCFI74:
 1728              	 .cfi_def_cfa_register 7
 1729 0006 7860     	 str r0,[r7,#4]
 1730              	.L86:
 457:../main.c     **** 
 458:../main.c     **** 	while(1){
 459:../main.c     **** 
 460:../main.c     **** 		if (xSemaphoreTake(CLAMP_interruptSemaphore, portMAX_DELAY) == pdPASS){
 1731              	 .loc 5 460 0
 1732 0008 1F4B     	 ldr r3,.L87
 1733 000a 1B68     	 ldr r3,[r3]
 1734 000c 1846     	 mov r0,r3
 1735 000e 4FF0FF31 	 mov r1,#-1
 1736 0012 FFF7FEFF 	 bl xQueueSemaphoreTake
 1737 0016 0346     	 mov r3,r0
 1738 0018 012B     	 cmp r3,#1
 1739 001a 33D1     	 bne .L80
 461:../main.c     **** 
 462:../main.c     **** 			clamp_status = BUS_IO_Read(&CLAMP_BUS_IO);
 1740              	 .loc 5 462 0
 1741 001c 1B48     	 ldr r0,.L87+4
 1742 001e FFF7FEFF 	 bl BUS_IO_Read
 1743 0022 0346     	 mov r3,r0
 1744 0024 1A46     	 mov r2,r3
 1745 0026 1A4B     	 ldr r3,.L87+8
 1746 0028 1A80     	 strh r2,[r3]
 463:../main.c     **** 
 464:../main.c     **** 			switch(clamp_status){
 1747              	 .loc 5 464 0
 1748 002a 194B     	 ldr r3,.L87+8
 1749 002c 1B88     	 ldrh r3,[r3]
 1750 002e 9BB2     	 uxth r3,r3
 1751 0030 032B     	 cmp r3,#3
 1752 0032 E9D8     	 bhi .L86
 1753 0034 01A2     	 adr r2,.L82
 1754 0036 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1755 003a 00BF     	 .p2align 2
 1756              	.L82:
 1757 003c 4D000000 	 .word .L81+1
 1758 0040 5B000000 	 .word .L83+1
 1759 0044 69000000 	 .word .L84+1
 1760 0048 77000000 	 .word .L85+1
 1761              	 .p2align 1
 1762              	.L81:
 465:../main.c     **** 
 466:../main.c     **** 			case 0:
 467:../main.c     **** 				xSemaphoreGiveFromISR(UP_interruptSemaphore, NULL);
 1763              	 .loc 5 467 0
 1764 004c 114B     	 ldr r3,.L87+12
 1765 004e 1B68     	 ldr r3,[r3]
 1766 0050 1846     	 mov r0,r3
 1767 0052 0021     	 movs r1,#0
 1768 0054 FFF7FEFF 	 bl xQueueGiveFromISR
 468:../main.c     **** 				break;
 1769              	 .loc 5 468 0
 1770 0058 14E0     	 b .L80
 1771              	.L83:
 469:../main.c     **** 
 470:../main.c     **** 			case 1:
 471:../main.c     **** 				xSemaphoreGiveFromISR(DOWN_interruptSemaphore, NULL);
 1772              	 .loc 5 471 0
 1773 005a 0F4B     	 ldr r3,.L87+16
 1774 005c 1B68     	 ldr r3,[r3]
 1775 005e 1846     	 mov r0,r3
 1776 0060 0021     	 movs r1,#0
 1777 0062 FFF7FEFF 	 bl xQueueGiveFromISR
 472:../main.c     **** 				break;
 1778              	 .loc 5 472 0
 1779 0066 0DE0     	 b .L80
 1780              	.L84:
 473:../main.c     **** 
 474:../main.c     **** 			case 2:
 475:../main.c     **** 				xSemaphoreGiveFromISR(OPEN_interruptSemaphore, NULL);
 1781              	 .loc 5 475 0
 1782 0068 0C4B     	 ldr r3,.L87+20
 1783 006a 1B68     	 ldr r3,[r3]
 1784 006c 1846     	 mov r0,r3
 1785 006e 0021     	 movs r1,#0
 1786 0070 FFF7FEFF 	 bl xQueueGiveFromISR
 476:../main.c     **** 				break;
 1787              	 .loc 5 476 0
 1788 0074 06E0     	 b .L80
 1789              	.L85:
 477:../main.c     **** 
 478:../main.c     **** 			case 3:
 479:../main.c     **** 				xSemaphoreGiveFromISR(CLOSE_interruptSemaphore, NULL);
 1790              	 .loc 5 479 0
 1791 0076 0A4B     	 ldr r3,.L87+24
 1792 0078 1B68     	 ldr r3,[r3]
 1793 007a 1846     	 mov r0,r3
 1794 007c 0021     	 movs r1,#0
 1795 007e FFF7FEFF 	 bl xQueueGiveFromISR
 480:../main.c     **** 				break;
 1796              	 .loc 5 480 0
 1797 0082 00BF     	 nop
 1798              	.L80:
 481:../main.c     **** 
 482:../main.c     **** 			}
 483:../main.c     **** 		}
 484:../main.c     **** 	}
 1799              	 .loc 5 484 0
 1800 0084 C0E7     	 b .L86
 1801              	.L88:
 1802 0086 00BF     	 .align 2
 1803              	.L87:
 1804 0088 00000000 	 .word CLAMP_interruptSemaphore
 1805 008c 00000000 	 .word CLAMP_BUS_IO
 1806 0090 00000000 	 .word clamp_status
 1807 0094 00000000 	 .word UP_interruptSemaphore
 1808 0098 00000000 	 .word DOWN_interruptSemaphore
 1809 009c 00000000 	 .word OPEN_interruptSemaphore
 1810 00a0 00000000 	 .word CLOSE_interruptSemaphore
 1811              	 .cfi_endproc
 1812              	.LFE441:
 1814              	 .section .rodata
 1815              	 .align 2
 1816              	.LC0:
 1817 0000 464F5257 	 .ascii "FORWARD\000"
 1817      41524400 
 1818              	 .align 2
 1819              	.LC1:
 1820 0008 4241434B 	 .ascii "BACKWARD\000"
 1820      57415244 
 1820      00
 1821 0011 000000   	 .align 2
 1822              	.LC2:
 1823 0014 4C454654 	 .ascii "LEFT\000"
 1823      00
 1824 0019 000000   	 .align 2
 1825              	.LC3:
 1826 001c 52494748 	 .ascii "RIGHT\000"
 1826      5400
 1827 0022 0000     	 .align 2
 1828              	.LC4:
 1829 0024 555000   	 .ascii "UP\000"
 1830 0027 00       	 .align 2
 1831              	.LC5:
 1832 0028 444F574E 	 .ascii "DOWN\000"
 1832      00
 1833 002d 000000   	 .align 2
 1834              	.LC6:
 1835 0030 4F50454E 	 .ascii "OPEN\000"
 1835      00
 1836 0035 000000   	 .align 2
 1837              	.LC7:
 1838 0038 434C4F53 	 .ascii "CLOSE\000"
 1838      4500
 1839 003e 0000     	 .align 2
 1840              	.LC8:
 1841 0040 484F4C44 	 .ascii "HOLD\000"
 1841      00
 1842 0045 000000   	 .align 2
 1843              	.LC9:
 1844 0048 524F5441 	 .ascii "ROTATE\000"
 1844      544500
 1845 004f 00       	 .align 2
 1846              	.LC10:
 1847 0050 44495245 	 .ascii "DIRECTION\000"
 1847      4354494F 
 1847      4E00
 1848 005a 0000     	 .align 2
 1849              	.LC11:
 1850 005c 434C414D 	 .ascii "CLAMP\000"
 1850      5000
 1851 0062 0000     	 .section .text.main,"ax",%progbits
 1852              	 .align 2
 1853              	 .global main
 1854              	 .thumb
 1855              	 .thumb_func
 1857              	main:
 1858              	.LFB442:
 485:../main.c     **** }
 486:../main.c     **** 
 487:../main.c     **** int main(void)
 488:../main.c     **** {
 1859              	 .loc 5 488 0
 1860              	 .cfi_startproc
 1861              	 
 1862              	 
 1863 0000 80B5     	 push {r7,lr}
 1864              	.LCFI75:
 1865              	 .cfi_def_cfa_offset 8
 1866              	 .cfi_offset 7,-8
 1867              	 .cfi_offset 14,-4
 1868 0002 84B0     	 sub sp,sp,#16
 1869              	.LCFI76:
 1870              	 .cfi_def_cfa_offset 24
 1871 0004 02AF     	 add r7,sp,#8
 1872              	.LCFI77:
 1873              	 .cfi_def_cfa 7,16
 489:../main.c     ****   DAVE_STATUS_t status;
 490:../main.c     **** 
 491:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1874              	 .loc 5 491 0
 1875 0006 FFF7FEFF 	 bl DAVE_Init
 1876 000a 0346     	 mov r3,r0
 1877 000c FB71     	 strb r3,[r7,#7]
 492:../main.c     **** 
 493:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 1878              	 .loc 5 493 0
 1879 000e FB79     	 ldrb r3,[r7,#7]
 1880 0010 002B     	 cmp r3,#0
 1881 0012 00D0     	 beq .L90
 1882              	.L91:
 494:../main.c     ****   {
 495:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 496:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 497:../main.c     **** 
 498:../main.c     ****     while(1U)
 499:../main.c     ****     {
 500:../main.c     **** 
 501:../main.c     ****     }
 1883              	 .loc 5 501 0 discriminator 1
 1884 0014 FEE7     	 b .L91
 1885              	.L90:
 502:../main.c     ****   }
 503:../main.c     **** 
 504:../main.c     **** 	// LIFT DOWN
 505:../main.c     **** 	 PWM_SetDutyCycle(&PWM_LIFT,900);
 1886              	 .loc 5 505 0
 1887 0016 7748     	 ldr r0,.L93
 1888 0018 4FF46171 	 mov r1,#900
 1889 001c FFF7FEFF 	 bl PWM_SetDutyCycle
 506:../main.c     **** 	 PWM_SetDutyCycle(&PWM_ROTATE,200);
 1890              	 .loc 5 506 0
 1891 0020 7548     	 ldr r0,.L93+4
 1892 0022 C821     	 movs r1,#200
 1893 0024 FFF7FEFF 	 bl PWM_SetDutyCycle
 507:../main.c     **** 
 508:../main.c     **** 	 BUS_IO_Write(&LED_BUS_IO, red_led);	//LED INDICATOR
 1894              	 .loc 5 508 0
 1895 0028 0023     	 movs r3,#0
 1896 002a 7448     	 ldr r0,.L93+8
 1897 002c 1946     	 mov r1,r3
 1898 002e FFF7FEFF 	 bl BUS_IO_Write
 509:../main.c     **** 	 DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 1899              	 .loc 5 509 0
 1900 0032 7348     	 ldr r0,.L93+12
 1901 0034 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 510:../main.c     **** 
 511:../main.c     **** 
 512:../main.c     **** 	// ENABLE DC Motor Shield
 513:../main.c     **** 	TLE94112EL_Enable(&TLE94112EL_0);
 1902              	 .loc 5 513 0
 1903 0038 7248     	 ldr r0,.L93+16
 1904 003a FFF7FEFF 	 bl TLE94112EL_Enable
 514:../main.c     **** 
 515:../main.c     **** 	// Initialize the FreeRTOS
 516:../main.c     **** 	xTaskCreate(FORWARD_Task, "FORWARD", 200, NULL, tskIDLE_PRIORITY, &FORWARD_Handle);
 1905              	 .loc 5 516 0
 1906 003e 0023     	 movs r3,#0
 1907 0040 0093     	 str r3,[sp]
 1908 0042 714B     	 ldr r3,.L93+20
 1909 0044 0193     	 str r3,[sp,#4]
 1910 0046 7148     	 ldr r0,.L93+24
 1911 0048 7149     	 ldr r1,.L93+28
 1912 004a C822     	 movs r2,#200
 1913 004c 0023     	 movs r3,#0
 1914 004e FFF7FEFF 	 bl xTaskCreate
 517:../main.c     **** 	xTaskCreate(BACKWARD_Task, "BACKWARD", 200, NULL, tskIDLE_PRIORITY, &BACKWARD_Handle);
 1915              	 .loc 5 517 0
 1916 0052 0023     	 movs r3,#0
 1917 0054 0093     	 str r3,[sp]
 1918 0056 6F4B     	 ldr r3,.L93+32
 1919 0058 0193     	 str r3,[sp,#4]
 1920 005a 6F48     	 ldr r0,.L93+36
 1921 005c 6F49     	 ldr r1,.L93+40
 1922 005e C822     	 movs r2,#200
 1923 0060 0023     	 movs r3,#0
 1924 0062 FFF7FEFF 	 bl xTaskCreate
 518:../main.c     **** 	xTaskCreate(LEFT_Task, "LEFT", 200, NULL, tskIDLE_PRIORITY, &LEFT_Handle);
 1925              	 .loc 5 518 0
 1926 0066 0023     	 movs r3,#0
 1927 0068 0093     	 str r3,[sp]
 1928 006a 6D4B     	 ldr r3,.L93+44
 1929 006c 0193     	 str r3,[sp,#4]
 1930 006e 6D48     	 ldr r0,.L93+48
 1931 0070 6D49     	 ldr r1,.L93+52
 1932 0072 C822     	 movs r2,#200
 1933 0074 0023     	 movs r3,#0
 1934 0076 FFF7FEFF 	 bl xTaskCreate
 519:../main.c     **** 	xTaskCreate(RIGHT_Task, "RIGHT", 200, NULL, tskIDLE_PRIORITY, &RIGHT_Handle);
 1935              	 .loc 5 519 0
 1936 007a 0023     	 movs r3,#0
 1937 007c 0093     	 str r3,[sp]
 1938 007e 6B4B     	 ldr r3,.L93+56
 1939 0080 0193     	 str r3,[sp,#4]
 1940 0082 6B48     	 ldr r0,.L93+60
 1941 0084 6B49     	 ldr r1,.L93+64
 1942 0086 C822     	 movs r2,#200
 1943 0088 0023     	 movs r3,#0
 1944 008a FFF7FEFF 	 bl xTaskCreate
 520:../main.c     **** 
 521:../main.c     **** 	xTaskCreate(UP_Task, "UP", 200, NULL, tskIDLE_PRIORITY, &UP_Handle);
 1945              	 .loc 5 521 0
 1946 008e 0023     	 movs r3,#0
 1947 0090 0093     	 str r3,[sp]
 1948 0092 694B     	 ldr r3,.L93+68
 1949 0094 0193     	 str r3,[sp,#4]
 1950 0096 6948     	 ldr r0,.L93+72
 1951 0098 6949     	 ldr r1,.L93+76
 1952 009a C822     	 movs r2,#200
 1953 009c 0023     	 movs r3,#0
 1954 009e FFF7FEFF 	 bl xTaskCreate
 522:../main.c     **** 	xTaskCreate(DOWN_Task, "DOWN", 200, NULL, tskIDLE_PRIORITY, &DOWN_Handle);
 1955              	 .loc 5 522 0
 1956 00a2 0023     	 movs r3,#0
 1957 00a4 0093     	 str r3,[sp]
 1958 00a6 674B     	 ldr r3,.L93+80
 1959 00a8 0193     	 str r3,[sp,#4]
 1960 00aa 6748     	 ldr r0,.L93+84
 1961 00ac 6749     	 ldr r1,.L93+88
 1962 00ae C822     	 movs r2,#200
 1963 00b0 0023     	 movs r3,#0
 1964 00b2 FFF7FEFF 	 bl xTaskCreate
 523:../main.c     **** 	xTaskCreate(OPEN_Task, "OPEN", 200, NULL, tskIDLE_PRIORITY, &OPEN_Handle);
 1965              	 .loc 5 523 0
 1966 00b6 0023     	 movs r3,#0
 1967 00b8 0093     	 str r3,[sp]
 1968 00ba 654B     	 ldr r3,.L93+92
 1969 00bc 0193     	 str r3,[sp,#4]
 1970 00be 6548     	 ldr r0,.L93+96
 1971 00c0 6549     	 ldr r1,.L93+100
 1972 00c2 C822     	 movs r2,#200
 1973 00c4 0023     	 movs r3,#0
 1974 00c6 FFF7FEFF 	 bl xTaskCreate
 524:../main.c     **** 	xTaskCreate(CLOSE_Task, "CLOSE", 200, NULL, tskIDLE_PRIORITY, &CLOSE_Handle);
 1975              	 .loc 5 524 0
 1976 00ca 0023     	 movs r3,#0
 1977 00cc 0093     	 str r3,[sp]
 1978 00ce 634B     	 ldr r3,.L93+104
 1979 00d0 0193     	 str r3,[sp,#4]
 1980 00d2 6348     	 ldr r0,.L93+108
 1981 00d4 6349     	 ldr r1,.L93+112
 1982 00d6 C822     	 movs r2,#200
 1983 00d8 0023     	 movs r3,#0
 1984 00da FFF7FEFF 	 bl xTaskCreate
 525:../main.c     **** 	xTaskCreate(HOLD_Task, "HOLD", 200, NULL, tskIDLE_PRIORITY, &HOLD_Handle);
 1985              	 .loc 5 525 0
 1986 00de 0023     	 movs r3,#0
 1987 00e0 0093     	 str r3,[sp]
 1988 00e2 614B     	 ldr r3,.L93+116
 1989 00e4 0193     	 str r3,[sp,#4]
 1990 00e6 6148     	 ldr r0,.L93+120
 1991 00e8 6149     	 ldr r1,.L93+124
 1992 00ea C822     	 movs r2,#200
 1993 00ec 0023     	 movs r3,#0
 1994 00ee FFF7FEFF 	 bl xTaskCreate
 526:../main.c     **** 
 527:../main.c     **** 	xTaskCreate(ROTATE_Task, "ROTATE", 200, NULL, tskIDLE_PRIORITY, &ROTATE_Handle);
 1995              	 .loc 5 527 0
 1996 00f2 0023     	 movs r3,#0
 1997 00f4 0093     	 str r3,[sp]
 1998 00f6 5F4B     	 ldr r3,.L93+128
 1999 00f8 0193     	 str r3,[sp,#4]
 2000 00fa 5F48     	 ldr r0,.L93+132
 2001 00fc 5F49     	 ldr r1,.L93+136
 2002 00fe C822     	 movs r2,#200
 2003 0100 0023     	 movs r3,#0
 2004 0102 FFF7FEFF 	 bl xTaskCreate
 528:../main.c     **** 	xTaskCreate(DIRECTION_Task, "DIRECTION", 200, NULL, tskIDLE_PRIORITY, &DIRECTION_Handle);
 2005              	 .loc 5 528 0
 2006 0106 0023     	 movs r3,#0
 2007 0108 0093     	 str r3,[sp]
 2008 010a 5D4B     	 ldr r3,.L93+140
 2009 010c 0193     	 str r3,[sp,#4]
 2010 010e 5D48     	 ldr r0,.L93+144
 2011 0110 5D49     	 ldr r1,.L93+148
 2012 0112 C822     	 movs r2,#200
 2013 0114 0023     	 movs r3,#0
 2014 0116 FFF7FEFF 	 bl xTaskCreate
 529:../main.c     **** 	xTaskCreate(CLAMP_Task, "CLAMP", 200, NULL, tskIDLE_PRIORITY, &CLAMP_Handle);
 2015              	 .loc 5 529 0
 2016 011a 0023     	 movs r3,#0
 2017 011c 0093     	 str r3,[sp]
 2018 011e 5B4B     	 ldr r3,.L93+152
 2019 0120 0193     	 str r3,[sp,#4]
 2020 0122 5B48     	 ldr r0,.L93+156
 2021 0124 5B49     	 ldr r1,.L93+160
 2022 0126 C822     	 movs r2,#200
 2023 0128 0023     	 movs r3,#0
 2024 012a FFF7FEFF 	 bl xTaskCreate
 530:../main.c     **** 
 531:../main.c     **** 
 532:../main.c     **** 	FORWARD_interruptSemaphore = xSemaphoreCreateBinary();
 2025              	 .loc 5 532 0
 2026 012e 0120     	 movs r0,#1
 2027 0130 0021     	 movs r1,#0
 2028 0132 0322     	 movs r2,#3
 2029 0134 FFF7FEFF 	 bl xQueueGenericCreate
 2030 0138 0246     	 mov r2,r0
 2031 013a 574B     	 ldr r3,.L93+164
 2032 013c 1A60     	 str r2,[r3]
 533:../main.c     **** 	BACKWARD_interruptSemaphore = xSemaphoreCreateBinary();
 2033              	 .loc 5 533 0
 2034 013e 0120     	 movs r0,#1
 2035 0140 0021     	 movs r1,#0
 2036 0142 0322     	 movs r2,#3
 2037 0144 FFF7FEFF 	 bl xQueueGenericCreate
 2038 0148 0246     	 mov r2,r0
 2039 014a 544B     	 ldr r3,.L93+168
 2040 014c 1A60     	 str r2,[r3]
 534:../main.c     **** 	LEFT_interruptSemaphore = xSemaphoreCreateBinary();
 2041              	 .loc 5 534 0
 2042 014e 0120     	 movs r0,#1
 2043 0150 0021     	 movs r1,#0
 2044 0152 0322     	 movs r2,#3
 2045 0154 FFF7FEFF 	 bl xQueueGenericCreate
 2046 0158 0246     	 mov r2,r0
 2047 015a 514B     	 ldr r3,.L93+172
 2048 015c 1A60     	 str r2,[r3]
 535:../main.c     **** 	RIGHT_interruptSemaphore = xSemaphoreCreateBinary();
 2049              	 .loc 5 535 0
 2050 015e 0120     	 movs r0,#1
 2051 0160 0021     	 movs r1,#0
 2052 0162 0322     	 movs r2,#3
 2053 0164 FFF7FEFF 	 bl xQueueGenericCreate
 2054 0168 0246     	 mov r2,r0
 2055 016a 4E4B     	 ldr r3,.L93+176
 2056 016c 1A60     	 str r2,[r3]
 536:../main.c     **** 
 537:../main.c     **** 	UP_interruptSemaphore = xSemaphoreCreateBinary();
 2057              	 .loc 5 537 0
 2058 016e 0120     	 movs r0,#1
 2059 0170 0021     	 movs r1,#0
 2060 0172 0322     	 movs r2,#3
 2061 0174 FFF7FEFF 	 bl xQueueGenericCreate
 2062 0178 0246     	 mov r2,r0
 2063 017a 4B4B     	 ldr r3,.L93+180
 2064 017c 1A60     	 str r2,[r3]
 538:../main.c     **** 	DOWN_interruptSemaphore = xSemaphoreCreateBinary();
 2065              	 .loc 5 538 0
 2066 017e 0120     	 movs r0,#1
 2067 0180 0021     	 movs r1,#0
 2068 0182 0322     	 movs r2,#3
 2069 0184 FFF7FEFF 	 bl xQueueGenericCreate
 2070 0188 0246     	 mov r2,r0
 2071 018a 484B     	 ldr r3,.L93+184
 2072 018c 1A60     	 str r2,[r3]
 539:../main.c     **** 	OPEN_interruptSemaphore = xSemaphoreCreateBinary();
 2073              	 .loc 5 539 0
 2074 018e 0120     	 movs r0,#1
 2075 0190 0021     	 movs r1,#0
 2076 0192 0322     	 movs r2,#3
 2077 0194 FFF7FEFF 	 bl xQueueGenericCreate
 2078 0198 0246     	 mov r2,r0
 2079 019a 454B     	 ldr r3,.L93+188
 2080 019c 1A60     	 str r2,[r3]
 540:../main.c     **** 	CLOSE_interruptSemaphore = xSemaphoreCreateBinary();
 2081              	 .loc 5 540 0
 2082 019e 0120     	 movs r0,#1
 2083 01a0 0021     	 movs r1,#0
 2084 01a2 0322     	 movs r2,#3
 2085 01a4 FFF7FEFF 	 bl xQueueGenericCreate
 2086 01a8 0246     	 mov r2,r0
 2087 01aa 424B     	 ldr r3,.L93+192
 2088 01ac 1A60     	 str r2,[r3]
 541:../main.c     **** 	HOLD_interruptSemaphore = xSemaphoreCreateBinary();
 2089              	 .loc 5 541 0
 2090 01ae 0120     	 movs r0,#1
 2091 01b0 0021     	 movs r1,#0
 2092 01b2 0322     	 movs r2,#3
 2093 01b4 FFF7FEFF 	 bl xQueueGenericCreate
 2094 01b8 0246     	 mov r2,r0
 2095 01ba 3F4B     	 ldr r3,.L93+196
 2096 01bc 1A60     	 str r2,[r3]
 542:../main.c     **** 
 543:../main.c     **** 	ROTATE_interruptSemaphore = xSemaphoreCreateBinary();
 2097              	 .loc 5 543 0
 2098 01be 0120     	 movs r0,#1
 2099 01c0 0021     	 movs r1,#0
 2100 01c2 0322     	 movs r2,#3
 2101 01c4 FFF7FEFF 	 bl xQueueGenericCreate
 2102 01c8 0246     	 mov r2,r0
 2103 01ca 3C4B     	 ldr r3,.L93+200
 2104 01cc 1A60     	 str r2,[r3]
 544:../main.c     **** 	DIRECTION_interruptSemaphore = xSemaphoreCreateBinary();
 2105              	 .loc 5 544 0
 2106 01ce 0120     	 movs r0,#1
 2107 01d0 0021     	 movs r1,#0
 2108 01d2 0322     	 movs r2,#3
 2109 01d4 FFF7FEFF 	 bl xQueueGenericCreate
 2110 01d8 0246     	 mov r2,r0
 2111 01da 394B     	 ldr r3,.L93+204
 2112 01dc 1A60     	 str r2,[r3]
 545:../main.c     **** 	CLAMP_interruptSemaphore = xSemaphoreCreateBinary();
 2113              	 .loc 5 545 0
 2114 01de 0120     	 movs r0,#1
 2115 01e0 0021     	 movs r1,#0
 2116 01e2 0322     	 movs r2,#3
 2117 01e4 FFF7FEFF 	 bl xQueueGenericCreate
 2118 01e8 0246     	 mov r2,r0
 2119 01ea 364B     	 ldr r3,.L93+208
 2120 01ec 1A60     	 str r2,[r3]
 546:../main.c     **** 
 547:../main.c     **** 	vTaskStartScheduler();
 2121              	 .loc 5 547 0
 2122 01ee FFF7FEFF 	 bl vTaskStartScheduler
 2123              	.L92:
 548:../main.c     **** 	// Initialize the FreeRTOS
 549:../main.c     **** 
 550:../main.c     **** 
 551:../main.c     **** 
 552:../main.c     **** 
 553:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 554:../main.c     ****   while(1U)
 555:../main.c     ****   {
 556:../main.c     **** 
 557:../main.c     ****   }
 2124              	 .loc 5 557 0 discriminator 2
 2125 01f2 FEE7     	 b .L92
 2126              	.L94:
 2127              	 .align 2
 2128              	.L93:
 2129 01f4 00000000 	 .word PWM_LIFT
 2130 01f8 00000000 	 .word PWM_ROTATE
 2131 01fc 00000000 	 .word LED_BUS_IO
 2132 0200 00000000 	 .word DIGITAL_IO_0
 2133 0204 00000000 	 .word TLE94112EL_0
 2134 0208 00000000 	 .word FORWARD_Handle
 2135 020c 00000000 	 .word FORWARD_Task
 2136 0210 00000000 	 .word .LC0
 2137 0214 00000000 	 .word BACKWARD_Handle
 2138 0218 00000000 	 .word BACKWARD_Task
 2139 021c 08000000 	 .word .LC1
 2140 0220 00000000 	 .word LEFT_Handle
 2141 0224 00000000 	 .word LEFT_Task
 2142 0228 14000000 	 .word .LC2
 2143 022c 00000000 	 .word RIGHT_Handle
 2144 0230 00000000 	 .word RIGHT_Task
 2145 0234 1C000000 	 .word .LC3
 2146 0238 00000000 	 .word UP_Handle
 2147 023c 00000000 	 .word UP_Task
 2148 0240 24000000 	 .word .LC4
 2149 0244 00000000 	 .word DOWN_Handle
 2150 0248 00000000 	 .word DOWN_Task
 2151 024c 28000000 	 .word .LC5
 2152 0250 00000000 	 .word OPEN_Handle
 2153 0254 00000000 	 .word OPEN_Task
 2154 0258 30000000 	 .word .LC6
 2155 025c 00000000 	 .word CLOSE_Handle
 2156 0260 00000000 	 .word CLOSE_Task
 2157 0264 38000000 	 .word .LC7
 2158 0268 00000000 	 .word HOLD_Handle
 2159 026c 00000000 	 .word HOLD_Task
 2160 0270 40000000 	 .word .LC8
 2161 0274 00000000 	 .word ROTATE_Handle
 2162 0278 00000000 	 .word ROTATE_Task
 2163 027c 48000000 	 .word .LC9
 2164 0280 00000000 	 .word DIRECTION_Handle
 2165 0284 00000000 	 .word DIRECTION_Task
 2166 0288 50000000 	 .word .LC10
 2167 028c 00000000 	 .word CLAMP_Handle
 2168 0290 00000000 	 .word CLAMP_Task
 2169 0294 5C000000 	 .word .LC11
 2170 0298 00000000 	 .word FORWARD_interruptSemaphore
 2171 029c 00000000 	 .word BACKWARD_interruptSemaphore
 2172 02a0 00000000 	 .word LEFT_interruptSemaphore
 2173 02a4 00000000 	 .word RIGHT_interruptSemaphore
 2174 02a8 00000000 	 .word UP_interruptSemaphore
 2175 02ac 00000000 	 .word DOWN_interruptSemaphore
 2176 02b0 00000000 	 .word OPEN_interruptSemaphore
 2177 02b4 00000000 	 .word CLOSE_interruptSemaphore
 2178 02b8 00000000 	 .word HOLD_interruptSemaphore
 2179 02bc 00000000 	 .word ROTATE_interruptSemaphore
 2180 02c0 00000000 	 .word DIRECTION_interruptSemaphore
 2181 02c4 00000000 	 .word CLAMP_interruptSemaphore
 2182              	 .cfi_endproc
 2183              	.LFE442:
 2185              	 .section .text.ERU0_2_IRQHandler,"ax",%progbits
 2186              	 .align 2
 2187              	 .global ERU0_2_IRQHandler
 2188              	 .thumb
 2189              	 .thumb_func
 2191              	ERU0_2_IRQHandler:
 2192              	.LFB443:
 558:../main.c     **** }
 559:../main.c     **** 
 560:../main.c     **** void ROTATE_IRQHandler(void){
 2193              	 .loc 5 560 0
 2194              	 .cfi_startproc
 2195              	 
 2196              	 
 2197 0000 80B5     	 push {r7,lr}
 2198              	.LCFI78:
 2199              	 .cfi_def_cfa_offset 8
 2200              	 .cfi_offset 7,-8
 2201              	 .cfi_offset 14,-4
 2202 0002 00AF     	 add r7,sp,#0
 2203              	.LCFI79:
 2204              	 .cfi_def_cfa_register 7
 561:../main.c     **** 
 562:../main.c     **** 	xSemaphoreGiveFromISR(ROTATE_interruptSemaphore, NULL);
 2205              	 .loc 5 562 0
 2206 0004 034B     	 ldr r3,.L96
 2207 0006 1B68     	 ldr r3,[r3]
 2208 0008 1846     	 mov r0,r3
 2209 000a 0021     	 movs r1,#0
 2210 000c FFF7FEFF 	 bl xQueueGiveFromISR
 563:../main.c     **** }
 2211              	 .loc 5 563 0
 2212 0010 80BD     	 pop {r7,pc}
 2213              	.L97:
 2214 0012 00BF     	 .align 2
 2215              	.L96:
 2216 0014 00000000 	 .word ROTATE_interruptSemaphore
 2217              	 .cfi_endproc
 2218              	.LFE443:
 2220              	 .section .text.ERU0_3_IRQHandler,"ax",%progbits
 2221              	 .align 2
 2222              	 .global ERU0_3_IRQHandler
 2223              	 .thumb
 2224              	 .thumb_func
 2226              	ERU0_3_IRQHandler:
 2227              	.LFB444:
 564:../main.c     **** 
 565:../main.c     **** void DIRECTION_IRQHandler(void){
 2228              	 .loc 5 565 0
 2229              	 .cfi_startproc
 2230              	 
 2231              	 
 2232 0000 80B5     	 push {r7,lr}
 2233              	.LCFI80:
 2234              	 .cfi_def_cfa_offset 8
 2235              	 .cfi_offset 7,-8
 2236              	 .cfi_offset 14,-4
 2237 0002 00AF     	 add r7,sp,#0
 2238              	.LCFI81:
 2239              	 .cfi_def_cfa_register 7
 566:../main.c     **** 
 567:../main.c     **** 	xSemaphoreGiveFromISR(DIRECTION_interruptSemaphore, NULL);
 2240              	 .loc 5 567 0
 2241 0004 034B     	 ldr r3,.L99
 2242 0006 1B68     	 ldr r3,[r3]
 2243 0008 1846     	 mov r0,r3
 2244 000a 0021     	 movs r1,#0
 2245 000c FFF7FEFF 	 bl xQueueGiveFromISR
 568:../main.c     **** }
 2246              	 .loc 5 568 0
 2247 0010 80BD     	 pop {r7,pc}
 2248              	.L100:
 2249 0012 00BF     	 .align 2
 2250              	.L99:
 2251 0014 00000000 	 .word DIRECTION_interruptSemaphore
 2252              	 .cfi_endproc
 2253              	.LFE444:
 2255              	 .section .text.ERU1_0_IRQHandler,"ax",%progbits
 2256              	 .align 2
 2257              	 .global ERU1_0_IRQHandler
 2258              	 .thumb
 2259              	 .thumb_func
 2261              	ERU1_0_IRQHandler:
 2262              	.LFB445:
 569:../main.c     **** 
 570:../main.c     **** void CLAMP_IRQHandler(void){
 2263              	 .loc 5 570 0
 2264              	 .cfi_startproc
 2265              	 
 2266              	 
 2267 0000 80B5     	 push {r7,lr}
 2268              	.LCFI82:
 2269              	 .cfi_def_cfa_offset 8
 2270              	 .cfi_offset 7,-8
 2271              	 .cfi_offset 14,-4
 2272 0002 00AF     	 add r7,sp,#0
 2273              	.LCFI83:
 2274              	 .cfi_def_cfa_register 7
 571:../main.c     **** 
 572:../main.c     **** 	xSemaphoreGiveFromISR(CLAMP_interruptSemaphore, NULL);
 2275              	 .loc 5 572 0
 2276 0004 034B     	 ldr r3,.L102
 2277 0006 1B68     	 ldr r3,[r3]
 2278 0008 1846     	 mov r0,r3
 2279 000a 0021     	 movs r1,#0
 2280 000c FFF7FEFF 	 bl xQueueGiveFromISR
 573:../main.c     **** }
 2281              	 .loc 5 573 0
 2282 0010 80BD     	 pop {r7,pc}
 2283              	.L103:
 2284 0012 00BF     	 .align 2
 2285              	.L102:
 2286 0014 00000000 	 .word CLAMP_interruptSemaphore
 2287              	 .cfi_endproc
 2288              	.LFE445:
 2290              	 .section .text.ERU0_0_IRQHandler,"ax",%progbits
 2291              	 .align 2
 2292              	 .global ERU0_0_IRQHandler
 2293              	 .thumb
 2294              	 .thumb_func
 2296              	ERU0_0_IRQHandler:
 2297              	.LFB446:
 574:../main.c     **** 
 575:../main.c     **** void HOLD_IRQHandler(void){
 2298              	 .loc 5 575 0
 2299              	 .cfi_startproc
 2300              	 
 2301              	 
 2302 0000 80B5     	 push {r7,lr}
 2303              	.LCFI84:
 2304              	 .cfi_def_cfa_offset 8
 2305              	 .cfi_offset 7,-8
 2306              	 .cfi_offset 14,-4
 2307 0002 00AF     	 add r7,sp,#0
 2308              	.LCFI85:
 2309              	 .cfi_def_cfa_register 7
 576:../main.c     **** 
 577:../main.c     **** 	xSemaphoreGiveFromISR(HOLD_interruptSemaphore, NULL);
 2310              	 .loc 5 577 0
 2311 0004 034B     	 ldr r3,.L105
 2312 0006 1B68     	 ldr r3,[r3]
 2313 0008 1846     	 mov r0,r3
 2314 000a 0021     	 movs r1,#0
 2315 000c FFF7FEFF 	 bl xQueueGiveFromISR
 578:../main.c     **** }
 2316              	 .loc 5 578 0
 2317 0010 80BD     	 pop {r7,pc}
 2318              	.L106:
 2319 0012 00BF     	 .align 2
 2320              	.L105:
 2321 0014 00000000 	 .word HOLD_interruptSemaphore
 2322              	 .cfi_endproc
 2323              	.LFE446:
 2325              	 .section .text.tle94112el_enable,"ax",%progbits
 2326              	 .align 2
 2327              	 .thumb
 2328              	 .thumb_func
 2330              	tle94112el_enable:
 2331              	.LFB447:
 579:../main.c     **** 
 580:../main.c     **** static void tle94112el_enable(void)
 581:../main.c     **** 
 582:../main.c     **** {
 2332              	 .loc 5 582 0
 2333              	 .cfi_startproc
 2334              	 
 2335              	 
 2336 0000 80B5     	 push {r7,lr}
 2337              	.LCFI86:
 2338              	 .cfi_def_cfa_offset 8
 2339              	 .cfi_offset 7,-8
 2340              	 .cfi_offset 14,-4
 2341 0002 00AF     	 add r7,sp,#0
 2342              	.LCFI87:
 2343              	 .cfi_def_cfa_register 7
 583:../main.c     **** 
 584:../main.c     ****   DIGITAL_IO_SetOutputHigh(&TLE94112_ENABLE);
 2344              	 .loc 5 584 0
 2345 0004 0148     	 ldr r0,.L108
 2346 0006 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 585:../main.c     **** 
 586:../main.c     **** }
 2347              	 .loc 5 586 0
 2348 000a 80BD     	 pop {r7,pc}
 2349              	.L109:
 2350              	 .align 2
 2351              	.L108:
 2352 000c 00000000 	 .word TLE94112_ENABLE
 2353              	 .cfi_endproc
 2354              	.LFE447:
 2356              	 .section .text.tle94112el_disable,"ax",%progbits
 2357              	 .align 2
 2358              	 .thumb
 2359              	 .thumb_func
 2361              	tle94112el_disable:
 2362              	.LFB448:
 587:../main.c     **** 
 588:../main.c     **** static void tle94112el_disable(void)
 589:../main.c     **** 
 590:../main.c     **** {
 2363              	 .loc 5 590 0
 2364              	 .cfi_startproc
 2365              	 
 2366              	 
 2367 0000 80B5     	 push {r7,lr}
 2368              	.LCFI88:
 2369              	 .cfi_def_cfa_offset 8
 2370              	 .cfi_offset 7,-8
 2371              	 .cfi_offset 14,-4
 2372 0002 00AF     	 add r7,sp,#0
 2373              	.LCFI89:
 2374              	 .cfi_def_cfa_register 7
 591:../main.c     **** 
 592:../main.c     ****   DIGITAL_IO_SetOutputLow(&TLE94112_ENABLE);
 2375              	 .loc 5 592 0
 2376 0004 0148     	 ldr r0,.L111
 2377 0006 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 593:../main.c     **** 
 594:../main.c     **** }
 2378              	 .loc 5 594 0
 2379 000a 80BD     	 pop {r7,pc}
 2380              	.L112:
 2381              	 .align 2
 2382              	.L111:
 2383 000c 00000000 	 .word TLE94112_ENABLE
 2384              	 .cfi_endproc
 2385              	.LFE448:
 2387              	 .section .text.tle94112el_spi_transfer,"ax",%progbits
 2388              	 .align 2
 2389              	 .thumb
 2390              	 .thumb_func
 2392              	tle94112el_spi_transfer:
 2393              	.LFB449:
 595:../main.c     **** 
 596:../main.c     **** static int32_t tle94112el_spi_transfer(uint8_t *tx_data, uint8_t *rx_data)
 597:../main.c     **** 
 598:../main.c     **** {
 2394              	 .loc 5 598 0
 2395              	 .cfi_startproc
 2396              	 
 2397              	 
 2398 0000 80B5     	 push {r7,lr}
 2399              	.LCFI90:
 2400              	 .cfi_def_cfa_offset 8
 2401              	 .cfi_offset 7,-8
 2402              	 .cfi_offset 14,-4
 2403 0002 82B0     	 sub sp,sp,#8
 2404              	.LCFI91:
 2405              	 .cfi_def_cfa_offset 16
 2406 0004 00AF     	 add r7,sp,#0
 2407              	.LCFI92:
 2408              	 .cfi_def_cfa_register 7
 2409 0006 7860     	 str r0,[r7,#4]
 2410 0008 3960     	 str r1,[r7]
 599:../main.c     **** 
 600:../main.c     ****   XMC_SPI_CH_SetBitOrderLsbFirst(SPI_MASTER_0.channel);
 2411              	 .loc 5 600 0
 2412 000a 0E4B     	 ldr r3,.L116
 2413 000c 1B68     	 ldr r3,[r3]
 2414 000e 1846     	 mov r0,r3
 2415 0010 FFF7FEFF 	 bl XMC_SPI_CH_SetBitOrderLsbFirst
 601:../main.c     **** 
 602:../main.c     **** 
 603:../main.c     **** 
 604:../main.c     ****   DIGITAL_IO_SetOutputLow(&TLE94112_CS);
 2416              	 .loc 5 604 0
 2417 0014 0C48     	 ldr r0,.L116+4
 2418 0016 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 605:../main.c     **** 
 606:../main.c     **** 
 607:../main.c     **** 
 608:../main.c     ****   SPI_MASTER_Transfer(&SPI_MASTER_0, tx_data, rx_data, 2);
 2419              	 .loc 5 608 0
 2420 001a 0A48     	 ldr r0,.L116
 2421 001c 7968     	 ldr r1,[r7,#4]
 2422 001e 3A68     	 ldr r2,[r7]
 2423 0020 0223     	 movs r3,#2
 2424 0022 FFF7FEFF 	 bl SPI_MASTER_Transfer
 609:../main.c     **** 
 610:../main.c     ****   while(SPI_MASTER_0.runtime->rx_busy);
 2425              	 .loc 5 610 0
 2426 0026 00BF     	 nop
 2427              	.L114:
 2428              	 .loc 5 610 0 is_stmt 0 discriminator 1
 2429 0028 064B     	 ldr r3,.L116
 2430 002a 9B68     	 ldr r3,[r3,#8]
 2431 002c DB7F     	 ldrb r3,[r3,#31]
 2432 002e DBB2     	 uxtb r3,r3
 2433 0030 002B     	 cmp r3,#0
 2434 0032 F9D1     	 bne .L114
 611:../main.c     **** 
 612:../main.c     **** 
 613:../main.c     **** 
 614:../main.c     ****   DIGITAL_IO_SetOutputHigh(&TLE94112_CS);
 2435              	 .loc 5 614 0 is_stmt 1
 2436 0034 0448     	 ldr r0,.L116+4
 2437 0036 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 615:../main.c     **** 
 616:../main.c     ****   return 0;
 2438              	 .loc 5 616 0
 2439 003a 0023     	 movs r3,#0
 617:../main.c     **** 
 618:../main.c     **** }
 2440              	 .loc 5 618 0
 2441 003c 1846     	 mov r0,r3
 2442 003e 0837     	 adds r7,r7,#8
 2443              	.LCFI93:
 2444              	 .cfi_def_cfa_offset 8
 2445 0040 BD46     	 mov sp,r7
 2446              	.LCFI94:
 2447              	 .cfi_def_cfa_register 13
 2448              	 
 2449 0042 80BD     	 pop {r7,pc}
 2450              	.L117:
 2451              	 .align 2
 2452              	.L116:
 2453 0044 00000000 	 .word SPI_MASTER_0
 2454 0048 00000000 	 .word TLE94112_CS
 2455              	 .cfi_endproc
 2456              	.LFE449:
 2458              	 .text
 2459              	.Letext0:
 2460              	 .file 6 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2461              	 .file 7 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2462              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 2463              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc4_gpio.h"
 2464              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/BUS_IO/bus_io.h"
 2465              	 .file 11 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc4_scu.h"
 2466              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_ccu8.h"
 2467              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 2468              	 .file 14 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_ccu4.h"
 2469              	 .file 15 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 2470              	 .file 16 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PWM/pwm.h"
 2471              	 .file 17 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_eru.h"
 2472              	 .file 18 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
 2473              	 .file 19 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/FREERTOS/task.h"
 2474              	 .file 20 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/FREERTOS/queue.h"
 2475              	 .file 21 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/FREERTOS/semphr.h"
 2476              	 .file 22 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/XMCLib/inc/xmc_usic.h"
 2477              	 .file 23 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/SPI_MASTER/spi_master.h"
 2478              	 .file 24 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DAVE.h"
 2479              	 .file 25 "../ext_lib/tle94112el.h"
 2480              	 .file 26 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Include/cmsis_gcc.h"
 2481              	 .file 27 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Include/core_cm4.h"
 2482              	 .file 28 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
 2483              	 .file 29 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/BUS_IO/bus_io_extern.h"
 2484              	 .file 30 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 2485              	 .file 31 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PWM/PWM_Extern.h"
 2486              	 .file 32 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 2487              	 .file 33 "C:/Workspaces/DAVE-4.4.2-64Bit/GarbageCollector/XMC4200_GC/Dave/Generated/SPI_MASTER/spi_master_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:163    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:167    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:207    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:211    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:250    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:254    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:296    .text.XMC_SPI_CH_SetBitOrderLsbFirst:00000000 $t
    {standard input}:300    .text.XMC_SPI_CH_SetBitOrderLsbFirst:00000000 XMC_SPI_CH_SetBitOrderLsbFirst
                            *COM*:00000002 direction_status
                            *COM*:00000002 clamp_status
                            *COM*:00000004 pin_status
    {standard input}:349    .rodata.green_led:00000000 green_led
    {standard input}:346    .rodata.green_led:00000000 $d
    {standard input}:356    .rodata.red_led:00000000 red_led
    {standard input}:353    .rodata.red_led:00000000 $d
    {standard input}:363    .rodata.xDelay:00000000 xDelay
    {standard input}:360    .rodata.xDelay:00000000 $d
    {standard input}:366    .rodata.TLE94112EL_0:00000000 $d
    {standard input}:369    .rodata.TLE94112EL_0:00000000 TLE94112EL_0
    {standard input}:2330   .text.tle94112el_enable:00000000 tle94112el_enable
    {standard input}:2361   .text.tle94112el_disable:00000000 tle94112el_disable
    {standard input}:2392   .text.tle94112el_spi_transfer:00000000 tle94112el_spi_transfer
    {standard input}:378    .bss.FORWARD_Handle:00000000 FORWARD_Handle
    {standard input}:375    .bss.FORWARD_Handle:00000000 $d
    {standard input}:385    .bss.BACKWARD_Handle:00000000 BACKWARD_Handle
    {standard input}:382    .bss.BACKWARD_Handle:00000000 $d
    {standard input}:392    .bss.LEFT_Handle:00000000 LEFT_Handle
    {standard input}:389    .bss.LEFT_Handle:00000000 $d
    {standard input}:399    .bss.RIGHT_Handle:00000000 RIGHT_Handle
    {standard input}:396    .bss.RIGHT_Handle:00000000 $d
    {standard input}:406    .bss.UP_Handle:00000000 UP_Handle
    {standard input}:403    .bss.UP_Handle:00000000 $d
    {standard input}:413    .bss.DOWN_Handle:00000000 DOWN_Handle
    {standard input}:410    .bss.DOWN_Handle:00000000 $d
    {standard input}:420    .bss.OPEN_Handle:00000000 OPEN_Handle
    {standard input}:417    .bss.OPEN_Handle:00000000 $d
    {standard input}:427    .bss.CLOSE_Handle:00000000 CLOSE_Handle
    {standard input}:424    .bss.CLOSE_Handle:00000000 $d
    {standard input}:434    .bss.HOLD_Handle:00000000 HOLD_Handle
    {standard input}:431    .bss.HOLD_Handle:00000000 $d
    {standard input}:441    .bss.ROTATE_Handle:00000000 ROTATE_Handle
    {standard input}:438    .bss.ROTATE_Handle:00000000 $d
    {standard input}:448    .bss.DIRECTION_Handle:00000000 DIRECTION_Handle
    {standard input}:445    .bss.DIRECTION_Handle:00000000 $d
    {standard input}:455    .bss.CLAMP_Handle:00000000 CLAMP_Handle
    {standard input}:452    .bss.CLAMP_Handle:00000000 $d
                            *COM*:00000004 FORWARD_interruptSemaphore
                            *COM*:00000004 BACKWARD_interruptSemaphore
                            *COM*:00000004 LEFT_interruptSemaphore
                            *COM*:00000004 RIGHT_interruptSemaphore
                            *COM*:00000004 UP_interruptSemaphore
                            *COM*:00000004 DOWN_interruptSemaphore
                            *COM*:00000004 OPEN_interruptSemaphore
                            *COM*:00000004 CLOSE_interruptSemaphore
                            *COM*:00000004 HOLD_interruptSemaphore
                            *COM*:00000004 ROTATE_interruptSemaphore
                            *COM*:00000004 DIRECTION_interruptSemaphore
                            *COM*:00000004 CLAMP_interruptSemaphore
    {standard input}:470    .text.FORWARD_Task:00000000 $t
    {standard input}:475    .text.FORWARD_Task:00000000 FORWARD_Task
    {standard input}:605    .text.FORWARD_Task:000000d8 $d
    {standard input}:615    .text.BACKWARD_Task:00000000 $t
    {standard input}:620    .text.BACKWARD_Task:00000000 BACKWARD_Task
    {standard input}:749    .text.BACKWARD_Task:000000d8 $d
    {standard input}:759    .text.LEFT_Task:00000000 $t
    {standard input}:764    .text.LEFT_Task:00000000 LEFT_Task
    {standard input}:893    .text.LEFT_Task:000000d8 $d
    {standard input}:903    .text.RIGHT_Task:00000000 $t
    {standard input}:908    .text.RIGHT_Task:00000000 RIGHT_Task
    {standard input}:1037   .text.RIGHT_Task:000000d8 $d
    {standard input}:1047   .text.UP_Task:00000000 $t
    {standard input}:1052   .text.UP_Task:00000000 UP_Task
    {standard input}:1130   .text.UP_Task:00000084 $d
    {standard input}:1136   .text.DOWN_Task:00000000 $t
    {standard input}:1141   .text.DOWN_Task:00000000 DOWN_Task
    {standard input}:1219   .text.DOWN_Task:00000084 $d
    {standard input}:1225   .text.OPEN_Task:00000000 $t
    {standard input}:1230   .text.OPEN_Task:00000000 OPEN_Task
    {standard input}:1290   .text.OPEN_Task:0000004c $d
    {standard input}:1298   .text.CLOSE_Task:00000000 $t
    {standard input}:1303   .text.CLOSE_Task:00000000 CLOSE_Task
    {standard input}:1357   .text.CLOSE_Task:00000044 $d
    {standard input}:1365   .text.HOLD_Task:00000000 $t
    {standard input}:1370   .text.HOLD_Task:00000000 HOLD_Task
    {standard input}:1424   .text.HOLD_Task:00000044 $d
    {standard input}:1432   .text.ROTATE_Task:00000000 $t
    {standard input}:1437   .text.ROTATE_Task:00000000 ROTATE_Task
    {standard input}:1590   .text.ROTATE_Task:00000124 $d
    {standard input}:1599   .text.DIRECTION_Task:00000000 $t
    {standard input}:1604   .text.DIRECTION_Task:00000000 DIRECTION_Task
    {standard input}:1649   .text.DIRECTION_Task:0000003c $d
    {standard input}:1653   .text.DIRECTION_Task:0000004c $t
    {standard input}:1696   .text.DIRECTION_Task:00000088 $d
    {standard input}:1707   .text.CLAMP_Task:00000000 $t
    {standard input}:1712   .text.CLAMP_Task:00000000 CLAMP_Task
    {standard input}:1757   .text.CLAMP_Task:0000003c $d
    {standard input}:1761   .text.CLAMP_Task:0000004c $t
    {standard input}:1804   .text.CLAMP_Task:00000088 $d
    {standard input}:1815   .rodata:00000000 $d
    {standard input}:1852   .text.main:00000000 $t
    {standard input}:1857   .text.main:00000000 main
    {standard input}:2129   .text.main:000001f4 $d
    {standard input}:2186   .text.ERU0_2_IRQHandler:00000000 $t
    {standard input}:2191   .text.ERU0_2_IRQHandler:00000000 ERU0_2_IRQHandler
    {standard input}:2216   .text.ERU0_2_IRQHandler:00000014 $d
    {standard input}:2221   .text.ERU0_3_IRQHandler:00000000 $t
    {standard input}:2226   .text.ERU0_3_IRQHandler:00000000 ERU0_3_IRQHandler
    {standard input}:2251   .text.ERU0_3_IRQHandler:00000014 $d
    {standard input}:2256   .text.ERU1_0_IRQHandler:00000000 $t
    {standard input}:2261   .text.ERU1_0_IRQHandler:00000000 ERU1_0_IRQHandler
    {standard input}:2286   .text.ERU1_0_IRQHandler:00000014 $d
    {standard input}:2291   .text.ERU0_0_IRQHandler:00000000 $t
    {standard input}:2296   .text.ERU0_0_IRQHandler:00000000 ERU0_0_IRQHandler
    {standard input}:2321   .text.ERU0_0_IRQHandler:00000014 $d
    {standard input}:2326   .text.tle94112el_enable:00000000 $t
    {standard input}:2352   .text.tle94112el_enable:0000000c $d
    {standard input}:2357   .text.tle94112el_disable:00000000 $t
    {standard input}:2383   .text.tle94112el_disable:0000000c $d
    {standard input}:2388   .text.tle94112el_spi_transfer:00000000 $t
    {standard input}:2453   .text.tle94112el_spi_transfer:00000044 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xQueueSemaphoreTake
TLE94112EL_SetHBRegdata
vTaskDelay
DIRECTION_INTERRUPT
MOTOR_HIGH
MOTOR_LOW
PWM_SetDutyCycle
PWM_LIFT
CLAMP_INTERRUPT
PWM_CLAMP
HOLD_INTERRUPT
BUS_IO_Write
ROTATE_INTERRUPT
LED_BUS_IO
PWM_ROTATE
BUS_IO_Read
xQueueGiveFromISR
DIRECTION_BUS_IO
CLAMP_BUS_IO
DAVE_Init
TLE94112EL_Enable
xTaskCreate
xQueueGenericCreate
vTaskStartScheduler
DIGITAL_IO_0
TLE94112_ENABLE
SPI_MASTER_Transfer
SPI_MASTER_0
TLE94112_CS
